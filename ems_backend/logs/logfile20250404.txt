2025-04-04 00:25:02.774 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/index.html - null null
2025-04-04 00:25:02.868 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-04 00:25:02.879 +07:00 [INF] Hosting environment: Development
2025-04-04 00:25:02.879 +07:00 [INF] Content root path: D:\Code\Event-Management-System\ems_backend
2025-04-04 00:25:03.017 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/index.html - 200 null text/html;charset=utf-8 254.9811ms
2025-04-04 00:25:03.020 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - null null
2025-04-04 00:25:03.027 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_vs/browserLink - null null
2025-04-04 00:25:03.033 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - 200 13774 application/javascript; charset=utf-8 9.1101ms
2025-04-04 00:25:03.063 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.5556ms
2025-04-04 00:25:03.177 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - null null
2025-04-04 00:25:03.191 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.8445ms
2025-04-04 00:25:19.937 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 00:25:19.946 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:25:19.952 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 00:25:19.974 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 00:25:21.999 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 00:25:22.034 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 00:25:22.044 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2066.9396ms
2025-04-04 00:25:22.045 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 00:25:22.051 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 00:25:22.054 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 2115.9323ms
2025-04-04 00:25:22.055 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:25:22.055 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 00:25:22.065 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 00:25:22.289 +07:00 [INF] Executed DbCommand (89ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 00:25:22.295 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 00:25:22.305 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 239.1631ms
2025-04-04 00:25:22.305 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 00:25:22.305 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 253.8679ms
2025-04-04 00:25:23.613 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:25:23.613 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:25:23.614 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:25:23.614 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:25:23.614 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:25:23.614 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 00:25:23.618 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 00:25:23.618 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 00:25:23.696 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 00:25:23.697 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 00:25:23.698 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 78.9598ms
2025-04-04 00:25:23.698 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:25:23.698 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 85.0368ms
2025-04-04 00:25:23.703 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:25:23.703 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:25:23.703 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:25:23.706 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 00:25:23.722 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 00:25:23.767 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 00:25:23.768 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 00:25:23.769 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 62.1575ms
2025-04-04 00:25:23.769 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:25:23.769 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 66.3474ms
2025-04-04 00:26:29.074 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/index.html - null null
2025-04-04 00:26:29.183 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-04 00:26:29.189 +07:00 [INF] Hosting environment: Development
2025-04-04 00:26:29.189 +07:00 [INF] Content root path: D:\Code\Event-Management-System\ems_backend
2025-04-04 00:26:29.325 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/index.html - 200 null text/html;charset=utf-8 258.8655ms
2025-04-04 00:26:29.331 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - null null
2025-04-04 00:26:29.339 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_vs/browserLink - null null
2025-04-04 00:26:29.340 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - 200 13774 application/javascript; charset=utf-8 7.1345ms
2025-04-04 00:26:29.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.0179ms
2025-04-04 00:26:29.491 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - null null
2025-04-04 00:26:29.507 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.3496ms
2025-04-04 00:26:33.168 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:26:33.168 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:26:33.196 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:26:33.199 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:26:33.205 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:26:33.205 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 00:26:33.262 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 00:26:33.265 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 00:26:34.599 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 00:26:34.599 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 00:26:34.637 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 00:26:34.660 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 1393.9471ms
2025-04-04 00:26:34.661 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:26:34.669 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:26:34.672 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 1504.2998ms
2025-04-04 00:26:34.674 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:26:34.674 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:26:34.683 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 00:26:34.722 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 00:26:34.737 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 1449.4223ms
2025-04-04 00:26:34.737 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 00:26:34.737 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 1569.734ms
2025-04-04 00:26:34.823 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 00:26:34.824 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 00:26:34.825 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 141.5881ms
2025-04-04 00:26:34.825 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:26:34.825 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 156.2744ms
2025-04-04 00:50:11.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:50:11.961 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:50:11.964 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:50:11.965 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 00:50:11.965 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 00:50:11.966 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:50:11.966 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:50:11.966 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 00:50:12.036 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 00:50:12.038 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 00:50:12.039 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 73.2002ms
2025-04-04 00:50:12.039 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 00:50:12.040 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 85.0093ms
2025-04-04 00:50:12.046 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 00:50:12.047 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 00:50:12.048 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 82.5304ms
2025-04-04 00:50:12.049 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 00:50:12.049 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 93.8382ms
2025-04-04 00:50:12.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 00:50:12.261 +07:00 [INF] CORS policy execution successful.
2025-04-04 00:50:12.261 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:50:12.262 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 00:50:12.272 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 00:50:12.273 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 00:50:12.274 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 12.073ms
2025-04-04 00:50:12.275 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 00:50:12.276 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 17.5303ms
2025-04-04 01:05:34.053 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:34.054 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:34.054 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:34.054 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:34.057 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:05:34.057 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:05:34.059 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:05:34.059 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:05:34.086 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:05:34.089 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:05:34.090 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 30.9429ms
2025-04-04 01:05:34.090 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:05:34.090 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 37.1446ms
2025-04-04 01:05:34.091 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:05:34.092 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:05:34.092 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 33.1294ms
2025-04-04 01:05:34.092 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:05:34.092 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 40.1709ms
2025-04-04 01:05:34.110 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:34.110 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:34.110 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:05:34.110 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:05:34.115 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:05:34.115 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:05:34.116 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8199ms
2025-04-04 01:05:34.116 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:05:34.117 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.8354ms
2025-04-04 01:05:54.206 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:05:54.206 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:54.206 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:05:54.210 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:05:54.226 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:05:54.234 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:05:54.236 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 25.95ms
2025-04-04 01:05:54.237 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:05:54.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 31.374ms
2025-04-04 01:05:54.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 01:05:54.242 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:54.242 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:05:54.249 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:05:54.285 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 01:05:54.286 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:05:54.287 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 38.1099ms
2025-04-04 01:05:54.287 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:05:54.288 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 45.988ms
2025-04-04 01:05:55.420 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:55.420 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:55.420 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:55.420 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:55.420 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:05:55.420 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:05:55.420 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:05:55.420 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:05:55.427 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:05:55.429 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:05:55.430 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 9.2865ms
2025-04-04 01:05:55.430 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:05:55.431 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 11.0441ms
2025-04-04 01:05:55.433 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:05:55.436 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:05:55.439 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 19.0597ms
2025-04-04 01:05:55.439 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:05:55.440 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 20.0801ms
2025-04-04 01:05:55.449 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:05:55.449 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:05:55.449 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:05:55.449 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:05:55.455 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:05:55.455 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:05:55.456 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.7763ms
2025-04-04 01:05:55.456 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:05:55.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.5532ms
2025-04-04 01:08:29.148 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:08:29.148 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:08:29.148 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:08:29.148 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:08:29.148 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:08:29.148 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:08:29.148 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:08:29.149 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:08:29.159 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:08:29.161 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:08:29.162 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:08:29.162 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:08:29.162 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 13.6784ms
2025-04-04 01:08:29.162 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:08:29.162 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.7879ms
2025-04-04 01:08:29.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.139ms
2025-04-04 01:08:29.163 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:08:29.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.5986ms
2025-04-04 01:08:29.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:08:29.183 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:08:29.183 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:08:29.183 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:08:29.188 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:08:29.188 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:08:29.189 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.733ms
2025-04-04 01:08:29.189 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:08:29.189 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.7701ms
2025-04-04 01:10:35.601 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:35.601 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:35.602 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:35.602 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:35.602 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:10:35.602 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:10:35.605 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:10:35.605 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:10:35.620 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:10:35.620 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:10:35.625 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:10:35.625 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:35.625 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 20.5105ms
2025-04-04 01:10:35.625 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 20.4365ms
2025-04-04 01:10:35.625 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:10:35.625 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:10:35.626 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 25.0339ms
2025-04-04 01:10:35.626 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 25.5459ms
2025-04-04 01:10:35.631 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:35.632 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:35.632 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:10:35.632 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:10:35.637 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:10:35.638 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:10:35.638 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.3235ms
2025-04-04 01:10:35.638 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:10:35.639 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.531ms
2025-04-04 01:10:42.425 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:10:42.425 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-04 01:10:42.425 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:42.426 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:42.426 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-04 01:10:42.426 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:10:42.426 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:10:42.430 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:10:42.432 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:42.433 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.8491ms
2025-04-04 01:10:42.433 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:10:42.433 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:10:42.433 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.1614ms
2025-04-04 01:10:42.454 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-04 01:10:42.455 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:42.456 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 22.7072ms
2025-04-04 01:10:42.456 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-04 01:10:42.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 31.1964ms
2025-04-04 01:10:43.624 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:10:43.625 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:43.625 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:10:43.625 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:10:43.630 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:10:43.630 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:43.631 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1249ms
2025-04-04 01:10:43.631 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:10:43.632 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.7373ms
2025-04-04 01:10:43.638 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 01:10:43.639 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:43.639 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:10:43.639 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:10:43.671 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 01:10:43.672 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:43.673 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 33.5642ms
2025-04-04 01:10:43.673 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:10:43.673 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 34.8278ms
2025-04-04 01:10:44.753 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:44.753 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:44.753 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:44.753 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:44.753 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:10:44.753 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:10:44.753 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:10:44.754 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:10:44.757 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:10:44.760 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:10:44.785 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:10:44.786 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:10:44.788 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 34.4795ms
2025-04-04 01:10:44.788 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 34.3246ms
2025-04-04 01:10:44.788 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:10:44.788 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:10:44.788 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 35.3023ms
2025-04-04 01:10:44.788 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 35.3023ms
2025-04-04 01:10:44.792 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:10:44.792 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:10:44.792 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:10:44.792 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:10:44.794 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:10:44.795 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:10:44.796 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.7757ms
2025-04-04 01:10:44.796 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:10:44.796 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.9288ms
2025-04-04 01:12:32.586 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:32.586 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:32.586 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:12:32.587 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:12:32.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:32.587 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:32.587 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:12:32.590 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:12:32.596 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:12:32.601 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:12:32.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:12:32.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:12:32.607 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 16.3896ms
2025-04-04 01:12:32.607 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 19.9666ms
2025-04-04 01:12:32.607 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:12:32.607 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:12:32.608 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 22.8978ms
2025-04-04 01:12:32.608 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 22.0478ms
2025-04-04 01:12:32.612 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:32.612 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:32.612 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:12:32.612 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:12:32.617 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:12:32.618 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:12:32.618 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.9875ms
2025-04-04 01:12:32.618 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:12:32.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.7233ms
2025-04-04 01:12:37.618 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:12:37.618 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:37.619 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:12:37.619 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:12:37.622 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:12:37.622 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:12:37.622 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8435ms
2025-04-04 01:12:37.623 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:12:37.623 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8234ms
2025-04-04 01:12:37.629 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 01:12:37.630 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:37.630 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:12:37.631 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:12:37.640 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 01:12:37.641 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:12:37.641 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.2554ms
2025-04-04 01:12:37.641 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:12:37.642 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.5479ms
2025-04-04 01:12:38.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:38.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:38.718 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:38.718 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:38.718 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:12:38.718 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:12:38.719 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:12:38.719 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:12:38.722 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:12:38.725 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:12:38.725 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:12:38.729 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 9.809ms
2025-04-04 01:12:38.732 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:12:38.732 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.2562ms
2025-04-04 01:12:38.732 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:12:38.733 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 14.1965ms
2025-04-04 01:12:38.733 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:12:38.733 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.1122ms
2025-04-04 01:12:38.736 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:12:38.736 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:12:38.736 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:12:38.736 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:12:38.738 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:12:38.740 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:12:38.740 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.8075ms
2025-04-04 01:12:38.740 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:12:38.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.417ms
2025-04-04 01:15:12.777 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:15:12.778 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:15:12.778 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:15:12.779 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:15:12.796 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:15:12.809 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:15:12.811 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 31.926ms
2025-04-04 01:15:12.811 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:15:12.811 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 34.4746ms
2025-04-04 01:15:12.821 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 01:15:12.822 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:15:12.822 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:15:12.822 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:15:12.839 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 01:15:12.840 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:15:12.841 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.8218ms
2025-04-04 01:15:12.841 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:15:12.842 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 20.1121ms
2025-04-04 01:15:13.883 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:15:13.883 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:15:13.883 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:15:13.883 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:15:13.883 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:15:13.883 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:15:13.883 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:15:13.884 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:15:13.895 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:15:13.897 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:15:13.897 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 13.9575ms
2025-04-04 01:15:13.898 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:15:13.898 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.9522ms
2025-04-04 01:15:13.901 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:15:13.902 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:15:13.903 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 18.7908ms
2025-04-04 01:15:13.903 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:15:13.903 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 20.2607ms
2025-04-04 01:15:13.926 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:15:13.926 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:15:13.926 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:15:13.926 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:15:13.936 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:15:13.937 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:15:13.937 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 10.842ms
2025-04-04 01:15:13.937 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:15:13.938 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 12.3335ms
2025-04-04 01:16:00.012 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:16:00.012 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:16:00.012 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:16:00.012 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:16:00.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:16:00.039 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:16:00.040 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:16:00.040 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:16:00.054 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:16:00.058 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:16:00.058 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:16:00.059 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:16:00.067 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 23.9728ms
2025-04-04 01:16:00.067 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 51.6744ms
2025-04-04 01:16:00.068 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:16:00.068 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:16:00.068 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 30.9838ms
2025-04-04 01:16:00.068 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 58.9512ms
2025-04-04 01:16:00.202 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:16:00.203 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:16:00.203 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:16:00.203 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:16:00.212 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:16:00.213 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:16:00.214 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 11.3359ms
2025-04-04 01:16:00.215 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:16:00.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 12.6778ms
2025-04-04 01:22:59.049 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:22:59.049 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:22:59.050 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:22:59.050 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:22:59.052 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:22:59.052 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:22:59.052 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:22:59.052 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:22:59.123 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:22:59.123 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:22:59.123 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:22:59.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:22:59.124 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 71.8637ms
2025-04-04 01:22:59.124 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:22:59.125 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 72.1504ms
2025-04-04 01:22:59.125 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 75.7112ms
2025-04-04 01:22:59.125 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:22:59.125 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 75.6527ms
2025-04-04 01:22:59.143 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:22:59.143 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:22:59.143 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:22:59.143 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:22:59.149 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:22:59.150 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:22:59.150 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.119ms
2025-04-04 01:22:59.150 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:22:59.151 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.7502ms
2025-04-04 01:24:31.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:24:31.867 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:24:31.868 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:24:31.868 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:24:31.868 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:24:31.869 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:24:31.869 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:24:31.870 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:24:31.898 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:24:31.907 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:24:31.908 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:24:31.908 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:24:31.935 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 66.8375ms
2025-04-04 01:24:31.935 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 65.1654ms
2025-04-04 01:24:31.935 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:24:31.935 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:24:31.935 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 68.2766ms
2025-04-04 01:24:31.935 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 67.4241ms
2025-04-04 01:24:31.939 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:24:31.939 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:24:31.940 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:24:31.940 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:24:31.944 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:24:31.944 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:24:31.945 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.1426ms
2025-04-04 01:24:31.945 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:24:31.945 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.8767ms
2025-04-04 01:31:11.724 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-04 01:31:11.724 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:31:11.724 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:31:11.724 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-04 01:31:11.747 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-04 01:31:11.748 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:31:11.749 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 24.5035ms
2025-04-04 01:31:11.749 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-04 01:31:11.750 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 26.5678ms
2025-04-04 01:31:11.756 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-04 01:31:11.756 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:31:11.756 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:31:11.756 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:31:11.763 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-04 01:31:11.763 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:31:11.765 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.8259ms
2025-04-04 01:31:11.765 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-04 01:31:11.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.6796ms
2025-04-04 01:31:20.274 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:31:20.274 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:31:20.274 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:31:20.274 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:31:20.274 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:31:20.274 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:31:20.274 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:31:20.274 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:31:20.282 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:31:20.284 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:31:20.290 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 15.5848ms
2025-04-04 01:31:20.290 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:31:20.290 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 16.1416ms
2025-04-04 01:31:20.297 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:31:20.298 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:31:20.298 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 24.4595ms
2025-04-04 01:31:20.298 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:31:20.299 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 25.0808ms
2025-04-04 01:31:20.310 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:31:20.310 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:31:20.311 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:31:20.311 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:31:20.315 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:31:20.315 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:31:20.316 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.364ms
2025-04-04 01:31:20.316 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:31:20.316 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.9792ms
2025-04-04 01:32:24.033 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:32:24.034 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:32:24.034 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:32:24.034 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 01:32:24.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:32:24.038 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:32:24.038 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:32:24.038 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:32:24.061 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 01:32:24.065 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 01:32:24.067 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 32.5878ms
2025-04-04 01:32:24.067 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:32:24.068 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 01:32:24.068 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 35.3285ms
2025-04-04 01:32:24.075 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:32:24.079 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 40.6697ms
2025-04-04 01:32:24.079 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:32:24.080 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 44.0911ms
2025-04-04 01:32:24.080 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:32:24.080 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:32:24.080 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:32:24.080 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 01:32:24.091 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 01:32:24.091 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 01:32:24.092 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 10.7554ms
2025-04-04 01:32:24.092 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 01:32:24.092 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 12.3936ms
2025-04-04 01:32:34.073 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundary9RJY2TpzBWyJgyuC 506
2025-04-04 01:32:34.074 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:32:34.074 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-04 01:32:34.079 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:32:34.140 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-04 01:32:34.169 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-04 01:32:34.311 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-04 01:32:34.323 +07:00 [INF] New discussion added: "9a359bca-9754-4ebe-8a71-7b03a23ef3fb" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-04 01:32:34.324 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-04 01:32:34.345 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 264.985ms
2025-04-04 01:32:34.345 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-04 01:32:34.345 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 271.518ms
2025-04-04 01:32:34.349 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 01:32:34.349 +07:00 [INF] CORS policy execution successful.
2025-04-04 01:32:34.350 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:32:34.350 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 01:32:34.355 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 01:32:34.356 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 01:32:34.357 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.0937ms
2025-04-04 01:32:34.357 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 01:32:34.357 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.7112ms
2025-04-04 02:09:57.619 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 02:09:57.622 +07:00 [INF] CORS policy execution successful.
2025-04-04 02:09:57.623 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 02:09:57.623 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 02:09:57.628 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 02:09:57.628 +07:00 [INF] CORS policy execution successful.
2025-04-04 02:09:57.628 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 02:09:57.629 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 02:09:57.665 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 02:09:57.665 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 02:09:57.665 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 02:09:57.665 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 02:09:57.666 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 42.7531ms
2025-04-04 02:09:57.666 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 37.2255ms
2025-04-04 02:09:57.666 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 02:09:57.666 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 02:09:57.666 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 39.0761ms
2025-04-04 02:09:57.666 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 46.9494ms
2025-04-04 02:09:57.681 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 02:09:57.681 +07:00 [INF] CORS policy execution successful.
2025-04-04 02:09:57.681 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 02:09:57.681 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 02:09:57.686 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 02:09:57.686 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 02:09:57.687 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.5091ms
2025-04-04 02:09:57.687 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 02:09:57.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.2986ms
2025-04-04 06:44:19.161 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 06:44:19.163 +07:00 [INF] CORS policy execution successful.
2025-04-04 06:44:19.163 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 06:44:19.163 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 06:44:19.173 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 06:44:19.175 +07:00 [INF] CORS policy execution successful.
2025-04-04 06:44:19.176 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 06:44:19.176 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 06:44:19.225 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 06:44:19.227 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 06:44:19.232 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 06:44:19.237 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 73.2379ms
2025-04-04 06:44:19.237 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 06:44:19.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 77.7873ms
2025-04-04 06:44:19.240 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 06:44:19.245 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 69.1218ms
2025-04-04 06:44:19.245 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 06:44:19.245 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 72.3268ms
2025-04-04 06:44:19.636 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 06:44:19.636 +07:00 [INF] CORS policy execution successful.
2025-04-04 06:44:19.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 06:44:19.636 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 06:44:19.655 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 06:44:19.659 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 06:44:19.660 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 22.9981ms
2025-04-04 06:44:19.660 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 06:44:19.660 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 24.7723ms
2025-04-04 10:01:26.662 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:01:26.662 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:01:26.662 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 10:01:26.662 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 10:01:26.729 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:01:26.729 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:01:26.729 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 10:01:26.729 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 10:01:26.812 +07:00 [INF] Executed DbCommand (148ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 10:01:26.812 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 10:01:26.813 +07:00 [INF] Executed DbCommand (83ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 10:01:26.814 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 10:01:26.830 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 168.0515ms
2025-04-04 10:01:26.830 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 101.2945ms
2025-04-04 10:01:26.830 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 10:01:26.830 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 10:01:26.831 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 168.868ms
2025-04-04 10:01:26.831 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 101.8986ms
2025-04-04 10:01:26.878 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:01:26.878 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:01:26.878 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 10:01:26.878 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 10:01:26.893 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 10:01:26.893 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 10:01:26.923 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 43.9844ms
2025-04-04 10:01:26.923 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 10:01:26.923 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 45.8392ms
2025-04-04 10:23:33.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:23:33.906 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:23:33.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 10:23:33.907 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:23:33.907 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 10:23:33.908 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:23:33.908 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 10:23:33.908 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 10:23:33.961 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 10:23:33.964 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 10:23:33.967 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 10:23:33.967 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 59.3726ms
2025-04-04 10:23:33.968 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 10:23:33.968 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 60.6085ms
2025-04-04 10:23:33.968 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 10:23:33.969 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 61.1158ms
2025-04-04 10:23:33.969 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 10:23:33.969 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 64.1966ms
2025-04-04 10:23:33.978 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 10:23:33.978 +07:00 [INF] CORS policy execution successful.
2025-04-04 10:23:33.978 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 10:23:33.978 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 10:23:33.983 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 10:23:33.983 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 10:23:33.984 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.6227ms
2025-04-04 10:23:33.984 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 10:23:33.985 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.4375ms
2025-04-04 11:34:34.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 11:34:34.956 +07:00 [INF] CORS policy execution successful.
2025-04-04 11:34:34.956 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 11:34:34.967 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 11:34:35.021 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 11:34:35.022 +07:00 [INF] CORS policy execution successful.
2025-04-04 11:34:35.022 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 11:34:35.022 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 11:34:35.084 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 11:34:35.084 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 11:34:35.088 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 11:34:35.088 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 121.0869ms
2025-04-04 11:34:35.088 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 11:34:35.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 133.464ms
2025-04-04 11:34:35.089 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 11:34:35.089 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 67.565ms
2025-04-04 11:34:35.089 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 11:34:35.091 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 72.5549ms
2025-04-04 11:34:35.113 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 11:34:35.113 +07:00 [INF] CORS policy execution successful.
2025-04-04 11:34:35.113 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 11:34:35.113 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 11:34:35.121 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 11:34:35.127 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 11:34:35.132 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 18.9274ms
2025-04-04 11:34:35.133 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 11:34:35.133 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 19.6964ms
2025-04-04 14:16:20.643 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:16:20.643 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:16:20.703 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:16:20.703 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:16:20.703 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:16:20.703 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:16:20.704 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 14:16:20.704 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 14:16:20.762 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 14:16:20.764 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 14:16:20.764 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 60.5693ms
2025-04-04 14:16:20.765 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:16:20.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 123.442ms
2025-04-04 14:16:20.771 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 14:16:20.772 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 14:16:20.772 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 68.3705ms
2025-04-04 14:16:20.772 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:16:20.772 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 130.9032ms
2025-04-04 14:16:20.850 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:16:20.850 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:16:20.851 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:16:20.851 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 14:16:20.857 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 14:16:20.857 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 14:16:20.859 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.6901ms
2025-04-04 14:16:20.859 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:16:20.859 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.7031ms
2025-04-04 14:19:24.167 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:19:24.167 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:19:24.167 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:19:24.167 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:19:24.168 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:19:24.168 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 14:19:24.168 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:19:24.170 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 14:19:24.185 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 14:19:24.186 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 14:19:24.190 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 20.2678ms
2025-04-04 14:19:24.190 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:19:24.190 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 14:19:24.191 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 14:19:24.194 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 24.2495ms
2025-04-04 14:19:24.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 26.4797ms
2025-04-04 14:19:24.194 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:19:24.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 27.1061ms
2025-04-04 14:19:24.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:19:24.324 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:19:24.324 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:19:24.324 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 14:19:24.332 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 14:19:24.333 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 14:19:24.333 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 8.9873ms
2025-04-04 14:19:24.333 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:19:24.333 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 9.7761ms
2025-04-04 14:20:29.820 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:20:29.821 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:20:29.821 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:20:29.823 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 14:20:29.827 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:20:29.827 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:20:29.828 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:20:29.828 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 14:20:29.842 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 14:20:29.842 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 14:20:29.844 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 14:20:29.845 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 21.5237ms
2025-04-04 14:20:29.845 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:20:29.850 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 14:20:29.851 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 30.8239ms
2025-04-04 14:20:29.853 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 24.2476ms
2025-04-04 14:20:29.853 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:20:29.853 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 26.2438ms
2025-04-04 14:20:29.874 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:20:29.874 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:20:29.874 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:20:29.874 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 14:20:29.879 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 14:20:29.879 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 14:20:29.880 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8565ms
2025-04-04 14:20:29.880 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:20:29.880 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.5793ms
2025-04-04 14:31:56.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:31:56.789 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:31:56.789 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:31:56.789 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 14:31:56.803 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:31:56.806 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 14:31:56.806 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:31:56.807 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:31:56.807 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 14:31:56.807 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 14:31:56.812 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 22.8611ms
2025-04-04 14:31:56.812 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 14:31:56.813 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 24.9927ms
2025-04-04 14:31:56.816 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 14:31:56.817 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 14:31:56.818 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 11.0348ms
2025-04-04 14:31:56.818 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 14:31:56.818 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.1716ms
2025-04-04 14:31:56.864 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 14:31:56.865 +07:00 [INF] CORS policy execution successful.
2025-04-04 14:31:56.865 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:31:56.865 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 14:31:56.871 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 14:31:56.872 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 14:31:56.872 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.7006ms
2025-04-04 14:31:56.872 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 14:31:56.872 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.7167ms
2025-04-04 21:13:30.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:13:30.242 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:13:30.242 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 21:13:30.242 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 21:13:30.290 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:13:30.290 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:13:30.291 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 21:13:30.291 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 21:13:30.338 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 21:13:30.339 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 21:13:30.340 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 97.2215ms
2025-04-04 21:13:30.340 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 21:13:30.340 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 99.1484ms
2025-04-04 21:13:30.344 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 21:13:30.345 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 21:13:30.345 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 54.2752ms
2025-04-04 21:13:30.345 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 21:13:30.345 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 56.3909ms
2025-04-04 21:13:30.438 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:13:30.438 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:13:30.438 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 21:13:30.438 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 21:13:30.444 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 21:13:30.444 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 21:13:30.444 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8877ms
2025-04-04 21:13:30.444 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 21:13:30.445 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.626ms
2025-04-04 21:44:15.023 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:44:15.029 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:44:15.029 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 21:44:15.029 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 21:44:15.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:44:15.040 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:44:15.040 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 21:44:15.043 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 21:44:15.063 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 21:44:15.063 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 21:44:15.063 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 21:44:15.063 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 34.1463ms
2025-04-04 21:44:15.064 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 21:44:15.064 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 40.4464ms
2025-04-04 21:44:15.064 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 21:44:15.064 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 19.9691ms
2025-04-04 21:44:15.064 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 21:44:15.065 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 24.7201ms
2025-04-04 21:44:15.203 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 21:44:15.203 +07:00 [INF] CORS policy execution successful.
2025-04-04 21:44:15.203 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 21:44:15.203 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 21:44:15.212 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 21:44:15.212 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 21:44:15.213 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 9.4705ms
2025-04-04 21:44:15.213 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 21:44:15.213 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 10.3606ms
2025-04-04 22:09:49.547 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:09:49.548 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:09:49.548 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 22:09:49.551 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 22:09:49.579 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:09:49.585 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:09:49.585 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 22:09:49.585 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 22:09:49.623 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 22:09:49.625 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 22:09:49.628 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 42.7041ms
2025-04-04 22:09:49.628 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 22:09:49.628 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 49.2121ms
2025-04-04 22:09:49.632 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 22:09:49.632 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 22:09:49.633 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 80.9897ms
2025-04-04 22:09:49.633 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 22:09:49.633 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 85.9671ms
2025-04-04 22:09:49.697 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:09:49.697 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:09:49.697 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 22:09:49.697 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 22:09:49.703 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 22:09:49.703 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 22:09:49.704 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.308ms
2025-04-04 22:09:49.704 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 22:09:49.704 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.9964ms
2025-04-04 22:47:48.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:47:48.170 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:47:48.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:47:48.170 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 22:47:48.171 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:47:48.171 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 22:47:48.171 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 22:47:48.171 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 22:47:48.204 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 22:47:48.208 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 22:47:48.209 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 38.1044ms
2025-04-04 22:47:48.209 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 22:47:48.209 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 39.0433ms
2025-04-04 22:47:48.214 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 22:47:48.214 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 22:47:48.215 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 43.2184ms
2025-04-04 22:47:48.215 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 22:47:48.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 44.3767ms
2025-04-04 22:47:48.284 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 22:47:48.284 +07:00 [INF] CORS policy execution successful.
2025-04-04 22:47:48.284 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 22:47:48.284 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 22:47:48.291 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 22:47:48.292 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 22:47:48.292 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.7777ms
2025-04-04 22:47:48.292 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 22:47:48.292 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.4082ms
2025-04-04 23:16:54.188 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 23:16:54.190 +07:00 [INF] CORS policy execution successful.
2025-04-04 23:16:54.190 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 23:16:54.190 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-04 23:16:54.199 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 23:16:54.200 +07:00 [INF] CORS policy execution successful.
2025-04-04 23:16:54.201 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 23:16:54.201 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-04 23:16:54.237 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-04 23:16:54.237 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-04 23:16:54.238 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 47.7986ms
2025-04-04 23:16:54.238 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-04 23:16:54.238 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 50.1602ms
2025-04-04 23:16:54.249 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-04 23:16:54.250 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-04 23:16:54.251 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 49.6031ms
2025-04-04 23:16:54.251 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-04 23:16:54.251 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 51.8156ms
2025-04-04 23:16:54.321 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-04 23:16:54.321 +07:00 [INF] CORS policy execution successful.
2025-04-04 23:16:54.321 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 23:16:54.321 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-04 23:16:54.328 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-04 23:16:54.328 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-04 23:16:54.329 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 8.2135ms
2025-04-04 23:16:54.330 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-04 23:16:54.330 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.6932ms
