2025-04-06 16:16:33.335 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/index.html - null null
2025-04-06 16:16:33.574 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-06 16:16:33.593 +07:00 [INF] Hosting environment: Development
2025-04-06 16:16:33.593 +07:00 [INF] Content root path: D:\Code\Event-Management-System\ems_backend
2025-04-06 16:16:34.518 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/index.html - 200 null text/html;charset=utf-8 1219.0982ms
2025-04-06 16:16:34.522 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - null null
2025-04-06 16:16:34.536 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - 200 13774 application/javascript; charset=utf-8 7.679ms
2025-04-06 16:16:34.549 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_vs/browserLink - null null
2025-04-06 16:16:34.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_vs/browserLink - 200 null text/javascript; charset=UTF-8 137.8261ms
2025-04-06 16:16:35.062 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - null null
2025-04-06 16:16:35.094 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.9165ms
2025-04-06 16:24:26.728 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 16:24:26.746 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:24:26.748 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 21.0694ms
2025-04-06 16:24:26.751 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 16:24:26.754 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:24:26.760 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:24:26.796 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 16:24:30.444 +07:00 [INF] Executed DbCommand (105ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 16:24:30.612 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 16:24:30.640 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 3840.0975ms
2025-04-06 16:24:30.641 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:24:30.648 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 3897.0388ms
2025-04-06 16:24:34.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:24:34.345 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:24:34.346 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:24:34.350 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:24:34.399 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:24:34.401 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:24:34.402 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 52.2238ms
2025-04-06 16:24:34.402 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:24:34.403 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 58.8532ms
2025-04-06 16:24:34.407 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:24:34.408 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:24:34.408 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:24:34.414 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:24:34.609 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:24:34.612 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:24:34.616 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 202.3074ms
2025-04-06 16:24:34.617 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:24:34.617 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 209.3784ms
2025-04-06 16:25:59.752 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:25:59.755 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:25:59.755 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:25:59.755 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:25:59.767 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:25:59.796 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:25:59.827 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 71.3864ms
2025-04-06 16:25:59.827 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:25:59.827 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 77.4896ms
2025-04-06 16:25:59.832 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:25:59.833 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:25:59.833 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:25:59.833 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:25:59.847 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:25:59.848 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:25:59.848 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 15.2595ms
2025-04-06 16:25:59.849 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:25:59.849 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 16.7538ms
2025-04-06 16:26:01.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:01.296 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:01.297 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:01.297 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:01.301 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:01.303 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:01.304 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.0864ms
2025-04-06 16:26:01.304 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:01.308 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3736ms
2025-04-06 16:26:01.311 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:01.311 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:01.311 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:01.312 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:01.315 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:01.317 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:01.317 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6556ms
2025-04-06 16:26:01.317 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:01.318 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.4425ms
2025-04-06 16:26:02.256 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.256 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.256 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.257 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.263 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.264 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.264 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.264 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.264 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.2861ms
2025-04-06 16:26:02.264 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.264 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.264 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.265 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.8765ms
2025-04-06 16:26:02.268 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.269 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=40000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.270 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.270 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.5098ms
2025-04-06 16:26:02.270 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.271 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6149ms
2025-04-06 16:26:02.274 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.275 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.276 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.276 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.8806ms
2025-04-06 16:26:02.276 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.276 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.276 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.276 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.276 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=40000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.0525ms
2025-04-06 16:26:02.280 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.283 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.284 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.284 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.286 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.287 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.287 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.3392ms
2025-04-06 16:26:02.287 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.287 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.287 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.287 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.1721ms
2025-04-06 16:26:02.287 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.288 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.292 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.296 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.297 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.297 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.297 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.300 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.5343ms
2025-04-06 16:26:02.301 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.302 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.302 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.302 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.302 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.307 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.310 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 26.1738ms
2025-04-06 16:26:02.310 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.311 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.311 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.311 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.312 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.312 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.312 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.321 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.322 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.323 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.324 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.326 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.328 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.328 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.328 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.328 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.337 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.337 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.338 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.341 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.342 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.342 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.342 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 54.4598ms
2025-04-06 16:26:02.342 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.343 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 56.33ms
2025-04-06 16:26:02.344 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.344 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.344 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.349 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.351 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.354 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.355 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.355 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.356 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 57.9705ms
2025-04-06 16:26:02.356 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.356 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.356 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 60.7645ms
2025-04-06 16:26:02.358 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.358 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.358 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.363 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.364 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.364 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.364 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.367 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.368 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 56.1352ms
2025-04-06 16:26:02.368 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.368 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 34.1917ms
2025-04-06 16:26:02.368 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.369 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.371 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 64.1513ms
2025-04-06 16:26:02.372 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.373 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=250000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.373 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.374 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.374 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.374 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.374 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.375 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 48.8418ms
2025-04-06 16:26:02.376 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.376 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.377 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 18.5908ms
2025-04-06 16:26:02.378 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.377 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.379 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 22.2357ms
2025-04-06 16:26:02.379 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 76.8144ms
2025-04-06 16:26:02.379 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.379 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.379 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.379 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 77.7207ms
2025-04-06 16:26:02.379 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.380 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.380 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 67.8995ms
2025-04-06 16:26:02.380 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.380 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.380 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.380 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.381 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.381 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 70.4248ms
2025-04-06 16:26:02.382 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.383 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.384 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.387 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 16.7273ms
2025-04-06 16:26:02.387 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.387 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.387 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.387 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 63.2586ms
2025-04-06 16:26:02.387 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.387 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 24.4112ms
2025-04-06 16:26:02.388 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.388 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 66.6947ms
2025-04-06 16:26:02.388 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.388 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.388 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 13.8238ms
2025-04-06 16:26:02.388 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 32.2564ms
2025-04-06 16:26:02.388 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.388 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.389 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.390 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 38.8159ms
2025-04-06 16:26:02.390 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=250000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.7879ms
2025-04-06 16:26:02.392 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.392 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 49.3292ms
2025-04-06 16:26:02.392 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 47.2413ms
2025-04-06 16:26:02.392 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.392 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.392 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.392 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.392 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.392 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 49.7897ms
2025-04-06 16:26:02.392 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.392 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.392 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.393 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.457ms
2025-04-06 16:26:02.393 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.393 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.393 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 14.9559ms
2025-04-06 16:26:02.393 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 56.4434ms
2025-04-06 16:26:02.393 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.393 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.396 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.397 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.398 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.398 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.398 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.137ms
2025-04-06 16:26:02.399 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.399 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.2ms
2025-04-06 16:26:02.400 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.400 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.400 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.401 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.2029ms
2025-04-06 16:26:02.401 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.401 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.9674ms
2025-04-06 16:26:02.401 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.402 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.402 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.402 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.405 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.406 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.407 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.4876ms
2025-04-06 16:26:02.407 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.407 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.7897ms
2025-04-06 16:26:02.409 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.411 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.411 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.7637ms
2025-04-06 16:26:02.411 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.411 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.412 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.412 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.412 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.0176ms
2025-04-06 16:26:02.412 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.416 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.416 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.417 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.418 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.418 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.419 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.419 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.2697ms
2025-04-06 16:26:02.419 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.420 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.613ms
2025-04-06 16:26:02.420 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=500000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.421 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.421 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.421 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.423 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.425 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.427 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.428 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.429 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.429 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.429 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.429 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.0738ms
2025-04-06 16:26:02.429 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.429 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.429 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.9548ms
2025-04-06 16:26:02.429 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.429 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=500000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.4902ms
2025-04-06 16:26:02.429 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 13.4823ms
2025-04-06 16:26:02.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.434 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.434 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.434 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.435 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.435 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.437 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.6138ms
2025-04-06 16:26:02.439 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.440 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.441 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.440 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.2646ms
2025-04-06 16:26:02.441 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.441 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.442 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.442 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.443 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.0024ms
2025-04-06 16:26:02.443 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.443 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.3899ms
2025-04-06 16:26:02.444 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.445 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.445 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.445 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.448 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.450 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.454 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.372ms
2025-04-06 16:26:02.455 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.4101ms
2025-04-06 16:26:02.462 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.463 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.463 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.463 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.463 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.464 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.464 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.464 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.464 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.464 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=710000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.464 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.464 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.465 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 19.1879ms
2025-04-06 16:26:02.465 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.466 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.466 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 21.7171ms
2025-04-06 16:26:02.472 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.470 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.474 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.474 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.474 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.474 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.474 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.475 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.6874ms
2025-04-06 16:26:02.475 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.475 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.475 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.6196ms
2025-04-06 16:26:02.476 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.2437ms
2025-04-06 16:26:02.476 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.477 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 26.9928ms
2025-04-06 16:26:02.479 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.481 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.481 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.481 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.482 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.484 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.144ms
2025-04-06 16:26:02.484 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.484 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.484 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.488 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.488 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.1531ms
2025-04-06 16:26:02.488 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.488 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 14.1812ms
2025-04-06 16:26:02.488 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=710000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 24.3551ms
2025-04-06 16:26:02.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.490 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.491 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.491 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.494 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.495 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.496 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.496 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.496 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.496 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.496 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.5789ms
2025-04-06 16:26:02.496 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.497 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 16.1454ms
2025-04-06 16:26:02.497 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.497 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.497 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.497 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.499 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.500 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.505 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.505 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.506 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.506 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.506 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.6864ms
2025-04-06 16:26:02.506 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.507 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.507 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.509 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.1294ms
2025-04-06 16:26:02.509 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.509 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.1047ms
2025-04-06 16:26:02.509 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.509 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.9622ms
2025-04-06 16:26:02.513 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.512 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.516 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.516 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.516 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.517 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.517 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.517 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.517 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.6251ms
2025-04-06 16:26:02.517 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 20.7154ms
2025-04-06 16:26:02.517 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.517 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.517 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.517 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 23.8371ms
2025-04-06 16:26:02.518 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.6618ms
2025-04-06 16:26:02.518 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.518 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.524 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.525 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.525 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.525 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.525 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.526 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.526 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.9365ms
2025-04-06 16:26:02.526 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.526 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.6607ms
2025-04-06 16:26:02.528 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.529 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.529 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.530 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.530 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.530 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.531 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.552ms
2025-04-06 16:26:02.532 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.532 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.533 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.5652ms
2025-04-06 16:26:02.534 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.534 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.5739ms
2025-04-06 16:26:02.534 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.534 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.534 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.6735ms
2025-04-06 16:26:02.539 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.539 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.540 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.540 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.541 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.541 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.6267ms
2025-04-06 16:26:02.541 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.542 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:02.542 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.5978ms
2025-04-06 16:26:02.542 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.543 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.543 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:02.544 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.545 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.546 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.546 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.546 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.546 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4963ms
2025-04-06 16:26:02.546 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.547 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.5449ms
2025-04-06 16:26:02.549 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:02.551 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.551 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.551 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.551 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.552 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.554 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.2734ms
2025-04-06 16:26:02.555 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:02.563 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.564 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.562 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.564 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 22.5312ms
2025-04-06 16:26:02.564 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.564 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.565 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.565 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 19.2359ms
2025-04-06 16:26:02.566 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.566 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 20.6857ms
2025-04-06 16:26:02.566 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.568 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.568 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.569 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.570 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.572 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.572 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.572 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.572 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.573 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.574 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 21.6868ms
2025-04-06 16:26:02.575 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.576 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.577 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 26.2445ms
2025-04-06 16:26:02.578 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.578 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.578 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 13.846ms
2025-04-06 16:26:02.578 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.579 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.580 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.579 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.580 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.582 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.583 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.584 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.584 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 22.8802ms
2025-04-06 16:26:02.584 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.7088ms
2025-04-06 16:26:02.584 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.585 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.585 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 13.163ms
2025-04-06 16:26:02.586 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.588 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.588 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 21.9039ms
2025-04-06 16:26:02.589 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.590 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 19.3717ms
2025-04-06 16:26:02.590 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.590 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.591 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.591 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.591 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.8545ms
2025-04-06 16:26:02.591 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.6199ms
2025-04-06 16:26:02.591 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.592 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.592 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.595 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.596 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.597 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.598 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.599 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.9202ms
2025-04-06 16:26:02.599 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.600 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.600 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.600 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.600 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.600 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.600 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.600 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.600 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.600 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.4893ms
2025-04-06 16:26:02.600 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.600 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.5307ms
2025-04-06 16:26:02.600 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.7721ms
2025-04-06 16:26:02.606 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.607 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.607 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.608 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.1078ms
2025-04-06 16:26:02.608 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.608 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.609 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.609 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.609 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.610 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.1716ms
2025-04-06 16:26:02.610 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.611 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.2904ms
2025-04-06 16:26:02.611 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.611 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.2243ms
2025-04-06 16:26:02.613 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.613 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.614 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.614 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.615 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.615 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.615 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.9471ms
2025-04-06 16:26:02.615 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.615 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.4138ms
2025-04-06 16:26:02.616 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.616 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.616 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.616 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.618 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.620 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.621 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.5075ms
2025-04-06 16:26:02.621 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.622 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.622 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.622 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.6432ms
2025-04-06 16:26:02.623 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.623 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.623 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.623 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.624 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.8792ms
2025-04-06 16:26:02.624 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.624 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.8713ms
2025-04-06 16:26:02.627 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.628 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.629 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.629 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.629 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.629 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.629 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6998ms
2025-04-06 16:26:02.629 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.630 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.3076ms
2025-04-06 16:26:02.633 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.633 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.634 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.635 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.635 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.635 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.635 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.2179ms
2025-04-06 16:26:02.636 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.034ms
2025-04-06 16:26:02.638 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.638 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.638 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.649 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.649 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.649 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.650 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.650 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.650 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.651 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.651 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.651 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.651 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.652 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.653 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.1066ms
2025-04-06 16:26:02.653 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.656 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.656 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 23.1768ms
2025-04-06 16:26:02.658 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.659 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.5664ms
2025-04-06 16:26:02.659 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.660 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.660 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.661 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 23.4771ms
2025-04-06 16:26:02.662 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.662 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.662 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.663 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.663 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.663 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.6249ms
2025-04-06 16:26:02.663 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.1381ms
2025-04-06 16:26:02.663 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.663 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.663 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.663 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.3736ms
2025-04-06 16:26:02.663 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.4223ms
2025-04-06 16:26:02.667 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.667 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.670 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.670 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.670 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.670 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.671 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.4276ms
2025-04-06 16:26:02.671 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.671 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.6151ms
2025-04-06 16:26:02.671 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.672 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.672 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.672 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.674 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.676 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.676 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:02.676 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:02.676 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.1515ms
2025-04-06 16:26:02.676 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.676 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.676 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:02.677 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.7703ms
2025-04-06 16:26:02.678 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.680 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.681 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.8267ms
2025-04-06 16:26:02.681 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.684 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:02.684 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.796ms
2025-04-06 16:26:02.685 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:02.686 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.6587ms
2025-04-06 16:26:02.686 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:02.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.8024ms
2025-04-06 16:26:04.176 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:26:04.177 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:04.177 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:04.177 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:26:04.181 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:26:04.184 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:04.184 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.6948ms
2025-04-06 16:26:04.184 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:26:04.185 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.4995ms
2025-04-06 16:26:04.188 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:26:04.188 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:26:04.188 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:04.188 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:26:04.191 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:26:04.193 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:26:04.193 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0621ms
2025-04-06 16:26:04.193 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:26:04.193 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.595ms
2025-04-06 16:33:24.648 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:33:24.650 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:33:24.650 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:33:24.654 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:33:24.820 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:33:24.821 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:33:24.822 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 165.8216ms
2025-04-06 16:33:24.822 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:33:24.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 174.4943ms
2025-04-06 16:33:24.852 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:33:24.853 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:33:24.853 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:33:24.853 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:33:24.874 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:33:24.880 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:33:24.885 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 31.9588ms
2025-04-06 16:33:24.885 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:33:24.885 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 33.2371ms
2025-04-06 16:33:50.063 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 16:33:50.064 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:33:50.067 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 4.0898ms
2025-04-06 16:33:50.069 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 16:33:50.069 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:33:50.069 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:33:50.069 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 16:33:50.079 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 16:33:50.187 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 16:33:50.188 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 118.2705ms
2025-04-06 16:33:50.188 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:33:50.188 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 118.8259ms
2025-04-06 16:34:54.286 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:34:54.287 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:34:54.290 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:34:54.291 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:34:54.299 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:34:54.304 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:34:54.314 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 20.6607ms
2025-04-06 16:34:54.314 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:34:54.314 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 28.516ms
2025-04-06 16:34:54.319 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:34:54.320 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:34:54.320 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:34:54.320 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:34:54.323 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:34:54.324 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:34:54.324 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4489ms
2025-04-06 16:34:54.324 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:34:54.325 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.1878ms
2025-04-06 16:34:55.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:34:55.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:34:55.992 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:34:55.992 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:34:55.992 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:34:55.992 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:34:55.992 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:34:55.994 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:34:55.996 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:34:55.996 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5075ms
2025-04-06 16:34:55.996 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:34:55.997 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4611ms
2025-04-06 16:34:55.998 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:34:56.017 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:34:56.018 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:34:56.019 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 19.9646ms
2025-04-06 16:34:56.019 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:34:56.019 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 27.4547ms
2025-04-06 16:35:01.035 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:35:01.036 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:35:01.036 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:35:01.040 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:35:01.076 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:35:01.076 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:35:01.078 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 37.7451ms
2025-04-06 16:35:01.078 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:35:01.078 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 42.5965ms
2025-04-06 16:35:03.687 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:35:03.687 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:35:03.687 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:35:03.690 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 16:35:03.723 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 16:35:03.725 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 16:35:03.728 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 37.4139ms
2025-04-06 16:35:03.728 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:35:03.728 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 41.5266ms
2025-04-06 16:38:13.435 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 16:38:13.435 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:13.436 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.8939ms
2025-04-06 16:38:13.438 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 16:38:13.438 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:13.438 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:38:13.438 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 16:38:13.446 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 16:38:13.522 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 16:38:13.522 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 83.8826ms
2025-04-06 16:38:13.522 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:38:13.522 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 84.8547ms
2025-04-06 16:38:19.728 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:38:19.729 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:19.729 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:38:19.729 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:38:19.734 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:38:19.738 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:38:19.741 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 11.136ms
2025-04-06 16:38:19.741 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:38:19.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 13.0899ms
2025-04-06 16:38:20.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:38:20.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:38:20.906 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:20.906 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:20.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:38:20.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:38:20.906 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:38:20.906 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:38:20.912 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:38:20.915 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:38:20.920 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 14.5847ms
2025-04-06 16:38:20.921 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:38:20.921 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.9693ms
2025-04-06 16:38:20.926 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:38:20.928 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:38:20.928 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 22.3388ms
2025-04-06 16:38:20.928 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:38:20.929 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 23.3244ms
2025-04-06 16:38:21.581 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:38:21.582 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:21.582 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:38:21.582 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:38:21.585 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:38:21.586 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:38:21.588 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.5527ms
2025-04-06 16:38:21.588 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:38:21.588 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5239ms
2025-04-06 16:38:21.598 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:38:21.598 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:38:21.598 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:38:21.598 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:38:21.603 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:38:21.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:38:21.605 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.9884ms
2025-04-06 16:38:21.605 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:38:21.605 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.929ms
2025-04-06 16:39:57.451 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:39:57.451 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:39:57.455 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:39:57.455 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:39:57.489 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:39:57.494 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:39:57.495 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 40.0405ms
2025-04-06 16:39:57.495 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:39:57.495 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 44.2468ms
2025-04-06 16:39:57.500 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:39:57.500 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:39:57.500 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:39:57.501 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:39:57.506 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:39:57.508 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:39:57.512 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.0539ms
2025-04-06 16:39:57.512 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:39:57.512 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.1823ms
2025-04-06 16:39:58.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:39:58.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:39:58.184 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:39:58.184 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:39:58.184 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:39:58.184 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:39:58.184 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:39:58.184 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:39:58.187 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:39:58.189 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:39:58.189 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:39:58.192 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:39:58.193 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.6495ms
2025-04-06 16:39:58.193 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:39:58.196 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 11.7208ms
2025-04-06 16:39:58.196 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:39:58.196 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.6209ms
2025-04-06 16:39:58.196 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 12.639ms
2025-04-06 16:39:58.574 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:39:58.575 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:39:58.575 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:39:58.575 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:39:58.578 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:39:58.579 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:39:58.580 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 5.0198ms
2025-04-06 16:39:58.580 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:39:58.581 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 6.2769ms
2025-04-06 16:40:01.734 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:40:01.734 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:40:01.734 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:01.734 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:01.734 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:40:01.734 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:01.734 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:40:01.734 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:40:01.737 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:40:01.739 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:40:01.739 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:01.740 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:01.740 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9038ms
2025-04-06 16:40:01.740 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:01.741 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 6.0895ms
2025-04-06 16:40:01.741 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:40:01.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6139ms
2025-04-06 16:40:01.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 6.5875ms
2025-04-06 16:40:02.134 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:40:02.134 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:02.134 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:02.134 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:40:02.137 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:40:02.138 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:02.138 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4467ms
2025-04-06 16:40:02.139 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:02.139 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1293ms
2025-04-06 16:40:02.148 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:40:02.148 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:02.149 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:40:02.149 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:40:02.162 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:40:02.163 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:02.163 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.2738ms
2025-04-06 16:40:02.163 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:40:02.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.1706ms
2025-04-06 16:40:08.233 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:40:08.233 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:08.233 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:40:08.233 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 16:40:08.238 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 16:40:08.238 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 16:40:08.239 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 5.492ms
2025-04-06 16:40:08.239 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:40:08.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 6.3727ms
2025-04-06 16:40:09.814 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:40:09.814 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:09.814 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:40:09.814 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:40:09.817 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:40:09.819 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:09.820 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 5.8602ms
2025-04-06 16:40:09.820 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:40:09.820 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 6.6171ms
2025-04-06 16:40:11.630 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:40:11.630 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:40:11.630 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:11.630 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:11.630 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:11.630 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:40:11.630 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:40:11.630 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:40:11.633 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:40:11.635 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:11.636 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:40:11.640 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 9.4485ms
2025-04-06 16:40:11.640 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:40:11.644 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:11.644 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 13.939ms
2025-04-06 16:40:11.647 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 17.1713ms
2025-04-06 16:40:11.647 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:11.648 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 17.7768ms
2025-04-06 16:40:13.225 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:40:13.225 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:13.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:13.225 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:40:13.227 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:40:13.229 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:13.229 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0263ms
2025-04-06 16:40:13.229 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:40:13.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5077ms
2025-04-06 16:40:13.236 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:40:13.236 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:40:13.236 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:40:13.236 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:40:13.238 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:40:13.239 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:40:13.240 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6511ms
2025-04-06 16:40:13.240 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:40:13.240 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.1098ms
2025-04-06 16:41:26.194 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:41:26.198 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:26.198 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:41:26.199 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:26.229 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:26.230 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:26.230 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:26.230 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:26.238 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:41:26.239 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:26.284 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 84.6427ms
2025-04-06 16:41:26.284 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:41:26.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 91.9089ms
2025-04-06 16:41:26.286 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:26.288 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:26.296 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 65.2025ms
2025-04-06 16:41:26.296 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:26.296 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 66.8006ms
2025-04-06 16:41:27.916 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:41:27.916 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:27.916 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:41:27.916 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:41:27.919 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:41:27.920 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:27.920 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.8905ms
2025-04-06 16:41:27.920 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:41:27.920 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.3345ms
2025-04-06 16:41:31.108 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:31.108 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:31.108 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:31.108 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:31.110 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:31.111 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:31.112 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.63ms
2025-04-06 16:41:31.112 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:31.112 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0844ms
2025-04-06 16:41:31.120 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:41:31.120 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:31.120 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:31.120 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:31.123 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:41:31.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:31.125 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.5376ms
2025-04-06 16:41:31.125 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:31.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5559ms
2025-04-06 16:41:50.789 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:50.789 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:50.789 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:50.789 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:50.791 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:50.792 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:50.792 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2.9448ms
2025-04-06 16:41:50.792 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:50.792 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.4171ms
2025-04-06 16:41:50.796 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:50.796 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:50.796 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:50.797 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:50.805 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:50.805 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:50.806 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.0668ms
2025-04-06 16:41:50.806 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:50.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 9.7712ms
2025-04-06 16:41:52.031 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.031 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.031 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.031 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.032 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.033 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.034 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.3519ms
2025-04-06 16:41:52.034 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.035 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.9709ms
2025-04-06 16:41:52.039 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.039 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.040 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.040 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.041 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.042 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.043 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2111ms
2025-04-06 16:41:52.043 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.043 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.694ms
2025-04-06 16:41:52.045 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.045 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.045 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.045 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.047 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.048 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.049 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.5195ms
2025-04-06 16:41:52.049 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.049 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 3.982ms
2025-04-06 16:41:52.050 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.050 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.050 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.050 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.053 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.054 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.054 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0566ms
2025-04-06 16:41:52.054 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.055 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0382ms
2025-04-06 16:41:52.059 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.059 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.059 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.059 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.061 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.062 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.063 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.657ms
2025-04-06 16:41:52.063 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.063 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.063 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.063 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.0291ms
2025-04-06 16:41:52.063 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.063 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.065 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.067 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.068 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3754ms
2025-04-06 16:41:52.068 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.068 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1774ms
2025-04-06 16:41:52.068 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.069 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.069 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.069 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.071 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.074 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.075 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.9307ms
2025-04-06 16:41:52.075 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.075 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 6.8593ms
2025-04-06 16:41:52.075 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.076 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.076 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.076 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.077 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.078 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.079 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.3748ms
2025-04-06 16:41:52.079 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.080 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.1122ms
2025-04-06 16:41:52.080 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.080 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.080 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.080 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.082 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.083 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.084 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9723ms
2025-04-06 16:41:52.084 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.085 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.6902ms
2025-04-06 16:41:52.086 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.086 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.086 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.086 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.087 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.089 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.090 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7035ms
2025-04-06 16:41:52.090 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.090 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4388ms
2025-04-06 16:41:52.092 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.092 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.092 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.092 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.094 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.095 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.096 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8047ms
2025-04-06 16:41:52.096 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.096 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.096 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.096 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.097 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2164ms
2025-04-06 16:41:52.097 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.098 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.099 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.100 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7603ms
2025-04-06 16:41:52.100 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.101 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.2447ms
2025-04-06 16:41:52.101 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.101 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.101 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.101 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.103 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.104 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.105 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7655ms
2025-04-06 16:41:52.105 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.105 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.295ms
2025-04-06 16:41:52.106 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.106 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.106 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.106 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.108 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.110 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.110 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7671ms
2025-04-06 16:41:52.110 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.111 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3441ms
2025-04-06 16:41:52.111 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=270000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.111 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.111 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.111 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.113 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.114 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.115 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1256ms
2025-04-06 16:41:52.115 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.116 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=270000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.8801ms
2025-04-06 16:41:52.118 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.118 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.118 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.118 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.120 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.121 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.122 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0088ms
2025-04-06 16:41:52.122 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.123 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8325ms
2025-04-06 16:41:52.123 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.123 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.123 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.125 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.126 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.127 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2288ms
2025-04-06 16:41:52.127 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.127 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0209ms
2025-04-06 16:41:52.130 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.130 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.130 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.130 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.132 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.133 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.134 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0563ms
2025-04-06 16:41:52.134 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=500000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.134 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.134 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.134 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1643ms
2025-04-06 16:41:52.135 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.137 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.138 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.139 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.139 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3032ms
2025-04-06 16:41:52.139 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.139 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.139 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.139 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.139 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=500000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.2053ms
2025-04-06 16:41:52.143 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.144 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.144 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.146 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.147 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.147 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.149 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=600000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.149 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.0572ms
2025-04-06 16:41:52.149 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.149 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.150 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.5432ms
2025-04-06 16:41:52.150 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.150 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.152 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.152 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.153 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7974ms
2025-04-06 16:41:52.153 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.153 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.0116ms
2025-04-06 16:41:52.153 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.154 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.154 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.154 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.155 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.156 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.158 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.8334ms
2025-04-06 16:41:52.159 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.159 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.160 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=600000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 10.4812ms
2025-04-06 16:41:52.161 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.161 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=650000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.162 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.162 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.162 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.9191ms
2025-04-06 16:41:52.162 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.162 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.6404ms
2025-04-06 16:41:52.162 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.165 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.165 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.168 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.168 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=700000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.168 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.168 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.168 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.168 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.170 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.170 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.173 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.173 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.174 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7561ms
2025-04-06 16:41:52.174 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.6822ms
2025-04-06 16:41:52.174 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.174 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.174 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=700000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.174 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.7821ms
2025-04-06 16:41:52.174 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=650000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 13.3711ms
2025-04-06 16:41:52.174 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.174 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.174 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.176 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.178 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.178 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.9166ms
2025-04-06 16:41:52.179 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.179 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.179 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.180 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.180 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.181 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.181 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=700000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 12.6114ms
2025-04-06 16:41:52.181 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.5893ms
2025-04-06 16:41:52.181 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.181 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=700000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 7.1669ms
2025-04-06 16:41:52.182 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.184 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.184 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.185 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7267ms
2025-04-06 16:41:52.185 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.185 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.185 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.185 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1548ms
2025-04-06 16:41:52.185 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.187 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.188 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.189 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7928ms
2025-04-06 16:41:52.189 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.190 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.656ms
2025-04-06 16:41:52.190 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.190 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.190 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.191 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.192 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.194 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.194 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6764ms
2025-04-06 16:41:52.194 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.195 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.504ms
2025-04-06 16:41:52.195 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=770000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.195 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.195 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.195 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.197 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.198 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.199 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0246ms
2025-04-06 16:41:52.199 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=770000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.8281ms
2025-04-06 16:41:52.201 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.201 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.201 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.201 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.203 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.204 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.205 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7326ms
2025-04-06 16:41:52.205 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.205 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.205 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3114ms
2025-04-06 16:41:52.205 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.205 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.205 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.207 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.208 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.209 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=780000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.209 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0839ms
2025-04-06 16:41:52.209 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.209 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.210 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.210 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.9624ms
2025-04-06 16:41:52.210 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.212 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.213 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.214 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7928ms
2025-04-06 16:41:52.214 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.214 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=780000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.7413ms
2025-04-06 16:41:52.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.214 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.214 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.215 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.217 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.218 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=780000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.219 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.219 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.219 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.219 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.1901ms
2025-04-06 16:41:52.219 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.219 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4084ms
2025-04-06 16:41:52.221 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.223 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.223 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.223 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.2293ms
2025-04-06 16:41:52.223 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.223 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.224 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=780000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.6025ms
2025-04-06 16:41:52.225 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.227 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.227 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.228 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0531ms
2025-04-06 16:41:52.228 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.228 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.228 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4844ms
2025-04-06 16:41:52.228 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.228 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.231 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.232 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.233 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4524ms
2025-04-06 16:41:52.234 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=790000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.234 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.234 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.234 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.234 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.235 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.8573ms
2025-04-06 16:41:52.237 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.238 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.238 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.238 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.238 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.239 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.9779ms
2025-04-06 16:41:52.239 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=790000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 6.0741ms
2025-04-06 16:41:52.241 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.243 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.243 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.243 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.243 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.244 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.244 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9798ms
2025-04-06 16:41:52.244 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.244 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5858ms
2025-04-06 16:41:52.246 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=800000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.247 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.248 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.248 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.248 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.419ms
2025-04-06 16:41:52.248 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.248 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.248 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0319ms
2025-04-06 16:41:52.250 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.253 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.253 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.253 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1053ms
2025-04-06 16:41:52.253 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.254 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.254 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=800000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 6.9861ms
2025-04-06 16:41:52.254 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.254 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.256 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.257 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.258 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.258 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3967ms
2025-04-06 16:41:52.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.258 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.258 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.259 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4973ms
2025-04-06 16:41:52.261 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.263 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3823ms
2025-04-06 16:41:52.263 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.263 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.3019ms
2025-04-06 16:41:52.265 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.265 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.265 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.265 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.268 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.269 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.269 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.270 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.270 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9544ms
2025-04-06 16:41:52.270 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.270 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4352ms
2025-04-06 16:41:52.272 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.273 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.274 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7161ms
2025-04-06 16:41:52.274 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.7099ms
2025-04-06 16:41:52.275 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.275 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.275 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.275 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.278 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.279 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.279 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1693ms
2025-04-06 16:41:52.279 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.280 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.2595ms
2025-04-06 16:41:52.280 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.280 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.280 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.280 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.282 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.284 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.284 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8575ms
2025-04-06 16:41:52.284 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.284 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5329ms
2025-04-06 16:41:52.286 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.286 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.286 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.286 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.288 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.289 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.290 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8771ms
2025-04-06 16:41:52.290 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.290 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.290 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.290 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.290 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.290 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.367ms
2025-04-06 16:41:52.292 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.293 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.294 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0066ms
2025-04-06 16:41:52.294 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.294 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4773ms
2025-04-06 16:41:52.295 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.295 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.295 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.295 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.297 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.298 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.299 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8951ms
2025-04-06 16:41:52.299 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.299 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.7262ms
2025-04-06 16:41:52.301 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.301 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.301 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.301 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.303 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.304 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.305 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7781ms
2025-04-06 16:41:52.305 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.305 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=820000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.6245ms
2025-04-06 16:41:52.305 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.305 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.305 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.305 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.309 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.310 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.310 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.1283ms
2025-04-06 16:41:52.310 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.310 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.310 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.310 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.310 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.7141ms
2025-04-06 16:41:52.312 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.314 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.314 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=830000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.314 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.314 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2749ms
2025-04-06 16:41:52.314 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.314 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.314 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.314 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0338ms
2025-04-06 16:41:52.317 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.318 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.319 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.319 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3736ms
2025-04-06 16:41:52.319 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.319 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.319 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.319 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=830000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.2069ms
2025-04-06 16:41:52.321 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.322 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.324 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7876ms
2025-04-06 16:41:52.324 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.324 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.5456ms
2025-04-06 16:41:52.325 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.325 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.325 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.325 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.328 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.329 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.330 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.330 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.9335ms
2025-04-06 16:41:52.330 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.330 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.330 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.330 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.6489ms
2025-04-06 16:41:52.331 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.334 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.335 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.336 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1816ms
2025-04-06 16:41:52.336 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.336 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.336 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 6.0119ms
2025-04-06 16:41:52.336 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.336 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.337 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.339 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.341 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.341 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8673ms
2025-04-06 16:41:52.342 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.342 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 5.949ms
2025-04-06 16:41:52.344 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.344 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.344 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.344 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.348 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.348 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.350 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0425ms
2025-04-06 16:41:52.350 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.351 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.351 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.351 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.351 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 7.0739ms
2025-04-06 16:41:52.354 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.356 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.356 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3298ms
2025-04-06 16:41:52.357 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.357 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 6.7164ms
2025-04-06 16:41:52.358 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.358 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.358 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.358 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.361 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.362 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.363 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.359ms
2025-04-06 16:41:52.363 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.363 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.9031ms
2025-04-06 16:41:52.363 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.363 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.363 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.365 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.366 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.367 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1166ms
2025-04-06 16:41:52.367 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.368 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.7597ms
2025-04-06 16:41:52.367 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.368 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.368 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.368 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.370 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.371 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.372 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0877ms
2025-04-06 16:41:52.372 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.372 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.9638ms
2025-04-06 16:41:52.373 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.373 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.373 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.374 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.376 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.377 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.377 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8534ms
2025-04-06 16:41:52.378 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.378 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.378 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.378 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.378 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.3709ms
2025-04-06 16:41:52.378 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.380 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.381 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.382 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1843ms
2025-04-06 16:41:52.382 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.382 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.7573ms
2025-04-06 16:41:52.384 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.384 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.384 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.384 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.388 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.388 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6643ms
2025-04-06 16:41:52.388 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.388 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.0831ms
2025-04-06 16:41:52.390 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.391 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.391 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.391 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.393 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.394 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.395 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8889ms
2025-04-06 16:41:52.395 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.395 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.3614ms
2025-04-06 16:41:52.396 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.396 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.396 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.396 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.398 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.400 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.400 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9755ms
2025-04-06 16:41:52.400 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.4684ms
2025-04-06 16:41:52.401 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.401 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.401 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.401 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.403 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.404 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.405 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6882ms
2025-04-06 16:41:52.405 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.405 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.2824ms
2025-04-06 16:41:52.407 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.407 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.407 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.407 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.409 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.410 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.411 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0013ms
2025-04-06 16:41:52.411 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.411 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.411 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.4646ms
2025-04-06 16:41:52.411 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.411 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.411 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.414 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.415 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0162ms
2025-04-06 16:41:52.415 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 4.6018ms
2025-04-06 16:41:52.963 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:41:52.963 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.963 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.963 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:41:52.965 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:41:52.967 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.968 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1267ms
2025-04-06 16:41:52.968 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:41:52.968 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6025ms
2025-04-06 16:41:52.971 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - null null
2025-04-06 16:41:52.971 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:41:52.971 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.971 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:41:52.973 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 16:41:52.974 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:41:52.974 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.2497ms
2025-04-06 16:41:52.974 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:41:52.975 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 3.8925ms
2025-04-06 16:42:01.988 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:01.989 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:01.989 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:01.989 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:01.991 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:01.993 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:01.993 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3148ms
2025-04-06 16:42:01.994 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:01.994 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2033ms
2025-04-06 16:42:01.998 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:01.998 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:01.998 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:01.998 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.000 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.001 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.002 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7827ms
2025-04-06 16:42:02.002 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.002 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=840000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.2763ms
2025-04-06 16:42:02.704 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.704 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.704 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.704 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.706 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.706 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.707 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2.9251ms
2025-04-06 16:42:02.707 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.708 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.7683ms
2025-04-06 16:42:02.710 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.710 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.710 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.710 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.712 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.713 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.713 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.1118ms
2025-04-06 16:42:02.714 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.714 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.714 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.8629ms
2025-04-06 16:42:02.714 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.714 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.714 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.716 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.717 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.718 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4246ms
2025-04-06 16:42:02.718 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.718 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.3459ms
2025-04-06 16:42:02.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.718 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.718 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.718 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.720 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.721 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.722 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4981ms
2025-04-06 16:42:02.722 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.722 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.722 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=810000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.2051ms
2025-04-06 16:42:02.723 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.723 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.723 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.724 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.726 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.727 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7868ms
2025-04-06 16:42:02.727 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.727 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.727 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4456ms
2025-04-06 16:42:02.727 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.727 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.727 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.729 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.730 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.731 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7522ms
2025-04-06 16:42:02.731 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2662ms
2025-04-06 16:42:02.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=760000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.732 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.732 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.732 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.735 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.735 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.736 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.5127ms
2025-04-06 16:42:02.736 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.736 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=760000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 3.9646ms
2025-04-06 16:42:02.737 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.738 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.738 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.738 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.739 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.740 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.741 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.5664ms
2025-04-06 16:42:02.741 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0577ms
2025-04-06 16:42:02.746 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.746 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.746 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.747 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.748 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.749 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.750 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.750 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.5015ms
2025-04-06 16:42:02.750 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.750 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.750 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0761ms
2025-04-06 16:42:02.750 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.751 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.753 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=650000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.754 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.754 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.754 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.754 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.754 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6015ms
2025-04-06 16:42:02.755 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.755 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1446ms
2025-04-06 16:42:02.757 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.758 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.758 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.758 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.758 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.759 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9871ms
2025-04-06 16:42:02.759 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.759 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.760 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=650000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.6334ms
2025-04-06 16:42:02.761 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.763 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.763 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.507ms
2025-04-06 16:42:02.763 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=630000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.763 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.764 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.764 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.9213ms
2025-04-06 16:42:02.764 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.764 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.766 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.766 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.768 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0249ms
2025-04-06 16:42:02.768 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.768 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=630000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.7985ms
2025-04-06 16:42:02.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.769 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.769 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.769 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.771 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.773 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.773 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0824ms
2025-04-06 16:42:02.773 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.773 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.843ms
2025-04-06 16:42:02.774 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=610000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.774 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.774 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.774 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.777 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.779 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=610000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.779 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.779 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.779 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.779 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.9122ms
2025-04-06 16:42:02.780 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.780 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=610000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.9778ms
2025-04-06 16:42:02.780 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.783 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.785 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.786 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.786 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.786 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.786 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.2728ms
2025-04-06 16:42:02.786 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.787 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=610000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.2267ms
2025-04-06 16:42:02.791 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.791 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.792 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.792 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.792 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.792 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.793 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1964ms
2025-04-06 16:42:02.793 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.793 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.7515ms
2025-04-06 16:42:02.799 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.801 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.801 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.801 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.802 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.802 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=570000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.802 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.802 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.802 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.802 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.803 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.1385ms
2025-04-06 16:42:02.803 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.805 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.806 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.807 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 17.3352ms
2025-04-06 16:42:02.808 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.808 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.808 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.808 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3108ms
2025-04-06 16:42:02.808 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.8616ms
2025-04-06 16:42:02.810 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.811 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.812 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.812 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.813 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.815 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.814 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.815 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.816 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 13.3352ms
2025-04-06 16:42:02.816 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.816 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.0428ms
2025-04-06 16:42:02.816 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.816 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=570000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.7102ms
2025-04-06 16:42:02.816 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.0423ms
2025-04-06 16:42:02.820 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.821 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.822 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.655ms
2025-04-06 16:42:02.822 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.6449ms
2025-04-06 16:42:02.824 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.824 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.824 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.824 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.826 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.828 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.828 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.828 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2309ms
2025-04-06 16:42:02.828 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.828 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.829 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.829 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.9392ms
2025-04-06 16:42:02.829 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.831 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.832 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.833 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.22ms
2025-04-06 16:42:02.833 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.833 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.833 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.833 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.971ms
2025-04-06 16:42:02.833 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.833 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.837 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.838 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.839 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4154ms
2025-04-06 16:42:02.839 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.839 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1687ms
2025-04-06 16:42:02.840 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.840 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.840 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.840 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.843 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.844 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.844 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.845 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.845 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.845 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.845 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5666ms
2025-04-06 16:42:02.845 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.845 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2765ms
2025-04-06 16:42:02.848 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.850 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.853 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.853 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.1572ms
2025-04-06 16:42:02.853 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.853 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.853 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.853 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=460000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.3423ms
2025-04-06 16:42:02.853 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.893 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.893 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.893 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=440000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.893 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.893 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.893 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.893 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.893 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.893 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.893 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.893 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.893 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.893 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.893 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.894 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.894 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 40.851ms
2025-04-06 16:42:02.894 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.894 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 41.5305ms
2025-04-06 16:42:02.895 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.895 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.895 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.895 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.906 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.906 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.908 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.908 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.909 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.8522ms
2025-04-06 16:42:02.909 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.910 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=440000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.8876ms
2025-04-06 16:42:02.911 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.912 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.913 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.913 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.913 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.916 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 22.1077ms
2025-04-06 16:42:02.916 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.916 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.916 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.917 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.917 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.917 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 23.8905ms
2025-04-06 16:42:02.917 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.917 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.917 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.917 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.917 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.917 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.917 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.917 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.931 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:02.932 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.958 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 51.5278ms
2025-04-06 16:42:02.958 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.959 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 53.8008ms
2025-04-06 16:42:02.960 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.961 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.961 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.962 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.973 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.973 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.973 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.974 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.974 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.974 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.974 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.974 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.974 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.974 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.974 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.974 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.975 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.975 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.975 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.976 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:02.976 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.977 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:02.977 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:02.977 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.978 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.978 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:02.980 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:02.980 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.980 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:02.984 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 90.8119ms
2025-04-06 16:42:02.985 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.987 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 92.7557ms
2025-04-06 16:42:02.989 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.991 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.991 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.992 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 96.6652ms
2025-04-06 16:42:02.992 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.992 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 97.684ms
2025-04-06 16:42:02.994 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:02.994 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.995 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:02.999 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 86.3253ms
2025-04-06 16:42:02.999 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.999 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 81.8928ms
2025-04-06 16:42:02.999 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:02.999 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 106.0631ms
2025-04-06 16:42:02.999 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 83.707ms
2025-04-06 16:42:03.000 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.000 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.000 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.000 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.000 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.000 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.006 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 30.6387ms
2025-04-06 16:42:03.006 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.007 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.007 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.007 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.007 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.008 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 33.826ms
2025-04-06 16:42:03.008 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.008 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.008 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.008 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.008 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.008 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.008 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.008 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 90.585ms
2025-04-06 16:42:03.008 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.008 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 92.6764ms
2025-04-06 16:42:03.008 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.008 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.008 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.008 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.009 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 34.8064ms
2025-04-06 16:42:03.009 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.009 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 36.6431ms
2025-04-06 16:42:03.009 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.012 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 50.4829ms
2025-04-06 16:42:03.019 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.019 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.019 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.020 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.020 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.020 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 59.8913ms
2025-04-06 16:42:03.020 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.020 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.020 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.020 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.020 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.020 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.025 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 107.3938ms
2025-04-06 16:42:03.025 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 50.2872ms
2025-04-06 16:42:03.025 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.025 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.025 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 52.3532ms
2025-04-06 16:42:03.025 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 107.8031ms
2025-04-06 16:42:03.025 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.029 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 52.113ms
2025-04-06 16:42:03.029 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.029 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.029 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.032 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 55.4541ms
2025-04-06 16:42:03.032 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.035 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.035 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.039 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.039 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 64.7714ms
2025-04-06 16:42:03.039 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 58.8239ms
2025-04-06 16:42:03.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.041 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.041 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.041 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.041 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.041 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.041 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 67.9439ms
2025-04-06 16:42:03.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 64.4039ms
2025-04-06 16:42:03.041 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.041 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.041 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.041 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.046 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.046 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.046 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.046 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.050 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 42.4844ms
2025-04-06 16:42:03.051 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.051 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 50.5629ms
2025-04-06 16:42:03.051 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.051 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.051 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.051 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 51.69ms
2025-04-06 16:42:03.052 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=420000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.053 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.053 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.053 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.056 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.056 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.056 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.056 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.057 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.058 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.059 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.059 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 38.9805ms
2025-04-06 16:42:03.059 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.060 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.060 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.060 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.061 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 52.165ms
2025-04-06 16:42:03.066 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.066 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.066 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.069 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.071 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.074 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.074 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.074 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.074 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.075 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.077 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.078 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 70.315ms
2025-04-06 16:42:03.078 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.079 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.079 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.080 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.081 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 60.4793ms
2025-04-06 16:42:03.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.082 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 40.4693ms
2025-04-06 16:42:03.082 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.082 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.083 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.083 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.084 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.084 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 38.0845ms
2025-04-06 16:42:03.084 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.086 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.086 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.088 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 17.2028ms
2025-04-06 16:42:03.088 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 80.5133ms
2025-04-06 16:42:03.088 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.088 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.088 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.088 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 22.1117ms
2025-04-06 16:42:03.088 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.088 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.092 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.100 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=330000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.100 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 44.0186ms
2025-04-06 16:42:03.101 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.101 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.102 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.103 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.103 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.104 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.104 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.105 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.105 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.105 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.110 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 68.1073ms
2025-04-06 16:42:03.110 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 53.1956ms
2025-04-06 16:42:03.110 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.110 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.110 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.110 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 71.6414ms
2025-04-06 16:42:03.111 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.111 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.112 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.113 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.114 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 69.1312ms
2025-04-06 16:42:03.117 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=310000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.118 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.118 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.118 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.118 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.119 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.119 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.119 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.119 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.119 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 65.8404ms
2025-04-06 16:42:03.119 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.119 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.122 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.123 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 48.1955ms
2025-04-06 16:42:03.123 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 62.7808ms
2025-04-06 16:42:03.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=310000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.124 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.124 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.124 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.125 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=420000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 74.6633ms
2025-04-06 16:42:03.126 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=430000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 86.7462ms
2025-04-06 16:42:03.126 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.128 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.128 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.129 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.129 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.129 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.129 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.129 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.130 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 46.6372ms
2025-04-06 16:42:03.130 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.131 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.132 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.132 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.132 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=300000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.132 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.132 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.135 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.138 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.138 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 26.4827ms
2025-04-06 16:42:03.138 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 46.889ms
2025-04-06 16:42:03.138 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.138 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.138 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.138 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 35.2257ms
2025-04-06 16:42:03.139 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.139 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 51.0002ms
2025-04-06 16:42:03.139 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.139 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 81.2291ms
2025-04-06 16:42:03.139 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.140 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.140 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.142 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.144 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.144 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 34.7913ms
2025-04-06 16:42:03.145 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.145 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.146 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 35.4257ms
2025-04-06 16:42:03.147 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.147 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 71.861ms
2025-04-06 16:42:03.162 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 57.7806ms
2025-04-06 16:42:03.162 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.163 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.164 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 83.2266ms
2025-04-06 16:42:03.165 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.165 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.165 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.165 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.165 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.166 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 47.6515ms
2025-04-06 16:42:03.167 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.167 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.167 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.168 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.168 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=310000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 51.4698ms
2025-04-06 16:42:03.168 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 43.6553ms
2025-04-06 16:42:03.168 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 45.7449ms
2025-04-06 16:42:03.168 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 38.6503ms
2025-04-06 16:42:03.168 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.168 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.168 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.169 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=280000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.169 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 40.3526ms
2025-04-06 16:42:03.169 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 50.1ms
2025-04-06 16:42:03.169 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=310000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 45.6667ms
2025-04-06 16:42:03.169 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.169 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.170 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=330000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 69.6541ms
2025-04-06 16:42:03.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.170 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=270000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.170 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.170 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.170 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.170 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.170 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.170 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.170 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.170 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.171 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.171 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 25.5506ms
2025-04-06 16:42:03.171 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 36.0447ms
2025-04-06 16:42:03.171 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.172 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.172 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.173 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.173 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 31.0508ms
2025-04-06 16:42:03.173 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.173 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=300000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 40.8966ms
2025-04-06 16:42:03.173 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.173 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.173 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.174 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 34.234ms
2025-04-06 16:42:03.174 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.175 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.176 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 38.0286ms
2025-04-06 16:42:03.176 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.176 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.177 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.178 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.178 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.6907ms
2025-04-06 16:42:03.178 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.178 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.178 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.179 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.179 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.179 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.180 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.3096ms
2025-04-06 16:42:03.180 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.8752ms
2025-04-06 16:42:03.180 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.181 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.181 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.181 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.182 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.182 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.182 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.4642ms
2025-04-06 16:42:03.182 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.183 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.184 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.9472ms
2025-04-06 16:42:03.185 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.185 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.9655ms
2025-04-06 16:42:03.185 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.185 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.186 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=270000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.3689ms
2025-04-06 16:42:03.187 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 17.4029ms
2025-04-06 16:42:03.188 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.188 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.5801ms
2025-04-06 16:42:03.188 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=280000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 19.6762ms
2025-04-06 16:42:03.188 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.190 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.0124ms
2025-04-06 16:42:03.190 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.190 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.190 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.22ms
2025-04-06 16:42:03.191 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.192 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=250000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.192 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.192 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.569ms
2025-04-06 16:42:03.192 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.192 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.193 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.193 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.192 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.193 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.193 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.193 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.1378ms
2025-04-06 16:42:03.195 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.195 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.195 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.196 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.197 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.197 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.198 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.198 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.198 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4106ms
2025-04-06 16:42:03.198 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.199 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.0595ms
2025-04-06 16:42:03.199 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.199 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.0523ms
2025-04-06 16:42:03.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=250000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.6957ms
2025-04-06 16:42:03.201 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.201 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.202 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.202 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.202 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.203 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.204 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.755ms
2025-04-06 16:42:03.204 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.204 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.8419ms
2025-04-06 16:42:03.205 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.207 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.208 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4038ms
2025-04-06 16:42:03.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.208 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.208 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.208 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.208 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9262ms
2025-04-06 16:42:03.210 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.211 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.212 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.212 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.212 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.212 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.212 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.5182ms
2025-04-06 16:42:03.212 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.212 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.1112ms
2025-04-06 16:42:03.216 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.219 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.219 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.219 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.219 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.219 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.1285ms
2025-04-06 16:42:03.219 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.220 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.3998ms
2025-04-06 16:42:03.221 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.223 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.223 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.224 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.224 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.2154ms
2025-04-06 16:42:03.224 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.224 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.224 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.224 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.9279ms
2025-04-06 16:42:03.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.225 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.226 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.226 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.229 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.229 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.231 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.79ms
2025-04-06 16:42:03.231 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9282ms
2025-04-06 16:42:03.231 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.231 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.231 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.232 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.232 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.232 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.233 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3075ms
2025-04-06 16:42:03.233 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=230000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.1859ms
2025-04-06 16:42:03.235 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.236 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.237 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.237 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8113ms
2025-04-06 16:42:03.237 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.237 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.237 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.238 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.4401ms
2025-04-06 16:42:03.240 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.241 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.242 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4744ms
2025-04-06 16:42:03.242 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.242 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.242 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.242 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.242 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.52ms
2025-04-06 16:42:03.245 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.246 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.247 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6691ms
2025-04-06 16:42:03.247 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.247 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.6726ms
2025-04-06 16:42:03.247 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.247 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.247 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.251 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.252 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.252 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.252 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8168ms
2025-04-06 16:42:03.252 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.252 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.252 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.252 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.253 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.3639ms
2025-04-06 16:42:03.255 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.256 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.257 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8502ms
2025-04-06 16:42:03.257 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.258 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4417ms
2025-04-06 16:42:03.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.258 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.258 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.260 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.261 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.262 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8977ms
2025-04-06 16:42:03.262 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.263 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8281ms
2025-04-06 16:42:03.263 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.263 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.263 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.265 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.266 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.267 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.2974ms
2025-04-06 16:42:03.267 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.267 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.9891ms
2025-04-06 16:42:03.268 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.268 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.268 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.268 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.270 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.271 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.273 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3114ms
2025-04-06 16:42:03.273 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.273 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.7862ms
2025-04-06 16:42:03.273 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.273 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.273 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.273 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.276 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.278 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.278 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4903ms
2025-04-06 16:42:03.278 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.278 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.278 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.1843ms
2025-04-06 16:42:03.278 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.278 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.279 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.281 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.283 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.284 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0982ms
2025-04-06 16:42:03.284 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.284 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8783ms
2025-04-06 16:42:03.284 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.284 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.285 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.285 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.288 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.289 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1543ms
2025-04-06 16:42:03.289 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.290 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.41ms
2025-04-06 16:42:03.291 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.291 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.291 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.291 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.295 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.296 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.297 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.7312ms
2025-04-06 16:42:03.297 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.297 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.3483ms
2025-04-06 16:42:03.298 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.298 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.298 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.298 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.301 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.302 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.303 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7403ms
2025-04-06 16:42:03.303 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.303 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4031ms
2025-04-06 16:42:03.304 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.304 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.304 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.304 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.310 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.311 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.4779ms
2025-04-06 16:42:03.311 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.311 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.4005ms
2025-04-06 16:42:03.355 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.355 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.355 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.355 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.356 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.358 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.359 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.75ms
2025-04-06 16:42:03.359 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.359 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.6581ms
2025-04-06 16:42:03.362 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.362 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.362 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.362 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.364 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.365 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.366 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8312ms
2025-04-06 16:42:03.366 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.366 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.366 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.366 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=220000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.846ms
2025-04-06 16:42:03.366 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.367 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.369 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.370 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.371 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7843ms
2025-04-06 16:42:03.372 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.372 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.372 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.372 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.372 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7326ms
2025-04-06 16:42:03.372 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.373 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.375 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.376 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.376 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.832ms
2025-04-06 16:42:03.376 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.376 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.376 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5211ms
2025-04-06 16:42:03.376 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.378 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.380 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.380 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.381 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.381 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.381 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3805ms
2025-04-06 16:42:03.381 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.381 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.381 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5182ms
2025-04-06 16:42:03.384 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.385 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.385 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.385 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.385 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.386 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.386 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0052ms
2025-04-06 16:42:03.386 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.386 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.2724ms
2025-04-06 16:42:03.387 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.387 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.387 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.387 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.388 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.389 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.391 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.391 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.392 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3682ms
2025-04-06 16:42:03.392 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.392 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.5563ms
2025-04-06 16:42:03.393 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.394 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.394 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.5816ms
2025-04-06 16:42:03.394 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.6311ms
2025-04-06 16:42:03.394 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.394 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.394 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.397 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.399 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.399 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.399 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.399 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.399 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6136ms
2025-04-06 16:42:03.399 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.399 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8647ms
2025-04-06 16:42:03.400 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.400 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.400 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.400 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.402 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.403 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.404 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1089ms
2025-04-06 16:42:03.404 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.404 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.405 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.405 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.405 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7789ms
2025-04-06 16:42:03.405 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.406 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.407 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.409 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.3468ms
2025-04-06 16:42:03.409 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.409 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=210000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.4158ms
2025-04-06 16:42:03.410 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.410 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.410 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.411 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.411 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.412 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.413 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.8196ms
2025-04-06 16:42:03.413 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.413 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3959ms
2025-04-06 16:42:03.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.415 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.416 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.416 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1657ms
2025-04-06 16:42:03.417 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.417 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.417 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.417 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.0854ms
2025-04-06 16:42:03.417 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.421 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.421 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.422 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6117ms
2025-04-06 16:42:03.422 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.422 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.422 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1699ms
2025-04-06 16:42:03.422 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.422 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.424 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.425 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.426 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.426 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.426 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.426 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.427 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8957ms
2025-04-06 16:42:03.427 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.427 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.428 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.5025ms
2025-04-06 16:42:03.428 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.428 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.428 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.429 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.431 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.432 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7397ms
2025-04-06 16:42:03.432 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.432 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.8493ms
2025-04-06 16:42:03.432 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.433 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.434 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.434 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.435 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.436 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.461ms
2025-04-06 16:42:03.436 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=200000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.1394ms
2025-04-06 16:42:03.438 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.439 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.440 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=190000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.441 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1885ms
2025-04-06 16:42:03.441 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.441 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.441 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.441 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.441 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.5234ms
2025-04-06 16:42:03.444 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.445 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.445 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.445 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.446 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.446 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.446 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8678ms
2025-04-06 16:42:03.446 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.446 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=190000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.5355ms
2025-04-06 16:42:03.448 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.448 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.449 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.449 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.449 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.450 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.451 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6379ms
2025-04-06 16:42:03.451 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.451 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1999ms
2025-04-06 16:42:03.452 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.453 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.454 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.454 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.455 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.6805ms
2025-04-06 16:42:03.455 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.6121ms
2025-04-06 16:42:03.458 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.459 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.459 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.459 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.459 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.459 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.460 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.4341ms
2025-04-06 16:42:03.460 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.0844ms
2025-04-06 16:42:03.463 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.464 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.464 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.465 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.465 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.465 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.465 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9655ms
2025-04-06 16:42:03.465 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.466 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.7773ms
2025-04-06 16:42:03.467 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.468 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.470 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6187ms
2025-04-06 16:42:03.470 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.470 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6863ms
2025-04-06 16:42:03.470 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.470 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.471 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.473 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.474 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.474 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.474 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.474 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.475 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6866ms
2025-04-06 16:42:03.475 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.475 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.574ms
2025-04-06 16:42:03.477 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.478 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.479 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9717ms
2025-04-06 16:42:03.480 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.480 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.4864ms
2025-04-06 16:42:03.480 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.480 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.480 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.481 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.483 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.485 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.486 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.486 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8134ms
2025-04-06 16:42:03.486 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.486 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.486 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.486 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.486 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1895ms
2025-04-06 16:42:03.488 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.489 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.490 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.490 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.490 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.490 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.491 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.395ms
2025-04-06 16:42:03.491 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.491 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8655ms
2025-04-06 16:42:03.492 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.493 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.493 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.493 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.493 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.495 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.495 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9322ms
2025-04-06 16:42:03.496 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.7264ms
2025-04-06 16:42:03.497 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.498 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.499 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.499 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.499 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.500 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.500 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3951ms
2025-04-06 16:42:03.500 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.501 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.6382ms
2025-04-06 16:42:03.503 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.504 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.505 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.505 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.505 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.505 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.505 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6595ms
2025-04-06 16:42:03.505 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.506 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.0108ms
2025-04-06 16:42:03.507 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.508 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.509 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.509 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.510 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.510 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8388ms
2025-04-06 16:42:03.510 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.510 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.510 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5707ms
2025-04-06 16:42:03.512 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.513 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.514 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.514 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0854ms
2025-04-06 16:42:03.514 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.514 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.514 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.515 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.0794ms
2025-04-06 16:42:03.515 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.517 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.519 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.519 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.519 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.519 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.519 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.520 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.9357ms
2025-04-06 16:42:03.520 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.520 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.5076ms
2025-04-06 16:42:03.522 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.522 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.523 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.523 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.523 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.523 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.525 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0255ms
2025-04-06 16:42:03.525 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.525 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.9185ms
2025-04-06 16:42:03.527 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.528 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.530 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.4647ms
2025-04-06 16:42:03.530 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.530 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.0542ms
2025-04-06 16:42:03.532 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.532 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.532 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.532 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.534 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.536 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.536 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.537 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.537 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.537 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.537 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1572ms
2025-04-06 16:42:03.537 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.537 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7605ms
2025-04-06 16:42:03.540 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.542 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.543 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.9865ms
2025-04-06 16:42:03.543 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.543 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.6619ms
2025-04-06 16:42:03.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.545 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.545 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.546 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.548 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.549 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.550 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8018ms
2025-04-06 16:42:03.550 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.551 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.3904ms
2025-04-06 16:42:03.552 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.552 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.552 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.552 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.554 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.556 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.558 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.2976ms
2025-04-06 16:42:03.558 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.558 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.02ms
2025-04-06 16:42:03.838 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:03.838 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.838 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.838 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:03.841 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:03.842 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.844 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4106ms
2025-04-06 16:42:03.844 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:03.844 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.221ms
2025-04-06 16:42:03.846 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:03.846 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:03.846 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.847 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:03.848 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:03.849 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:03.850 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7496ms
2025-04-06 16:42:03.851 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:03.851 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.6166ms
2025-04-06 16:42:05.045 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:05.045 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:05.046 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:05.046 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:05.046 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:42:05.046 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:42:05.049 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:05.049 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:42:05.073 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:42:05.074 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:42:05.075 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 25.4338ms
2025-04-06 16:42:05.075 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:42:05.075 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 29.4586ms
2025-04-06 16:42:05.079 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:05.079 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:05.079 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:42:05.089 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:42:05.090 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:42:05.114 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 16:42:05.114 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:42:05.116 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 26.1621ms
2025-04-06 16:42:05.116 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:42:05.116 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 36.5734ms
2025-04-06 16:42:05.131 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:05.134 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 84.9194ms
2025-04-06 16:42:05.134 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:42:05.134 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 88.9775ms
2025-04-06 16:42:25.481 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:25.481 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:25.481 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:25.481 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:25.484 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:25.486 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:25.493 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.8013ms
2025-04-06 16:42:25.493 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:25.493 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.426ms
2025-04-06 16:42:25.498 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:25.498 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:25.499 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:25.499 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:25.505 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:25.510 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:25.513 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.5129ms
2025-04-06 16:42:25.513 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:25.513 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.1167ms
2025-04-06 16:42:33.978 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:33.978 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:33.978 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:42:33.978 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:42:33.979 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:33.979 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:33.979 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:42:33.979 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:33.983 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:42:33.987 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:42:33.988 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:42:33.993 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.8953ms
2025-04-06 16:42:33.993 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:42:33.993 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.562ms
2025-04-06 16:42:33.996 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:33.996 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 17.8693ms
2025-04-06 16:42:33.996 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:42:33.996 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 18.5899ms
2025-04-06 16:42:33.997 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:42:33.997 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:33.997 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:42:33.997 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:42:33.999 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 16:42:34.000 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:42:34.000 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.1242ms
2025-04-06 16:42:34.001 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:42:34.001 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 3.6711ms
2025-04-06 16:42:50.717 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:50.717 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:50.717 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:50.717 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:50.719 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:50.720 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:50.721 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7357ms
2025-04-06 16:42:50.721 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:50.721 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3667ms
2025-04-06 16:42:50.727 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:42:50.728 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:50.728 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:50.728 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:50.730 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:42:50.731 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:50.731 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4639ms
2025-04-06 16:42:50.731 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:42:50.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.0477ms
2025-04-06 16:42:53.597 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:42:53.597 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:53.597 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:42:53.597 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:53.597 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:42:53.597 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:42:53.597 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:42:53.597 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:42:53.599 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:42:53.601 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:53.601 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:42:53.602 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:42:53.606 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 8.1911ms
2025-04-06 16:42:53.606 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.1961ms
2025-04-06 16:42:53.606 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:42:53.606 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:42:53.610 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 13.1102ms
2025-04-06 16:42:53.610 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 13.6397ms
2025-04-06 16:43:11.990 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:43:11.991 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:11.991 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:43:11.991 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:43:11.993 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:43:11.995 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:43:11.995 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.2142ms
2025-04-06 16:43:11.995 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:43:11.995 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.8178ms
2025-04-06 16:43:20.979 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:43:20.980 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:20.980 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:43:20.980 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 16:43:20.983 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 16:43:20.984 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 16:43:20.985 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 5.207ms
2025-04-06 16:43:20.985 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 16:43:20.985 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.6835ms
2025-04-06 16:43:23.849 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:43:23.849 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:43:23.849 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:23.849 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:23.849 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:43:23.849 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:43:23.849 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:43:23.850 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:43:23.853 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:43:23.854 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:43:23.858 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:43:23.858 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.0697ms
2025-04-06 16:43:23.858 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:43:23.858 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.6379ms
2025-04-06 16:43:23.862 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:43:23.864 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 14.2432ms
2025-04-06 16:43:23.865 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:43:23.865 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 15.5064ms
2025-04-06 16:43:24.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:43:24.867 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:24.867 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:43:24.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:43:24.867 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:43:24.867 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:24.867 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:43:24.871 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:43:24.872 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:43:24.873 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.6746ms
2025-04-06 16:43:24.873 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:43:24.873 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.411ms
2025-04-06 16:43:24.875 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:43:24.883 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:43:24.884 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:43:24.884 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:43:24.884 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:43:24.887 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:43:24.888 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:43:24.889 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.1825ms
2025-04-06 16:43:24.889 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:43:24.913 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 29.3049ms
2025-04-06 16:43:24.926 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:43:24.927 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:43:24.927 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 52.2383ms
2025-04-06 16:43:24.927 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:43:24.927 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 60.1885ms
2025-04-06 16:45:23.947 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:45:23.947 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:23.948 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:45:23.950 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:45:23.957 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:45:23.990 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:45:23.991 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 40.6514ms
2025-04-06 16:45:23.991 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:45:23.991 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 44.232ms
2025-04-06 16:45:23.998 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:45:23.999 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:23.999 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:45:23.999 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:45:24.001 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:45:24.003 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:45:24.003 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4399ms
2025-04-06 16:45:24.003 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:45:24.004 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.2052ms
2025-04-06 16:45:25.430 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:45:25.430 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:45:25.430 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:25.430 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:25.430 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:45:25.430 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:45:25.430 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:45:25.430 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:45:25.434 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:45:25.439 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:45:25.442 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 12.1565ms
2025-04-06 16:45:25.443 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:45:25.443 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 13.431ms
2025-04-06 16:45:25.445 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:45:25.448 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:45:25.448 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:25.448 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:45:25.448 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:45:25.448 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:45:25.450 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 20.4989ms
2025-04-06 16:45:25.451 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:45:25.451 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 21.0148ms
2025-04-06 16:45:25.453 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 16:45:25.454 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:45:25.454 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.382ms
2025-04-06 16:45:25.454 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:45:25.455 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.4734ms
2025-04-06 16:45:28.557 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/4d661039-338d-43dc-9a10-bf9ba355ae9b - null null
2025-04-06 16:45:28.557 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:28.558 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/4d661039-338d-43dc-9a10-bf9ba355ae9b - 204 null null 0.3261ms
2025-04-06 16:45:28.560 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/4d661039-338d-43dc-9a10-bf9ba355ae9b - null null
2025-04-06 16:45:28.560 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:28.560 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-06 16:45:28.564 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:45:28.573 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-06 16:45:28.648 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-06 16:45:28.666 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-06 16:45:28.667 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 102.4617ms
2025-04-06 16:45:28.667 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-06 16:45:28.667 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/4d661039-338d-43dc-9a10-bf9ba355ae9b - 204 null null 106.8701ms
2025-04-06 16:45:28.672 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:45:28.672 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:45:28.672 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:45:28.672 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:45:28.675 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:45:28.676 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:45:28.676 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.7056ms
2025-04-06 16:45:28.676 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:45:28.676 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.0735ms
2025-04-06 16:47:02.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:47:02.218 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:47:02.219 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:47:02.219 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:47:02.219 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:47:02.219 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:47:02.220 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:47:02.220 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:47:02.227 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:47:02.228 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:47:02.256 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 37.0223ms
2025-04-06 16:47:02.256 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:47:02.257 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 38.8218ms
2025-04-06 16:47:02.258 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:47:02.258 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:47:02.261 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 40.5636ms
2025-04-06 16:47:02.261 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:47:02.261 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 42.0955ms
2025-04-06 16:47:02.267 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:47:02.268 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:47:02.268 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:47:02.268 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:47:02.270 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:47:02.271 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:47:02.271 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 3.3219ms
2025-04-06 16:47:02.271 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:47:02.271 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 3.7625ms
2025-04-06 16:49:37.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:49:37.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:49:37.223 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:49:37.223 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:49:37.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:49:37.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:49:37.224 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:49:37.224 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:49:37.232 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:49:37.237 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:49:37.240 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 16.3786ms
2025-04-06 16:49:37.240 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:49:37.241 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:49:37.241 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.2108ms
2025-04-06 16:49:37.242 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:49:37.245 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 20.7524ms
2025-04-06 16:49:37.245 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:49:37.245 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:49:37.245 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:49:37.247 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:49:37.247 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:49:37.248 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 24.8274ms
2025-04-06 16:49:37.251 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:49:37.252 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:49:37.252 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.0167ms
2025-04-06 16:49:37.253 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:49:37.253 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.4844ms
2025-04-06 16:54:10.213 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 16:54:10.214 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:10.214 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.5224ms
2025-04-06 16:54:10.216 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 16:54:10.216 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:10.216 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:54:10.216 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 16:54:10.225 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 16:54:10.327 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 16:54:10.328 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 111.4695ms
2025-04-06 16:54:10.328 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 16:54:10.328 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 112.0263ms
2025-04-06 16:54:12.536 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:12.536 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:12.536 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:12.536 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:12.539 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:12.540 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:12.543 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.5322ms
2025-04-06 16:54:12.543 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:12.549 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.8627ms
2025-04-06 16:54:12.559 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:54:12.559 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:12.559 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:54:12.559 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:12.561 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:54:12.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:12.562 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.333ms
2025-04-06 16:54:12.562 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:54:12.563 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 3.8202ms
2025-04-06 16:54:13.364 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:13.364 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:13.364 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:13.364 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:13.364 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:13.364 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:13.364 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:13.364 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:13.367 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:13.369 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:54:13.369 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:13.372 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:13.372 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 7.8498ms
2025-04-06 16:54:13.372 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:13.373 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 8.1967ms
2025-04-06 16:54:13.376 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.0727ms
2025-04-06 16:54:13.376 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:13.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.9448ms
2025-04-06 16:54:14.921 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:14.921 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:14.921 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:14.921 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:54:14.925 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:54:14.926 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:14.926 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.3878ms
2025-04-06 16:54:14.926 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:14.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.8219ms
2025-04-06 16:54:16.208 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:16.208 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:16.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:16.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:16.208 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:16.208 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:16.208 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:16.208 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:16.210 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:16.212 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:54:16.213 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:16.213 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:16.218 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.2205ms
2025-04-06 16:54:16.218 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 10.2264ms
2025-04-06 16:54:16.218 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:16.218 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:16.218 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.7314ms
2025-04-06 16:54:16.221 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 13.8817ms
2025-04-06 16:54:17.338 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:17.339 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:17.339 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:17.339 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:17.339 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:54:17.339 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:17.339 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:54:17.339 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:54:17.341 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:17.342 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:17.342 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:54:17.343 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4639ms
2025-04-06 16:54:17.343 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:17.343 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:17.344 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2443ms
2025-04-06 16:54:17.344 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 5.34ms
2025-04-06 16:54:17.344 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:54:17.344 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 5.7062ms
2025-04-06 16:54:17.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:54:17.351 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:17.351 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:54:17.351 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:17.353 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:54:17.357 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:54:17.358 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 6.5178ms
2025-04-06 16:54:17.358 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:54:17.358 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.0078ms
2025-04-06 16:54:19.989 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:19.989 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:19.989 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:19.989 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:19.989 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:19.989 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:19.989 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:19.989 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:19.991 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:19.991 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:54:19.992 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:19.992 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:19.993 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 4.3321ms
2025-04-06 16:54:19.993 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2339ms
2025-04-06 16:54:19.994 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:19.994 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:19.994 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.0411ms
2025-04-06 16:54:19.994 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4263ms
2025-04-06 16:54:20.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:20.807 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:20.807 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:20.807 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:20.811 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:20.813 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:20.813 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.5767ms
2025-04-06 16:54:20.813 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:20.813 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9748ms
2025-04-06 16:54:20.820 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:54:20.820 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:20.820 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:54:20.820 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:20.829 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:54:20.830 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:20.830 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.0167ms
2025-04-06 16:54:20.830 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:54:20.831 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.4029ms
2025-04-06 16:54:21.383 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:21.383 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:21.383 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:21.383 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:54:21.386 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:54:21.386 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:21.387 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.4666ms
2025-04-06 16:54:21.387 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:21.387 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.0717ms
2025-04-06 16:54:22.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:22.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:22.037 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:22.037 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:22.037 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:22.037 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:22.037 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:22.037 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:22.038 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:22.039 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:54:22.039 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:22.040 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.5341ms
2025-04-06 16:54:22.040 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:22.040 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:22.041 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 4.3729ms
2025-04-06 16:54:22.041 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:22.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8713ms
2025-04-06 16:54:22.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.9248ms
2025-04-06 16:54:25.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:25.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:54:25.158 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:25.158 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:25.158 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:25.158 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:54:25.158 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:25.158 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:54:25.160 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:25.160 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:54:25.161 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:25.161 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:25.163 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4716ms
2025-04-06 16:54:25.163 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 4.4535ms
2025-04-06 16:54:25.163 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:25.163 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:54:25.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4447ms
2025-04-06 16:54:25.164 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 5.6797ms
2025-04-06 16:54:25.171 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:54:25.171 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:25.171 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:54:25.171 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:25.179 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:54:25.182 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:54:25.183 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 11.3992ms
2025-04-06 16:54:25.183 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:54:25.183 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 11.8521ms
2025-04-06 16:54:26.606 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:54:26.607 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:26.607 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:26.607 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:26.607 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:26.607 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:26.607 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:54:26.607 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:54:26.608 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:54:26.609 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:54:26.610 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:26.610 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:26.611 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 4.1793ms
2025-04-06 16:54:26.611 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:54:26.611 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5465ms
2025-04-06 16:54:26.611 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:54:26.612 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.0373ms
2025-04-06 16:54:26.612 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6727ms
2025-04-06 16:54:28.915 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:54:28.915 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:54:28.915 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:28.915 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:54:28.917 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:54:28.919 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:54:28.919 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.8559ms
2025-04-06 16:54:28.919 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:54:28.919 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.2484ms
2025-04-06 16:55:51.205 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:55:51.206 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:55:51.206 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:55:51.206 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:55:51.213 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:55:51.221 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:55:51.222 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 16.209ms
2025-04-06 16:55:51.222 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:55:51.222 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 17.5994ms
2025-04-06 16:56:22.558 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:56:22.558 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:56:22.558 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:56:22.558 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:56:22.559 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:56:22.559 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:56:22.559 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:56:22.559 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:56:22.567 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:56:22.568 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:56:22.573 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.4485ms
2025-04-06 16:56:22.573 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:56:22.574 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.1395ms
2025-04-06 16:56:22.574 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:56:22.575 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:56:22.577 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 18.4432ms
2025-04-06 16:56:22.577 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:56:22.577 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 18.9534ms
2025-04-06 16:56:56.070 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 16:56:56.070 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:56:56.071 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:56:56.071 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:56:56.071 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:56:56.071 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:56:56.071 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:56:56.071 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:56:56.082 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:56:56.086 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:56:56.090 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 19.7457ms
2025-04-06 16:56:56.091 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:56:56.091 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:56:56.091 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 20.8843ms
2025-04-06 16:56:56.093 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:56:56.096 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 24.2392ms
2025-04-06 16:56:56.096 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:56:56.099 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 24.8317ms
2025-04-06 16:57:49.859 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - null null
2025-04-06 16:57:49.859 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:49.860 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - 204 null null 1.2748ms
2025-04-06 16:57:49.863 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/signup - application/json 150
2025-04-06 16:57:49.864 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:49.864 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 16:57:49.869 +07:00 [INF] Route matched with {action = "Signup", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Signup(ems_backend.Services.SignupRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 16:57:49.887 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__newUserRequest_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Email] = @__newUserRequest_Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-06 16:57:49.991 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [Dob], [Email], [FirstName], [LastName], [Password], [Phone])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-04-06 16:57:49.997 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 16:57:49.997 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Signup (ems_backend) in 128.5199ms
2025-04-06 16:57:49.997 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 16:57:49.997 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/signup - 200 null application/json; charset=utf-8 135.1342ms
2025-04-06 16:57:51.294 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:57:51.294 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:51.294 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:51.294 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:57:51.297 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:57:51.298 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:51.299 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2762ms
2025-04-06 16:57:51.299 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:51.299 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4263ms
2025-04-06 16:57:51.306 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:57:51.306 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:51.306 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:57:51.306 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:57:51.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:57:51.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:51.317 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.8463ms
2025-04-06 16:57:51.317 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:57:51.317 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.3362ms
2025-04-06 16:57:53.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 16:57:53.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:57:53.454 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:53.454 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:53.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:53.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:53.455 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:57:53.455 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:57:53.457 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:57:53.457 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:57:53.459 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:53.464 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.7571ms
2025-04-06 16:57:53.465 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:53.465 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 16:57:53.466 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.5066ms
2025-04-06 16:57:53.470 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 15.8543ms
2025-04-06 16:57:53.470 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:53.471 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 16.2703ms
2025-04-06 16:57:55.171 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 16:57:55.171 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:55.171 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:57:55.171 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:57:55.173 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:57:55.174 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:55.175 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.9181ms
2025-04-06 16:57:55.175 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:57:55.175 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 4.3634ms
2025-04-06 16:57:56.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:57:56.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 16:57:56.439 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:56.439 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:56.439 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:56.439 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:56.439 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:57:56.439 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:57:56.441 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:57:56.442 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:57:56.443 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 16:57:56.454 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 15.006ms
2025-04-06 16:57:56.454 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:56.458 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:56.460 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 20.5054ms
2025-04-06 16:57:56.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 20.6864ms
2025-04-06 16:57:56.460 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:56.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 20.9226ms
2025-04-06 16:57:58.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 16:57:58.183 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:58.183 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:57:58.183 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:57:58.185 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 16:57:58.186 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:58.187 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.4751ms
2025-04-06 16:57:58.187 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 16:57:58.188 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 4.29ms
2025-04-06 16:57:59.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:57:59.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 16:57:59.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:59.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:59.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:57:59.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:59.270 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:57:59.270 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:57:59.272 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:57:59.272 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 16:57:59.273 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 16:57:59.274 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:57:59.274 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 4.0897ms
2025-04-06 16:57:59.274 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 16:57:59.275 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9629ms
2025-04-06 16:57:59.275 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:57:59.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 5.4275ms
2025-04-06 16:57:59.275 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.5462ms
2025-04-06 16:58:01.540 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:58:01.541 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:01.541 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:01.541 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:58:01.543 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:58:01.544 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:01.544 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4367ms
2025-04-06 16:58:01.544 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:01.544 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.8172ms
2025-04-06 16:58:01.550 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:58:01.550 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:01.550 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:58:01.551 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:58:01.553 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:58:01.554 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:01.554 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8066ms
2025-04-06 16:58:01.554 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:58:01.557 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.7858ms
2025-04-06 16:58:02.421 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:02.421 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:02.421 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:02.421 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:02.421 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:02.421 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:58:02.422 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:58:02.422 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:58:02.423 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:58:02.425 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:58:02.425 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:58:02.426 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:58:02.429 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 7.7027ms
2025-04-06 16:58:02.429 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:02.433 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 11.5476ms
2025-04-06 16:58:02.434 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:58:02.434 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 12.6522ms
2025-04-06 16:58:02.434 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 12.672ms
2025-04-06 16:58:02.437 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:02.437 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:02.437 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:58:02.437 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:58:02.439 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 16:58:02.440 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:58:02.441 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.3481ms
2025-04-06 16:58:02.441 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:58:02.441 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 3.7118ms
2025-04-06 16:58:09.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:58:09.365 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:09.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:09.365 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:09.365 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:09.365 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:58:09.365 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:58:09.365 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:58:09.367 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:58:09.368 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:09.369 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0509ms
2025-04-06 16:58:09.369 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:09.369 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 16:58:09.370 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:09.370 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1401ms
2025-04-06 16:58:09.371 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 5.9781ms
2025-04-06 16:58:09.371 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 16:58:09.371 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.4819ms
2025-04-06 16:58:09.377 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:09.377 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:09.377 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:09.377 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:58:09.380 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:58:09.381 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:58:09.381 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 4.417ms
2025-04-06 16:58:09.382 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:09.382 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 5.2653ms
2025-04-06 16:58:12.131 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 16:58:12.131 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:12.132 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:12.132 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 16:58:12.134 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 16:58:12.135 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:12.136 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9907ms
2025-04-06 16:58:12.136 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 16:58:12.136 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3861ms
2025-04-06 16:58:12.142 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 16:58:12.142 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:12.142 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:58:12.142 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:58:12.144 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 16:58:12.145 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 16:58:12.146 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6023ms
2025-04-06 16:58:12.146 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 16:58:12.146 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 3.9973ms
2025-04-06 16:58:13.032 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:13.032 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:13.032 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:13.032 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:13.032 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 16:58:13.032 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:13.032 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:58:13.033 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 16:58:13.035 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 16:58:13.035 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 16:58:13.036 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:58:13.037 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 16:58:13.038 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.5584ms
2025-04-06 16:58:13.038 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 16:58:13.038 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.7317ms
2025-04-06 16:58:13.038 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 16:58:13.038 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.1052ms
2025-04-06 16:58:13.038 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.3351ms
2025-04-06 16:58:13.042 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 16:58:13.043 +07:00 [INF] CORS policy execution successful.
2025-04-06 16:58:13.043 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:58:13.043 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 16:58:13.045 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 16:58:13.046 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 16:58:13.046 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.435ms
2025-04-06 16:58:13.047 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 16:58:13.047 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.4406ms
2025-04-06 17:01:07.807 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:01:07.807 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:07.807 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2835ms
2025-04-06 17:01:07.809 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 17:01:07.809 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:07.809 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:01:07.809 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:01:07.816 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:01:07.894 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:01:07.894 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 85.1346ms
2025-04-06 17:01:07.895 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:01:07.895 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 85.5489ms
2025-04-06 17:01:09.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:01:09.207 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:09.207 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:01:09.207 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:01:09.210 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:01:09.213 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:01:09.216 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.0174ms
2025-04-06 17:01:09.216 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:01:09.216 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.4874ms
2025-04-06 17:01:09.220 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:01:09.220 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:09.220 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:01:09.220 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:01:09.222 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:01:09.223 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:01:09.223 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.611ms
2025-04-06 17:01:09.224 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:01:09.224 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.0602ms
2025-04-06 17:01:15.713 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:01:15.713 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:15.713 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:01:15.713 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:01:15.715 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:01:15.717 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:01:15.717 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.5889ms
2025-04-06 17:01:15.717 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:01:15.717 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2625ms
2025-04-06 17:01:15.723 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:01:15.723 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:01:15.723 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:01:15.723 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:01:15.725 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:01:15.727 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:01:15.728 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.2346ms
2025-04-06 17:01:15.728 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:01:15.728 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.6511ms
2025-04-06 17:06:32.047 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:06:32.047 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:06:32.047 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:06:32.048 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:06:32.120 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:06:32.120 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:06:32.120 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 72.4328ms
2025-04-06 17:06:32.120 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:06:32.120 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 73.4081ms
2025-04-06 17:06:32.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:06:32.123 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:06:32.123 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:06:32.123 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:06:32.130 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:06:32.130 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:06:32.131 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.598ms
2025-04-06 17:06:32.131 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:06:32.131 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.9983ms
2025-04-06 17:06:33.283 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:06:33.283 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:06:33.283 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:06:33.283 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:06:33.283 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:06:33.283 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:06:33.283 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:06:33.283 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:06:33.296 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:06:33.300 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:06:33.305 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 21.0551ms
2025-04-06 17:06:33.305 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:06:33.305 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 21.5381ms
2025-04-06 17:06:33.310 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:06:33.311 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:06:33.311 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 27.5712ms
2025-04-06 17:06:33.311 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:06:33.311 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 28.0361ms
2025-04-06 17:06:33.314 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:06:33.315 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:06:33.315 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:06:33.315 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:06:33.319 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:06:33.320 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:06:33.320 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.8445ms
2025-04-06 17:06:33.320 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:06:33.320 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.6368ms
2025-04-06 17:07:23.948 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:23.948 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:23.948 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:07:23.949 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:07:23.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:23.955 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:23.955 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:07:23.956 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:07:23.961 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:07:23.965 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:07:23.966 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:07:23.970 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 19.0292ms
2025-04-06 17:07:23.970 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:07:23.970 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 22.5566ms
2025-04-06 17:07:23.972 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:07:23.975 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 19.8693ms
2025-04-06 17:07:23.976 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:07:23.976 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 21.1337ms
2025-04-06 17:07:23.978 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:23.978 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:23.978 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:07:23.978 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:07:23.980 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:07:23.981 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:07:23.982 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.9515ms
2025-04-06 17:07:23.982 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:07:23.983 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.6741ms
2025-04-06 17:07:50.642 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:50.643 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:50.644 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:07:50.646 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:07:50.651 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:50.652 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:50.652 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:07:50.652 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:07:50.662 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:07:50.663 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:07:50.668 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 22.6143ms
2025-04-06 17:07:50.669 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:07:50.670 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:07:50.671 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 28.404ms
2025-04-06 17:07:50.675 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:07:50.677 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:07:50.678 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:07:50.678 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:07:50.678 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:07:50.678 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 26.2707ms
2025-04-06 17:07:50.678 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:07:50.679 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 28.0452ms
2025-04-06 17:07:50.680 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:07:50.681 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:07:50.682 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.3164ms
2025-04-06 17:07:50.682 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:07:50.683 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.9758ms
2025-04-06 17:09:55.983 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:09:55.984 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:09:55.984 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:09:55.984 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:09:56.012 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:09:56.014 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:09:56.014 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:09:56.014 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:09:56.022 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:09:56.023 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:09:56.026 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 42.3618ms
2025-04-06 17:09:56.026 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:09:56.029 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:09:56.031 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:09:56.032 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 47.5198ms
2025-04-06 17:09:56.043 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 29.11ms
2025-04-06 17:09:56.043 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:09:56.044 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 31.5799ms
2025-04-06 17:09:56.048 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:09:56.048 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:09:56.048 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:09:56.048 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:09:56.054 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:09:56.054 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:09:56.054 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.2343ms
2025-04-06 17:09:56.054 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:09:56.055 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.8553ms
2025-04-06 17:12:02.268 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:12:02.268 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:02.268 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.3535ms
2025-04-06 17:12:02.270 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 17:12:02.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:02.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:12:02.271 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:12:02.276 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:12:02.353 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:12:02.353 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 82.812ms
2025-04-06 17:12:02.353 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:12:02.354 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 83.3693ms
2025-04-06 17:12:04.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:12:04.955 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:04.955 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:12:04.955 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:12:04.958 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:12:04.959 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:12:04.962 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.8791ms
2025-04-06 17:12:04.962 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:12:04.964 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.3353ms
2025-04-06 17:12:04.973 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:12:04.973 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:04.973 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:12:04.973 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:12:04.980 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:12:04.980 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:12:04.981 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.9088ms
2025-04-06 17:12:04.981 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:12:04.981 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.6978ms
2025-04-06 17:12:06.917 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:06.917 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:06.917 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:06.917 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:06.917 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:12:06.917 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:12:06.917 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:12:06.917 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:12:06.922 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:12:06.924 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:12:06.924 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:12:06.926 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:12:06.927 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 9.8716ms
2025-04-06 17:12:06.927 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:12:06.927 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 10.4131ms
2025-04-06 17:12:06.930 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.1235ms
2025-04-06 17:12:06.930 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:12:06.930 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 13.7747ms
2025-04-06 17:12:06.937 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:06.937 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:06.937 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:12:06.937 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:12:06.942 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:12:06.943 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:12:06.943 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8579ms
2025-04-06 17:12:06.943 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:12:06.943 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.4305ms
2025-04-06 17:12:52.783 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:52.783 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:52.784 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:12:52.784 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:12:52.784 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:52.784 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:52.786 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:12:52.786 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:12:52.796 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:12:52.796 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:12:52.796 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:12:52.797 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:12:52.797 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 11.2065ms
2025-04-06 17:12:52.801 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:12:52.802 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 18.0783ms
2025-04-06 17:12:52.802 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:12:52.802 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 17.9683ms
2025-04-06 17:12:52.802 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 18.8719ms
2025-04-06 17:12:52.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:12:52.806 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:12:52.806 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:12:52.806 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:12:52.810 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:12:52.810 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:12:52.810 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.1167ms
2025-04-06 17:12:52.810 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:12:52.810 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.7333ms
2025-04-06 17:13:00.715 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryW108ZM6ahkgBNG1b 176645
2025-04-06 17:13:00.715 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:13:00.715 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:13:00.724 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:13:00.783 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 17:13:00.804 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:13:09.068 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 17:13:09.069 +07:00 [INF] New discussion added: "217d3f68-c7df-4251-85a1-b223a1667a82" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "c2516177-2f28-454b-b1a9-709b2eb8beae"
2025-04-06 17:13:09.071 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 17:13:09.089 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 8364.3993ms
2025-04-06 17:13:09.089 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:13:09.090 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 8375.297ms
2025-04-06 17:13:09.094 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:13:09.094 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:13:09.094 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:13:09.094 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:13:09.098 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:13:09.099 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:13:09.099 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.1277ms
2025-04-06 17:13:09.099 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:13:09.100 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 5.8081ms
2025-04-06 17:14:10.890 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:10.890 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:10.891 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:14:10.891 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:10.891 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:14:10.891 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:10.891 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:10.891 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:14:10.904 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:14:10.908 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:14:10.909 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:14:10.912 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 21.3375ms
2025-04-06 17:14:10.912 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:10.913 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 21.9873ms
2025-04-06 17:14:10.916 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:14:10.917 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 26.2989ms
2025-04-06 17:14:10.917 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:14:10.918 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 27.5254ms
2025-04-06 17:14:10.933 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:10.934 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:10.934 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:14:10.934 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:14:10.938 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:14:10.938 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:14:10.939 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.0074ms
2025-04-06 17:14:10.939 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:14:10.939 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.464ms
2025-04-06 17:14:21.739 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundarycfJeUxkXjUWAZEfm 223623
2025-04-06 17:14:21.739 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:21.739 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:14:21.739 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:14:21.749 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 17:14:21.751 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:14:29.135 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 17:14:29.136 +07:00 [INF] New discussion added: "4455002d-bbbe-453b-8823-c51652669eee" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "c2516177-2f28-454b-b1a9-709b2eb8beae"
2025-04-06 17:14:29.136 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 17:14:29.137 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 7397.712ms
2025-04-06 17:14:29.137 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:14:29.138 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 7399.0518ms
2025-04-06 17:14:29.142 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:29.142 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:29.142 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:29.142 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:14:29.144 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:14:29.146 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:14:29.146 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.5588ms
2025-04-06 17:14:29.146 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:29.146 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 3.9353ms
2025-04-06 17:14:45.640 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:14:45.640 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:45.641 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.4847ms
2025-04-06 17:14:45.642 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 17:14:45.642 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:45.642 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:14:45.642 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:14:45.646 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:14:45.731 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:14:45.731 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 88.636ms
2025-04-06 17:14:45.731 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:14:45.731 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 89.0701ms
2025-04-06 17:14:49.003 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:14:49.003 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:49.003 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:14:49.003 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:14:49.006 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:14:49.007 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:14:49.007 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6375ms
2025-04-06 17:14:49.007 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:14:49.007 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0477ms
2025-04-06 17:14:49.017 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:14:49.017 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:49.017 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:14:49.017 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:14:49.025 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:14:49.025 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:14:49.026 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.8726ms
2025-04-06 17:14:49.026 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:14:49.026 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.5584ms
2025-04-06 17:14:50.440 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:50.440 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:50.440 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:50.440 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:50.440 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:14:50.440 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:50.440 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:14:50.440 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:14:50.448 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:14:50.461 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:14:50.462 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 21.4724ms
2025-04-06 17:14:50.462 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:14:50.462 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 22.0885ms
2025-04-06 17:14:50.463 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:14:50.463 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:14:50.464 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 23.7508ms
2025-04-06 17:14:50.464 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:14:50.464 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 24.339ms
2025-04-06 17:14:50.485 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:14:50.486 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:14:50.486 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:14:50.486 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:14:50.493 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:14:50.494 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:14:50.494 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 8.4885ms
2025-04-06 17:14:50.494 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:14:50.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 9.0259ms
2025-04-06 17:16:43.072 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:16:43.072 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:43.073 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.5398ms
2025-04-06 17:16:43.075 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 17:16:43.075 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:43.075 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:16:43.075 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:16:43.082 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:16:43.166 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:16:43.167 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 91.7821ms
2025-04-06 17:16:43.167 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:16:43.167 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 92.3285ms
2025-04-06 17:16:45.120 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:16:45.120 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:45.120 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:16:45.120 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:16:45.124 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:16:45.125 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:16:45.131 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.7035ms
2025-04-06 17:16:45.131 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:16:45.132 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.2587ms
2025-04-06 17:16:45.140 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:16:45.140 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:45.140 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:16:45.140 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:16:45.157 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:16:45.158 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:16:45.158 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 17.8336ms
2025-04-06 17:16:45.158 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:16:45.159 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 18.6905ms
2025-04-06 17:16:46.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:16:46.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:16:46.605 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:46.605 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:46.605 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:16:46.605 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:16:46.605 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:16:46.605 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:16:46.611 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:16:46.612 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:16:46.615 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:16:46.617 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:16:46.617 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 11.9732ms
2025-04-06 17:16:46.618 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:16:46.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 12.5643ms
2025-04-06 17:16:46.620 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 14.3397ms
2025-04-06 17:16:46.620 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:16:46.620 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.8539ms
2025-04-06 17:16:46.621 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:16:46.621 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:16:46.621 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:16:46.621 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:16:46.625 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:16:46.625 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:16:46.625 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.0818ms
2025-04-06 17:16:46.625 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:16:46.626 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.6866ms
2025-04-06 17:18:37.237 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:18:37.237 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:37.237 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.4746ms
2025-04-06 17:18:37.240 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 17:18:37.240 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:37.240 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:18:37.240 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:18:37.246 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:18:37.325 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:18:37.325 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 85.2155ms
2025-04-06 17:18:37.325 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:18:37.325 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 85.7303ms
2025-04-06 17:18:40.540 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:18:40.540 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:40.540 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:18:40.540 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:18:40.543 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:18:40.544 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:18:40.546 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1774ms
2025-04-06 17:18:40.546 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:18:40.546 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.7294ms
2025-04-06 17:18:40.554 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:18:40.554 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:40.554 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:18:40.554 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:18:40.564 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:18:40.564 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:18:40.571 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 16.6728ms
2025-04-06 17:18:40.571 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:18:40.571 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 17.2219ms
2025-04-06 17:18:41.810 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:18:41.810 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:18:41.810 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:41.810 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:41.810 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:18:41.810 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:18:41.810 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:18:41.811 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:18:41.819 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:18:41.819 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:18:41.820 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:18:41.820 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 9.824ms
2025-04-06 17:18:41.820 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:18:41.820 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 10.368ms
2025-04-06 17:18:41.821 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:18:41.822 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 11.3044ms
2025-04-06 17:18:41.822 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:18:41.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 12.3057ms
2025-04-06 17:18:41.825 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:18:41.826 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:18:41.826 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:18:41.826 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:18:41.830 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:18:41.831 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:18:41.831 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.336ms
2025-04-06 17:18:41.831 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:18:41.831 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.9532ms
2025-04-06 17:19:03.652 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundarygK7kQW58w2GuUUgU 501
2025-04-06 17:19:03.652 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:03.652 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:19:03.652 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:19:03.659 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 17:19:03.668 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:19:03.676 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 17:19:03.676 +07:00 [INF] New discussion added: "bb2a2c37-80a4-41c4-8859-aefac012b49f" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-06 17:19:03.676 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 17:19:03.678 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 25.6906ms
2025-04-06 17:19:03.678 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:19:03.678 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 26.3513ms
2025-04-06 17:19:03.683 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:03.683 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:03.683 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:03.683 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:19:03.686 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:19:03.692 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:03.692 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 9.3945ms
2025-04-06 17:19:03.692 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:03.692 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 9.8186ms
2025-04-06 17:19:19.664 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:19:19.664 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:19.665 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.3794ms
2025-04-06 17:19:19.666 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 17:19:19.666 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:19.666 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:19:19.666 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:19:19.670 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:19:19.789 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:19:19.789 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 122.846ms
2025-04-06 17:19:19.789 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:19:19.790 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 123.4335ms
2025-04-06 17:19:21.352 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:19:21.352 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:21.352 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:21.352 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:19:21.354 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:19:21.354 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:21.355 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.1179ms
2025-04-06 17:19:21.355 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:21.355 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.5088ms
2025-04-06 17:19:21.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:19:21.366 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:21.366 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:19:21.366 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:19:21.374 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:19:21.375 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:21.376 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.939ms
2025-04-06 17:19:21.376 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:19:21.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.775ms
2025-04-06 17:19:22.521 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:22.521 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:22.521 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:22.521 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:22.521 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:19:22.521 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:22.521 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:19:22.521 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:19:22.527 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:19:22.528 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:22.528 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.0623ms
2025-04-06 17:19:22.528 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:19:22.529 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:22.529 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.7031ms
2025-04-06 17:19:22.529 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:19:22.529 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 7.7158ms
2025-04-06 17:19:22.529 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:19:22.529 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 8.2293ms
2025-04-06 17:19:22.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:22.545 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:22.545 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:19:22.545 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:19:22.550 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:19:22.550 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:19:22.550 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.8385ms
2025-04-06 17:19:22.550 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:19:22.550 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.2746ms
2025-04-06 17:19:40.952 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:19:40.953 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:40.953 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:19:40.953 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:19:40.957 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 17:19:40.957 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:40.958 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.806ms
2025-04-06 17:19:40.958 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:19:40.958 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 5.5426ms
2025-04-06 17:19:42.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:19:42.375 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:42.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:19:42.375 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:42.375 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:42.375 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:19:42.376 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:19:42.376 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:19:42.379 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:19:42.381 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:42.385 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.3056ms
2025-04-06 17:19:42.385 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:42.385 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.9027ms
2025-04-06 17:19:42.386 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:19:42.386 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 17:19:42.389 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 13.3178ms
2025-04-06 17:19:42.389 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:19:42.389 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 13.8372ms
2025-04-06 17:19:44.922 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:19:44.922 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:44.922 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:44.922 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:19:44.924 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:19:44.925 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:44.925 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4858ms
2025-04-06 17:19:44.925 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:19:44.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.9112ms
2025-04-06 17:19:44.933 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:19:44.933 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:44.933 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:19:44.933 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:19:44.943 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:19:44.943 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:44.944 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.7867ms
2025-04-06 17:19:44.944 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:19:44.944 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.3174ms
2025-04-06 17:19:46.913 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:46.913 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:46.913 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:46.913 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:46.913 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:46.913 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:19:46.913 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:19:46.914 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:19:46.920 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:19:46.921 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:19:46.925 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.5554ms
2025-04-06 17:19:46.925 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:19:46.925 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 12.3185ms
2025-04-06 17:19:46.927 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:19:46.927 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:19:46.928 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.9836ms
2025-04-06 17:19:46.928 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:19:46.929 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.5359ms
2025-04-06 17:19:46.942 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:19:46.942 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:19:46.942 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:19:46.942 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:19:46.948 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:19:46.948 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:19:46.948 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8712ms
2025-04-06 17:19:46.948 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:19:46.949 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.4429ms
2025-04-06 17:21:00.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:21:00.545 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:00.545 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:21:00.545 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:00.546 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:21:00.547 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:00.547 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:00.547 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:21:00.554 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:21:00.563 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:21:00.564 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:00.570 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 17:21:00.570 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 23.0655ms
2025-04-06 17:21:00.570 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:00.570 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 24.874ms
2025-04-06 17:21:00.570 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 24.9167ms
2025-04-06 17:21:00.570 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:21:00.571 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 25.5116ms
2025-04-06 17:21:02.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:21:02.247 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:02.247 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:02.247 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:21:02.250 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:21:02.251 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:02.251 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.533ms
2025-04-06 17:21:02.251 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:02.251 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0392ms
2025-04-06 17:21:02.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:21:02.258 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:02.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:21:02.258 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:02.273 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:21:02.273 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:02.274 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 15.7293ms
2025-04-06 17:21:02.274 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:21:02.274 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.2715ms
2025-04-06 17:21:04.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:04.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:04.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:04.223 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:04.223 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:04.223 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:04.223 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:04.223 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:04.229 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:21:04.230 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:04.231 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.6187ms
2025-04-06 17:21:04.231 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:04.231 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 8.1674ms
2025-04-06 17:21:04.232 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:21:04.232 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:21:04.233 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 9.7351ms
2025-04-06 17:21:04.233 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:04.233 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 10.3879ms
2025-04-06 17:21:04.252 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:04.252 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:04.252 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:21:04.252 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:21:04.257 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:21:04.257 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:21:04.258 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.3231ms
2025-04-06 17:21:04.258 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:21:04.258 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.9262ms
2025-04-06 17:21:20.724 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:21:20.724 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:20.724 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2751ms
2025-04-06 17:21:20.726 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 17:21:20.726 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:20.726 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:21:20.726 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:21:20.729 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:21:20.809 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:21:20.810 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 83.6619ms
2025-04-06 17:21:20.810 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:21:20.810 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 84.1856ms
2025-04-06 17:21:23.427 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:21:23.427 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 17:21:23.427 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:23.427 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:23.427 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:23.427 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:21:23.427 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:23.427 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:21:23.429 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:21:23.431 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:21:23.432 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:23.432 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:23.436 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.631ms
2025-04-06 17:21:23.436 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 8.636ms
2025-04-06 17:21:23.436 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:23.436 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:21:23.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 9.1553ms
2025-04-06 17:21:23.440 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.7384ms
2025-04-06 17:21:28.635 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:21:28.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:28.636 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:28.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:28.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:28.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:21:28.636 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:21:28.636 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:21:28.638 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:21:28.639 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:28.641 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7493ms
2025-04-06 17:21:28.641 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 17:21:28.641 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:28.641 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.0546ms
2025-04-06 17:21:28.642 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:28.642 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 6.3627ms
2025-04-06 17:21:28.642 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:21:28.642 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.7801ms
2025-04-06 17:21:28.651 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:28.651 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:28.651 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:28.651 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:28.679 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:21:28.680 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:21:28.680 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 29.209ms
2025-04-06 17:21:28.681 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:28.681 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 30.0667ms
2025-04-06 17:21:33.357 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:21:33.357 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:33.357 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:33.357 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:21:33.361 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:21:33.361 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:33.361 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8834ms
2025-04-06 17:21:33.361 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:21:33.361 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3765ms
2025-04-06 17:21:33.372 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:21:33.372 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:33.372 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:21:33.372 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:33.381 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:21:33.381 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:33.382 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.6259ms
2025-04-06 17:21:33.382 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:21:33.382 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.3459ms
2025-04-06 17:21:34.458 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:34.458 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:34.458 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:34.458 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:34.458 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:34.459 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:34.459 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:21:34.459 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:34.470 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:21:34.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:34.493 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 34.5004ms
2025-04-06 17:21:34.493 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:34.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 35.3729ms
2025-04-06 17:21:34.495 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:21:34.495 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:21:34.496 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 37.0476ms
2025-04-06 17:21:34.496 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:21:34.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 37.8995ms
2025-04-06 17:21:34.523 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:34.523 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:34.523 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:21:34.523 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:21:34.527 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:21:34.527 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:21:34.528 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.349ms
2025-04-06 17:21:34.528 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:21:34.528 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.9469ms
2025-04-06 17:21:38.878 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/bb2a2c37-80a4-41c4-8859-aefac012b49f - null null
2025-04-06 17:21:38.878 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:38.878 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/bb2a2c37-80a4-41c4-8859-aefac012b49f - 204 null null 0.28ms
2025-04-06 17:21:38.880 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/bb2a2c37-80a4-41c4-8859-aefac012b49f - null null
2025-04-06 17:21:38.880 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:38.880 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-06 17:21:38.880 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:38.883 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-06 17:21:38.890 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-06 17:21:38.891 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-06 17:21:38.891 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 10.8871ms
2025-04-06 17:21:38.891 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-06 17:21:38.891 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/bb2a2c37-80a4-41c4-8859-aefac012b49f - 204 null null 11.4052ms
2025-04-06 17:21:38.895 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:38.895 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:38.895 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:38.895 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:38.897 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:21:38.898 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:38.899 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.3871ms
2025-04-06 17:21:38.899 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:38.899 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 3.8787ms
2025-04-06 17:21:43.276 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundary0MrEATrGGM59PSNR 501
2025-04-06 17:21:43.277 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:43.277 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:21:43.277 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:43.281 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 17:21:43.284 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:21:43.294 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 17:21:43.295 +07:00 [INF] New discussion added: "ed332d9b-607c-4364-a767-f7cb4fd33755" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-06 17:21:43.295 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 17:21:43.295 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 18.4991ms
2025-04-06 17:21:43.295 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:21:43.295 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 18.9908ms
2025-04-06 17:21:43.300 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:21:43.300 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:21:43.300 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:43.300 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:21:43.303 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:21:43.304 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:21:43.304 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 4.1632ms
2025-04-06 17:21:43.304 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:21:43.304 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.821ms
2025-04-06 17:22:07.968 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 17:22:07.968 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:07.968 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:22:07.968 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:22:07.975 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 17:22:07.979 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:07.983 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 13.8516ms
2025-04-06 17:22:07.984 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:22:07.984 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 15.9879ms
2025-04-06 17:22:11.747 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:22:11.747 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:11.747 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 17:22:11.747 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:11.747 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:11.747 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:11.747 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:22:11.747 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:22:11.751 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:22:11.753 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:11.757 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.7105ms
2025-04-06 17:22:11.757 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:11.757 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:22:11.757 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.6784ms
2025-04-06 17:22:11.761 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:11.761 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 13.8336ms
2025-04-06 17:22:11.761 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:11.761 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 14.3671ms
2025-04-06 17:22:12.810 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:22:12.810 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:22:12.810 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:12.810 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:12.810 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:12.810 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:22:12.810 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:22:12.810 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:22:12.815 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:22:12.816 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 17:22:12.816 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:12.816 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:12.819 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.4723ms
2025-04-06 17:22:12.819 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:12.821 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.6552ms
2025-04-06 17:22:12.821 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 10.5299ms
2025-04-06 17:22:12.821 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:22:12.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 11.3037ms
2025-04-06 17:22:12.823 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:22:12.823 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:12.823 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:22:12.823 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:22:12.843 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:22:12.844 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:22:12.845 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 21.2447ms
2025-04-06 17:22:12.845 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:22:12.845 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 21.8621ms
2025-04-06 17:22:25.150 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:22:25.150 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:25.150 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2974ms
2025-04-06 17:22:25.152 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 17:22:25.152 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:25.152 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:22:25.152 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:22:25.156 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:22:25.231 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:22:25.232 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 79.2041ms
2025-04-06 17:22:25.232 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:22:25.232 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 79.6988ms
2025-04-06 17:22:26.487 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:22:26.487 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:22:26.487 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:26.487 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:26.487 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:26.487 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:26.487 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:22:26.487 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:22:26.488 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:22:26.490 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:22:26.490 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 17:22:26.491 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:26.500 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 11.7902ms
2025-04-06 17:22:26.500 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.8297ms
2025-04-06 17:22:26.500 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:26.500 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:26.503 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 16.0792ms
2025-04-06 17:22:26.503 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 16.1212ms
2025-04-06 17:22:29.945 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:22:29.945 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:29.945 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:29.945 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:22:29.947 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:22:29.949 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:29.949 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9999ms
2025-04-06 17:22:29.949 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:29.950 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4361ms
2025-04-06 17:22:29.957 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:22:29.957 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:29.957 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:22:29.957 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:22:29.965 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:22:29.965 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:29.966 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.2691ms
2025-04-06 17:22:29.966 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:22:29.966 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.7996ms
2025-04-06 17:22:31.759 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:22:31.759 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:22:31.759 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:31.759 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:22:31.759 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:31.759 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:31.759 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:22:31.759 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:22:31.762 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:22:31.763 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:22:31.764 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4304ms
2025-04-06 17:22:31.764 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:22:31.764 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.9164ms
2025-04-06 17:22:31.768 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:22:31.768 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 17:22:31.769 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 10.0506ms
2025-04-06 17:22:31.769 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:22:31.769 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 404 null application/json; charset=utf-8 10.5054ms
2025-04-06 17:24:19.196 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/events - null null
2025-04-06 17:24:19.197 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:19.200 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/events - 204 null null 3.2377ms
2025-04-06 17:24:19.206 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/events - application/json 544
2025-04-06 17:24:19.207 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:19.207 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.CreateEvent (ems_backend)'
2025-04-06 17:24:19.210 +07:00 [INF] Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(ems_backend.Services.EventRequest) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:24:19.231 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Guid), @p8='?' (DbType = DateTime2), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Events] ([Id], [CategoryId], [Description], [EndDate], [IsCanceled], [Location], [Name], [OwnerId], [StartDate], [TicketPrice], [TicketsLeft])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
2025-04-06 17:24:19.236 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'ems_backend.Models.Event'.
2025-04-06 17:24:19.238 +07:00 [INF] Executed action ems_backend.Controllers.EventController.CreateEvent (ems_backend) in 28.6077ms
2025-04-06 17:24:19.239 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.CreateEvent (ems_backend)'
2025-04-06 17:24:19.239 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/events - 201 null application/json; charset=utf-8 32.1746ms
2025-04-06 17:24:19.241 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:24:19.241 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:19.241 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:24:19.241 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:24:19.248 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:24:19.248 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:24:19.249 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 7.1647ms
2025-04-06 17:24:19.249 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:24:19.249 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 7.5729ms
2025-04-06 17:24:22.630 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:24:22.630 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:22.630 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:24:22.630 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:24:22.633 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:24:22.634 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:24:22.634 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0699ms
2025-04-06 17:24:22.634 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:24:22.634 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5117ms
2025-04-06 17:24:22.640 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:24:22.640 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:22.640 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:24:22.640 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:24:22.648 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:24:22.648 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:24:22.649 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.4163ms
2025-04-06 17:24:22.649 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:24:22.649 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.1675ms
2025-04-06 17:24:38.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:24:38.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:24:38.123 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:38.123 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:38.123 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:24:38.123 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:24:38.123 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:24:38.123 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:24:38.129 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:24:38.130 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:24:38.131 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.5896ms
2025-04-06 17:24:38.131 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:24:38.131 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 8.056ms
2025-04-06 17:24:38.134 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:24:38.135 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:24:38.135 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 11.8918ms
2025-04-06 17:24:38.135 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:24:38.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 12.4437ms
2025-04-06 17:24:38.149 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:24:38.150 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:24:38.150 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:24:38.150 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:24:38.153 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:24:38.153 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:24:38.154 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.9818ms
2025-04-06 17:24:38.154 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:24:38.154 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.5468ms
2025-04-06 17:26:09.576 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:26:09.576 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:09.576 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:09.576 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:26:09.583 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:26:09.587 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:09.590 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.8715ms
2025-04-06 17:26:09.590 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:09.593 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 16.8125ms
2025-04-06 17:26:09.595 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:26:09.595 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:09.595 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:09.595 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:09.603 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:26:09.603 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:09.603 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.202ms
2025-04-06 17:26:09.603 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:09.603 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.581ms
2025-04-06 17:26:13.738 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:26:13.738 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:26:13.738 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:13.738 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:13.738 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:26:13.738 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:26:13.738 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:13.738 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:26:13.744 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:26:13.745 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:13.745 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 6.9125ms
2025-04-06 17:26:13.745 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:26:13.745 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:26:13.745 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.3578ms
2025-04-06 17:26:13.746 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:26:13.746 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 7.6378ms
2025-04-06 17:26:13.746 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:26:13.746 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 8.0281ms
2025-04-06 17:26:13.759 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 17:26:13.759 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:13.759 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:26:13.759 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:26:13.763 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:26:13.764 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:26:13.764 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.6284ms
2025-04-06 17:26:13.765 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:26:13.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.1089ms
2025-04-06 17:26:18.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:26:18.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:26:18.346 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:18.346 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:18.346 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:26:18.346 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:18.346 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:26:18.346 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:18.349 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:26:18.351 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:18.354 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.6501ms
2025-04-06 17:26:18.354 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:18.357 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:26:18.356 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.101ms
2025-04-06 17:26:18.357 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:18.361 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 15.3167ms
2025-04-06 17:26:18.361 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:26:18.364 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 18.5004ms
2025-04-06 17:26:19.622 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:26:19.622 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:19.622 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:19.622 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:26:19.625 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:26:19.626 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:19.626 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8637ms
2025-04-06 17:26:19.626 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:19.626 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5636ms
2025-04-06 17:26:19.634 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:26:19.634 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:19.634 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:19.634 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:19.654 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:26:19.655 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:19.655 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 20.5777ms
2025-04-06 17:26:19.655 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:19.655 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 20.9883ms
2025-04-06 17:26:21.152 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:26:21.152 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:26:21.152 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:21.152 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:21.152 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:26:21.152 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:26:21.152 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:26:21.152 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:21.156 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:26:21.157 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:26:21.157 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.3628ms
2025-04-06 17:26:21.157 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:26:21.157 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 5.818ms
2025-04-06 17:26:21.160 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:26:21.161 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:26:21.161 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 9.3404ms
2025-04-06 17:26:21.161 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:26:21.161 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 9.8412ms
2025-04-06 17:26:21.172 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:26:21.172 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:21.172 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:26:21.172 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:26:21.177 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:26:21.177 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:26:21.178 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.8985ms
2025-04-06 17:26:21.178 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:26:21.178 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 6.4145ms
2025-04-06 17:26:22.772 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:26:22.773 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:22.773 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:22.773 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:26:22.775 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:26:22.776 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:22.776 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6454ms
2025-04-06 17:26:22.777 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:22.777 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2312ms
2025-04-06 17:26:22.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:26:22.785 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:22.785 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:22.785 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:22.805 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:26:22.806 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:22.806 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 20.7473ms
2025-04-06 17:26:22.806 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:26:22.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 21.4792ms
2025-04-06 17:26:32.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:26:32.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:26:32.755 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:32.755 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:26:32.755 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:32.755 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:26:32.755 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:26:32.755 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:26:32.757 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:26:32.758 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:32.760 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3406ms
2025-04-06 17:26:32.760 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:26:32.760 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8651ms
2025-04-06 17:26:32.763 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:26:32.764 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:26:32.764 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 9.3643ms
2025-04-06 17:26:32.764 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:26:32.764 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 9.9586ms
2025-04-06 17:28:58.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:28:58.788 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:28:58.788 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:28:58.788 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:28:58.795 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 17:28:58.800 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:28:58.804 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 15.2675ms
2025-04-06 17:28:58.804 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:28:58.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 17.6329ms
2025-04-06 17:29:05.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:29:05.806 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:05.806 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:29:05.806 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:29:05.808 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:29:05.809 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:29:05.810 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2558ms
2025-04-06 17:29:05.810 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:29:05.810 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.689ms
2025-04-06 17:29:05.816 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:29:05.816 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:05.816 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:29:05.816 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:29:05.823 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:29:05.823 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:29:05.824 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.61ms
2025-04-06 17:29:05.824 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:29:05.824 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.1596ms
2025-04-06 17:29:18.831 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:18.831 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:18.831 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:18.831 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:18.831 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:29:18.831 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:29:18.831 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:29:18.831 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:29:18.838 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:29:18.838 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:29:18.839 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.9438ms
2025-04-06 17:29:18.852 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:29:18.853 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 22.7512ms
2025-04-06 17:29:18.855 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:29:18.855 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:29:18.856 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 24.9686ms
2025-04-06 17:29:18.856 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:29:18.856 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 25.5148ms
2025-04-06 17:29:18.864 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:18.864 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:18.864 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:29:18.864 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:18.869 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:29:18.869 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:29:18.869 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.0764ms
2025-04-06 17:29:18.870 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:29:18.870 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 6.1671ms
2025-04-06 17:29:33.587 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:29:33.587 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:33.587 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.6118ms
2025-04-06 17:29:33.589 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 17:29:33.589 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:33.589 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:29:33.589 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:29:33.593 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:29:33.666 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:29:33.666 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 76.9477ms
2025-04-06 17:29:33.666 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:29:33.667 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 77.401ms
2025-04-06 17:29:35.755 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:29:35.756 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:35.756 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:29:35.756 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:29:35.758 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:29:35.759 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:29:35.759 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2916ms
2025-04-06 17:29:35.759 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:29:35.759 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.7266ms
2025-04-06 17:29:35.765 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:29:35.765 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:35.765 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:29:35.765 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:29:35.785 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:29:35.785 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:29:35.786 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 20.9733ms
2025-04-06 17:29:35.786 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:29:35.786 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 21.5169ms
2025-04-06 17:29:36.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:36.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:36.786 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:36.786 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:36.786 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:29:36.786 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:29:36.786 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:29:36.786 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:29:36.789 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:29:36.790 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:29:36.790 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:29:36.793 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:29:36.800 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 14.5913ms
2025-04-06 17:29:36.800 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 14.5997ms
2025-04-06 17:29:36.801 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:29:36.801 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:29:36.801 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 15.9312ms
2025-04-06 17:29:36.801 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 15.9564ms
2025-04-06 17:29:36.803 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:29:36.803 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:36.803 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:29:36.803 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:36.805 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:29:36.806 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:29:36.806 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 3.127ms
2025-04-06 17:29:36.807 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:29:36.807 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 3.632ms
2025-04-06 17:29:37.561 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/tickets/book/a8511a3a-49d5-459a-bce9-1040026f17b1/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null 0
2025-04-06 17:29:37.561 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:37.561 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:29:37.566 +07:00 [INF] Route matched with {action = "BookTicket", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BookTicket(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:37.605 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e0].[Id], [e0].[CategoryId], [e0].[Description], [e0].[EndDate], [e0].[IsCanceled], [e0].[Location], [e0].[Name], [e0].[OwnerId], [e0].[StartDate], [e0].[TicketPrice], [e0].[TicketsLeft], [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM (
    SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
    FROM [Events] AS [e]
    WHERE [e].[Id] = @__eventId_0
) AS [e0]
LEFT JOIN [Tickets] AS [t] ON [e0].[Id] = [t].[EventId]
ORDER BY [e0].[Id]
2025-04-06 17:29:37.617 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:29:37.655 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Int32), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [TicketsLeft] = @p0
OUTPUT 1
WHERE [Id] = @p1;
INSERT INTO [Tickets] ([Id], [EventId], [Status], [UserId])
VALUES (@p2, @p3, @p4, @p5);
2025-04-06 17:29:37.663 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:29:37.666 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.BookTicket (ems_backend) in 99.5943ms
2025-04-06 17:29:37.666 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:29:37.666 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/tickets/book/a8511a3a-49d5-459a-bce9-1040026f17b1/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 104.9694ms
2025-04-06 17:29:37.677 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - null null
2025-04-06 17:29:37.677 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:37.677 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:29:37.680 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:37.694 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:29:37.697 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:29:37.698 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 18.1461ms
2025-04-06 17:29:37.698 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:29:37.698 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - 200 null application/json; charset=utf-8 21.3933ms
2025-04-06 17:29:39.683 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 17:29:39.684 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:39.684 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:29:39.684 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:39.688 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 17:29:39.689 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:29:39.690 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 6.0872ms
2025-04-06 17:29:39.690 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:29:39.690 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 6.7509ms
2025-04-06 17:29:41.495 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - null null
2025-04-06 17:29:41.495 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:29:41.495 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:29:41.496 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:29:41.501 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:29:41.502 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:29:41.502 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 6.5392ms
2025-04-06 17:29:41.502 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:29:41.502 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - 200 null application/json; charset=utf-8 7.0776ms
2025-04-06 17:30:17.303 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - null null
2025-04-06 17:30:17.303 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:17.303 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:30:17.303 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:30:17.311 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:30:17.312 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:30:17.312 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 8.6188ms
2025-04-06 17:30:17.312 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:30:17.313 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - 200 null application/json; charset=utf-8 9.678ms
2025-04-06 17:30:51.018 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - null null
2025-04-06 17:30:51.018 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:51.019 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - 204 null null 0.211ms
2025-04-06 17:30:51.020 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/signup - application/json 148
2025-04-06 17:30:51.020 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:51.020 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 17:30:51.020 +07:00 [INF] Route matched with {action = "Signup", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Signup(ems_backend.Services.SignupRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:30:51.024 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__newUserRequest_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Email] = @__newUserRequest_Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-06 17:30:51.111 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [Dob], [Email], [FirstName], [LastName], [Password], [Phone])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-04-06 17:30:51.111 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:30:51.111 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Signup (ems_backend) in 91.1263ms
2025-04-06 17:30:51.112 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 17:30:51.112 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/signup - 200 null application/json; charset=utf-8 91.6222ms
2025-04-06 17:30:52.507 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:30:52.508 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:52.508 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:30:52.508 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:30:52.511 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:30:52.512 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:30:52.516 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.9698ms
2025-04-06 17:30:52.516 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:30:52.516 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.5385ms
2025-04-06 17:30:52.520 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:30:52.520 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:52.520 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:30:52.520 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:30:52.542 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:30:52.542 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:30:52.543 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 22.2545ms
2025-04-06 17:30:52.543 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:30:52.543 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 22.8116ms
2025-04-06 17:30:53.829 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:30:53.829 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:30:53.829 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:53.829 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:30:53.829 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:53.829 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:30:53.829 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:30:53.830 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:30:53.836 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:30:53.837 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:30:53.837 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:30:53.837 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:30:53.840 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 10.8774ms
2025-04-06 17:30:53.840 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 10.8754ms
2025-04-06 17:30:53.841 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:30:53.841 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:30:53.841 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 12.0018ms
2025-04-06 17:30:53.841 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 11.9976ms
2025-04-06 17:30:53.845 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/782fe129-fcaf-4d75-8b44-fc7f6d88016d/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:30:53.845 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:53.845 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:30:53.845 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:30:53.850 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:30:53.850 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:30:53.851 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.0424ms
2025-04-06 17:30:53.851 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:30:53.851 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/782fe129-fcaf-4d75-8b44-fc7f6d88016d/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 5.4714ms
2025-04-06 17:30:57.077 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/tickets/book/782fe129-fcaf-4d75-8b44-fc7f6d88016d/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null 0
2025-04-06 17:30:57.077 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:57.077 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:30:57.077 +07:00 [INF] Route matched with {action = "BookTicket", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BookTicket(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:30:57.081 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e0].[Id], [e0].[CategoryId], [e0].[Description], [e0].[EndDate], [e0].[IsCanceled], [e0].[Location], [e0].[Name], [e0].[OwnerId], [e0].[StartDate], [e0].[TicketPrice], [e0].[TicketsLeft], [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM (
    SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
    FROM [Events] AS [e]
    WHERE [e].[Id] = @__eventId_0
) AS [e0]
LEFT JOIN [Tickets] AS [t] ON [e0].[Id] = [t].[EventId]
ORDER BY [e0].[Id]
2025-04-06 17:30:57.084 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:30:57.088 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Int32), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [TicketsLeft] = @p0
OUTPUT 1
WHERE [Id] = @p1;
INSERT INTO [Tickets] ([Id], [EventId], [Status], [UserId])
VALUES (@p2, @p3, @p4, @p5);
2025-04-06 17:30:57.092 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:30:57.093 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.BookTicket (ems_backend) in 15.2971ms
2025-04-06 17:30:57.093 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:30:57.093 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/tickets/book/782fe129-fcaf-4d75-8b44-fc7f6d88016d/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 15.797ms
2025-04-06 17:30:57.104 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/fdda31de-901d-4430-aa6b-24bdd0fdd6f2 - null null
2025-04-06 17:30:57.104 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:30:57.104 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:30:57.104 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:30:57.108 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:30:57.109 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:30:57.109 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 5.2856ms
2025-04-06 17:30:57.109 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:30:57.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/fdda31de-901d-4430-aa6b-24bdd0fdd6f2 - 200 null application/json; charset=utf-8 5.8227ms
2025-04-06 17:31:01.580 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:01.580 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:01.580 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:01.580 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:31:01.580 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:01.580 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:31:01.581 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:31:01.581 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:31:01.583 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:31:01.586 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:31:01.586 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:31:01.591 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 10.0281ms
2025-04-06 17:31:01.591 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:31:01.591 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:31:01.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 10.6284ms
2025-04-06 17:31:01.594 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 13.306ms
2025-04-06 17:31:01.594 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:31:01.594 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 14.2159ms
2025-04-06 17:31:01.595 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/782fe129-fcaf-4d75-8b44-fc7f6d88016d/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:01.595 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:01.595 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:31:01.595 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:31:01.598 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:31:01.600 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:31:01.600 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.8668ms
2025-04-06 17:31:01.600 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:31:01.600 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/782fe129-fcaf-4d75-8b44-fc7f6d88016d/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 5.2819ms
2025-04-06 17:31:25.136 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryK1SXbNtLhGAohifF 3721436
2025-04-06 17:31:25.136 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:25.136 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:31:25.136 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:31:25.240 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 17:31:25.242 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:31:38.798 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 17:31:38.799 +07:00 [INF] New discussion added: "4212a382-9659-4581-bafb-672b243f68f0" for EventId "f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2" by UserId "782fe129-fcaf-4d75-8b44-fc7f6d88016d"
2025-04-06 17:31:38.800 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 17:31:38.802 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 13665.6808ms
2025-04-06 17:31:38.802 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 17:31:38.805 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 13669.0038ms
2025-04-06 17:31:38.809 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:38.809 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:38.809 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:31:38.809 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:31:38.819 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:31:38.819 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:31:38.820 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 10.7093ms
2025-04-06 17:31:38.820 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:31:38.821 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 11.6806ms
2025-04-06 17:31:56.005 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 17:31:56.005 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:56.005 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2305ms
2025-04-06 17:31:56.007 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 17:31:56.007 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:56.007 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:31:56.007 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:31:56.010 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 17:31:56.082 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:31:56.083 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 75.805ms
2025-04-06 17:31:56.083 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 17:31:56.083 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 76.2007ms
2025-04-06 17:31:57.739 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 17:31:57.739 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:31:57.739 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:57.739 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:57.739 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:31:57.739 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:31:57.739 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:31:57.739 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:31:57.741 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:31:57.742 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:31:57.744 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8643ms
2025-04-06 17:31:57.744 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:31:57.744 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.3912ms
2025-04-06 17:31:57.748 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 17:31:57.748 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:31:57.749 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 9.7176ms
2025-04-06 17:31:57.749 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 17:31:57.749 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 10.2538ms
2025-04-06 17:31:59.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:31:59.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:59.145 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:59.145 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:59.145 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:31:59.145 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:31:59.145 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:31:59.145 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:31:59.148 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:31:59.150 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:31:59.151 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 17:31:59.151 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9578ms
2025-04-06 17:31:59.151 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:31:59.151 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.338ms
2025-04-06 17:31:59.152 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:31:59.153 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 7.2918ms
2025-04-06 17:31:59.153 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 17:31:59.153 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 7.6312ms
2025-04-06 17:31:59.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:31:59.158 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:31:59.158 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:31:59.158 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:31:59.165 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:31:59.165 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:31:59.165 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 7.0514ms
2025-04-06 17:31:59.165 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:31:59.165 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 7.5196ms
2025-04-06 17:32:06.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:32:06.346 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:32:06.346 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:32:06.346 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:32:06.349 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:32:06.350 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:32:06.350 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.1595ms
2025-04-06 17:32:06.350 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:32:06.350 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1856ms
2025-04-06 17:32:06.356 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:32:06.356 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:32:06.356 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:32:06.356 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:32:06.366 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:32:06.366 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:32:06.367 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.1995ms
2025-04-06 17:32:06.367 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:32:06.367 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.7669ms
2025-04-06 17:32:07.798 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:32:07.798 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:32:07.798 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:32:07.798 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:32:07.798 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:32:07.798 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:32:07.798 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:32:07.798 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:32:07.800 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:32:07.801 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:32:07.803 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:32:07.803 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.5276ms
2025-04-06 17:32:07.803 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:32:07.804 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 5.9035ms
2025-04-06 17:32:07.804 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:32:07.804 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 6.1691ms
2025-04-06 17:32:07.804 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:32:07.804 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 6.541ms
2025-04-06 17:32:07.807 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:32:07.807 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:32:07.807 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:32:07.807 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:32:07.813 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:32:07.813 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:32:07.814 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.49ms
2025-04-06 17:32:07.814 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:32:07.814 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 7.0132ms
2025-04-06 17:51:27.818 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:51:27.819 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:51:27.821 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:51:27.821 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:51:28.470 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:51:28.470 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:51:28.470 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 649.0733ms
2025-04-06 17:51:28.471 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:51:28.471 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 653.0944ms
2025-04-06 17:51:28.473 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:51:28.473 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:51:28.473 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:51:28.473 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:51:28.481 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:51:28.481 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:51:28.481 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.1433ms
2025-04-06 17:51:28.482 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:51:28.482 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.5893ms
2025-04-06 17:51:30.588 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:51:30.588 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:51:30.588 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:51:30.588 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:51:30.591 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:51:30.592 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:51:30.596 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.9394ms
2025-04-06 17:51:30.596 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:51:30.599 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.4681ms
2025-04-06 17:51:30.601 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:51:30.601 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:51:30.601 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:51:30.601 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:51:30.603 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:51:30.603 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:51:30.604 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.407ms
2025-04-06 17:51:30.604 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:51:30.605 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.0104ms
2025-04-06 17:58:29.545 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - null null
2025-04-06 17:58:29.545 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:29.545 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/signup - 204 null null 0.4018ms
2025-04-06 17:58:29.547 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/signup - application/json 156
2025-04-06 17:58:29.547 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:29.547 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 17:58:29.547 +07:00 [INF] Route matched with {action = "Signup", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Signup(ems_backend.Services.SignupRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 17:58:29.603 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__newUserRequest_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]
        WHERE [u].[Email] = @__newUserRequest_Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-06 17:58:29.684 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([Id], [Dob], [Email], [FirstName], [LastName], [Password], [Phone])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-04-06 17:58:29.684 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 17:58:29.685 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Signup (ems_backend) in 137.6124ms
2025-04-06 17:58:29.685 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Signup (ems_backend)'
2025-04-06 17:58:29.685 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/signup - 200 null application/json; charset=utf-8 138.0306ms
2025-04-06 17:58:37.915 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:58:37.915 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:37.915 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:58:37.915 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:58:37.923 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:58:37.924 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:58:37.924 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.8907ms
2025-04-06 17:58:37.924 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:58:37.924 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.309ms
2025-04-06 17:58:37.929 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:58:37.930 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:37.930 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:58:37.930 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:58:37.942 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:58:37.942 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:58:37.942 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.4079ms
2025-04-06 17:58:37.942 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:58:37.942 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.2121ms
2025-04-06 17:58:57.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:58:57.218 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:57.218 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:58:57.218 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:58:57.220 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:58:57.222 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:58:57.225 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.9739ms
2025-04-06 17:58:57.225 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:58:57.225 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.506ms
2025-04-06 17:58:57.252 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&categoryId=9092afa3-e6cc-45e0-98dd-e25e38e131be&AvailableOnly=false - null null
2025-04-06 17:58:57.252 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:58:57.252 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:58:57.252 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:58:57.268 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__categoryId_Value_2='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[CategoryId] = @__categoryId_Value_2
2025-04-06 17:58:57.269 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:58:57.271 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.7585ms
2025-04-06 17:58:57.271 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:58:57.272 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&categoryId=9092afa3-e6cc-45e0-98dd-e25e38e131be&AvailableOnly=false - 200 null application/json; charset=utf-8 19.5958ms
2025-04-06 17:59:00.982 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:00.983 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:00.983 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:00.983 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:00.986 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:00.987 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:00.990 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.5488ms
2025-04-06 17:59:00.990 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:00.992 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.1056ms
2025-04-06 17:59:00.995 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:00.995 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:00.995 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:00.995 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:00.996 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:00.998 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:00.998 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4789ms
2025-04-06 17:59:00.998 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:00.999 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 3.9183ms
2025-04-06 17:59:07.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:07.179 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:07.179 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:07.179 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:07.181 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:07.182 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:07.183 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4443ms
2025-04-06 17:59:07.183 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:07.183 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8871ms
2025-04-06 17:59:07.188 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&startDate=2025-04-17T17:59&AvailableOnly=false - null null
2025-04-06 17:59:07.188 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:07.188 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:07.188 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:07.214 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__StartDate_Value_2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[StartDate] >= @__StartDate_Value_2
2025-04-06 17:59:07.214 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:07.215 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 26.6298ms
2025-04-06 17:59:07.215 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:07.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&startDate=2025-04-17T17:59&AvailableOnly=false - 200 null application/json; charset=utf-8 27.1726ms
2025-04-06 17:59:09.397 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:09.397 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:09.397 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:09.397 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:09.398 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:09.402 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:09.402 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1239ms
2025-04-06 17:59:09.402 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:09.402 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6946ms
2025-04-06 17:59:09.406 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:09.406 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:09.406 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:09.406 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:09.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:09.409 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:09.410 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.924ms
2025-04-06 17:59:09.410 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:09.410 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.3927ms
2025-04-06 17:59:11.206 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:11.206 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:11.206 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:11.206 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:11.208 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:11.209 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:11.210 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2678ms
2025-04-06 17:59:11.210 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:11.210 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3696ms
2025-04-06 17:59:11.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&endDate=2025-04-10T17:59&AvailableOnly=false - null null
2025-04-06 17:59:11.214 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:11.214 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:11.214 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:11.230 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__EndDate_Value_2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[EndDate] <= @__EndDate_Value_2
2025-04-06 17:59:11.230 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:11.230 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 16.1414ms
2025-04-06 17:59:11.230 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:11.231 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&endDate=2025-04-10T17:59&AvailableOnly=false - 200 null application/json; charset=utf-8 16.689ms
2025-04-06 17:59:13.988 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:13.988 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:13.988 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:13.988 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:13.989 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:13.990 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:13.991 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2141ms
2025-04-06 17:59:13.991 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:13.992 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.9695ms
2025-04-06 17:59:13.997 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&endDate=2025-02-24T17:59&AvailableOnly=false - null null
2025-04-06 17:59:13.997 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:13.998 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:13.998 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:14.003 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__EndDate_Value_2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[EndDate] <= @__EndDate_Value_2
2025-04-06 17:59:14.003 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:14.004 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.1137ms
2025-04-06 17:59:14.004 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:14.004 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&endDate=2025-02-24T17:59&AvailableOnly=false - 200 null application/json; charset=utf-8 7.0814ms
2025-04-06 17:59:17.815 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:17.815 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:17.815 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:17.815 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:17.817 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:17.818 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:17.819 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8929ms
2025-04-06 17:59:17.819 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:17.819 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4129ms
2025-04-06 17:59:17.822 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:17.822 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:17.822 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:17.822 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:17.825 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:17.826 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:17.826 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3119ms
2025-04-06 17:59:17.827 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:17.827 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.1953ms
2025-04-06 17:59:19.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.263 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.263 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.263 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.265 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.267 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.268 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7099ms
2025-04-06 17:59:19.268 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.269 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.699ms
2025-04-06 17:59:19.272 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.272 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.272 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.272 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.274 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.276 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.276 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6815ms
2025-04-06 17:59:19.276 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.276 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.0458ms
2025-04-06 17:59:19.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.296 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.296 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.296 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.298 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.302 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.303 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.5134ms
2025-04-06 17:59:19.303 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.303 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.4795ms
2025-04-06 17:59:19.307 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.307 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.307 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.307 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.310 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.312 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.312 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1893ms
2025-04-06 17:59:19.312 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.313 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8033ms
2025-04-06 17:59:19.314 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.315 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.315 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.315 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.318 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.319 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.320 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1089ms
2025-04-06 17:59:19.320 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.320 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8789ms
2025-04-06 17:59:19.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.324 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.324 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.324 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.327 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.328 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.329 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8119ms
2025-04-06 17:59:19.329 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.329 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5152ms
2025-04-06 17:59:19.331 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.331 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.332 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.332 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.336 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.337 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.338 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9782ms
2025-04-06 17:59:19.338 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.338 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1247ms
2025-04-06 17:59:19.344 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=20000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.345 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.345 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.345 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.349 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.350 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.350 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.4192ms
2025-04-06 17:59:19.350 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.351 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=20000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1632ms
2025-04-06 17:59:19.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.351 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.351 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.351 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.354 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.355 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.356 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6557ms
2025-04-06 17:59:19.356 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.356 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2725ms
2025-04-06 17:59:19.361 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=30000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.361 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.362 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.362 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.367 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.368 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.368 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.369 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.3444ms
2025-04-06 17:59:19.369 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.369 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=30000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.262ms
2025-04-06 17:59:19.369 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.370 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.370 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.373 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.374 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.375 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1515ms
2025-04-06 17:59:19.375 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.375 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.107ms
2025-04-06 17:59:19.379 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.379 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.379 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.379 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.382 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.384 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.384 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.385 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.385 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.649ms
2025-04-06 17:59:19.385 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.385 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.385 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.385 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.2124ms
2025-04-06 17:59:19.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.388 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.389 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0278ms
2025-04-06 17:59:19.389 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.389 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0798ms
2025-04-06 17:59:19.393 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.393 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.393 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.393 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.396 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.397 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.398 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7699ms
2025-04-06 17:59:19.398 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.398 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.398 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.398 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.399 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4902ms
2025-04-06 17:59:19.399 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.404 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.405 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.405 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.0856ms
2025-04-06 17:59:19.405 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.406 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.3484ms
2025-04-06 17:59:19.409 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.409 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.409 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.409 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.412 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.413 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.413 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3594ms
2025-04-06 17:59:19.414 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.414 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.414 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.414 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.414 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.9043ms
2025-04-06 17:59:19.414 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.416 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.417 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.418 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0657ms
2025-04-06 17:59:19.418 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.418 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.6784ms
2025-04-06 17:59:19.421 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.421 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.421 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.421 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.423 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.424 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.425 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6599ms
2025-04-06 17:59:19.425 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.426 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8886ms
2025-04-06 17:59:19.430 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.430 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.430 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.430 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.431 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.433 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.435 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.319ms
2025-04-06 17:59:19.435 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.436 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.831ms
2025-04-06 17:59:19.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.440 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.440 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.440 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.442 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.444 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.446 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.2143ms
2025-04-06 17:59:19.446 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.447 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.2001ms
2025-04-06 17:59:19.448 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.448 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.448 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.448 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.451 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.453 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7309ms
2025-04-06 17:59:19.453 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.453 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4814ms
2025-04-06 17:59:19.456 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=70000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.456 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.456 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.457 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.460 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.461 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.462 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0817ms
2025-04-06 17:59:19.462 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.462 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=70000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7762ms
2025-04-06 17:59:19.464 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.464 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.464 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.464 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.467 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.469 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.470 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.8681ms
2025-04-06 17:59:19.470 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.8758ms
2025-04-06 17:59:19.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.475 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.475 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.475 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.477 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.479 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.480 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7875ms
2025-04-06 17:59:19.480 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.480 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.480 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5709ms
2025-04-06 17:59:19.480 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.480 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.480 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.482 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.484 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.485 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.1452ms
2025-04-06 17:59:19.485 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.486 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8305ms
2025-04-06 17:59:19.488 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.488 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.488 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.488 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.490 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.492 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1587ms
2025-04-06 17:59:19.493 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.493 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4224ms
2025-04-06 17:59:19.496 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.496 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.496 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.496 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.501 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.503 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.503 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.5454ms
2025-04-06 17:59:19.503 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.504 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.5673ms
2025-04-06 17:59:19.508 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.508 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.508 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.508 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.511 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.513 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.513 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8754ms
2025-04-06 17:59:19.513 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.514 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.514 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.514 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.3718ms
2025-04-06 17:59:19.514 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.514 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.515 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.517 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.519 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8339ms
2025-04-06 17:59:19.519 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.519 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4572ms
2025-04-06 17:59:19.522 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.522 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.522 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.522 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.524 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.526 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.531 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.105ms
2025-04-06 17:59:19.531 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.532 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.9969ms
2025-04-06 17:59:19.537 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.537 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.537 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.537 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.540 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.542 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.543 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.5497ms
2025-04-06 17:59:19.543 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.543 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5485ms
2025-04-06 17:59:19.546 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.546 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.546 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.546 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.548 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.549 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.550 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3879ms
2025-04-06 17:59:19.551 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.551 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.551 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4585ms
2025-04-06 17:59:19.551 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.551 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.551 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.553 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.555 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.556 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.2174ms
2025-04-06 17:59:19.556 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.557 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8294ms
2025-04-06 17:59:19.557 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.557 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.557 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.557 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.559 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.561 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.562 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6745ms
2025-04-06 17:59:19.562 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.563 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7754ms
2025-04-06 17:59:19.579 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.579 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.579 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.579 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.581 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.583 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.584 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8209ms
2025-04-06 17:59:19.584 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.584 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.5576ms
2025-04-06 17:59:19.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.587 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.587 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.587 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.589 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.591 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.592 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4449ms
2025-04-06 17:59:19.592 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.593 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7188ms
2025-04-06 17:59:19.612 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.612 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.612 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.612 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.614 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.616 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.617 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.664ms
2025-04-06 17:59:19.617 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6481ms
2025-04-06 17:59:19.620 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.620 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.620 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.620 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.622 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.624 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.625 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6926ms
2025-04-06 17:59:19.625 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.626 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.3699ms
2025-04-06 17:59:19.629 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.629 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.629 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.629 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.631 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.633 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.634 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.2179ms
2025-04-06 17:59:19.634 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.635 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8783ms
2025-04-06 17:59:19.638 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.638 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.638 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.638 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.641 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.642 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.643 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4964ms
2025-04-06 17:59:19.643 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.644 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5762ms
2025-04-06 17:59:19.646 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.646 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.646 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.646 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.648 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.649 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.651 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5133ms
2025-04-06 17:59:19.651 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.652 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7592ms
2025-04-06 17:59:19.655 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.655 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.655 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.655 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.658 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.659 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.660 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6539ms
2025-04-06 17:59:19.660 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.661 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.9833ms
2025-04-06 17:59:19.663 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.664 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.664 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.664 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.666 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.668 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.669 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.594ms
2025-04-06 17:59:19.669 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.670 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.2844ms
2025-04-06 17:59:19.673 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.673 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.674 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.674 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.676 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.677 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.679 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0074ms
2025-04-06 17:59:19.679 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.679 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.864ms
2025-04-06 17:59:19.681 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.681 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.681 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.681 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.683 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.685 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.686 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9542ms
2025-04-06 17:59:19.686 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.686 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.839ms
2025-04-06 17:59:19.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.690 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.690 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.690 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.692 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.694 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.696 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6691ms
2025-04-06 17:59:19.696 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.696 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1842ms
2025-04-06 17:59:19.697 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.697 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.697 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.697 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.701 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.704 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.706 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.0275ms
2025-04-06 17:59:19.706 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.706 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.8895ms
2025-04-06 17:59:19.709 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.709 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.709 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.709 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.713 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.714 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.715 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.716 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.1946ms
2025-04-06 17:59:19.716 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.716 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.716 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.716 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.716 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.9762ms
2025-04-06 17:59:19.718 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.720 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.721 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1466ms
2025-04-06 17:59:19.722 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.722 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1941ms
2025-04-06 17:59:19.725 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.725 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.725 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.725 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.727 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.729 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.730 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0824ms
2025-04-06 17:59:19.730 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.730 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.731 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.731 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7701ms
2025-04-06 17:59:19.731 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.734 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.737 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.738 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.8914ms
2025-04-06 17:59:19.738 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.738 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.6098ms
2025-04-06 17:59:19.742 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.742 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.742 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.742 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.745 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.746 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.747 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.4023ms
2025-04-06 17:59:19.747 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.747 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.748 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.0193ms
2025-04-06 17:59:19.748 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.748 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.748 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.750 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.751 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.753 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0474ms
2025-04-06 17:59:19.753 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.753 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8039ms
2025-04-06 17:59:19.757 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.757 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.757 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.757 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.760 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.762 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.763 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.7854ms
2025-04-06 17:59:19.763 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.763 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.389ms
2025-04-06 17:59:19.763 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.763 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.764 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.764 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.769 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.771 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.771 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.6539ms
2025-04-06 17:59:19.771 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.772 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.4274ms
2025-04-06 17:59:19.775 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.776 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.776 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.776 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.778 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.780 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.781 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3308ms
2025-04-06 17:59:19.782 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.782 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.782 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.782 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.4997ms
2025-04-06 17:59:19.782 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.782 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.784 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.786 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.787 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.968ms
2025-04-06 17:59:19.787 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.789 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.0093ms
2025-04-06 17:59:19.791 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.791 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.791 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.791 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.794 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.796 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.797 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.5542ms
2025-04-06 17:59:19.797 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.798 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.625ms
2025-04-06 17:59:19.798 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:19.798 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.798 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.798 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:19.802 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:19.804 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.805 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.2605ms
2025-04-06 17:59:19.805 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:19.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.0041ms
2025-04-06 17:59:19.809 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:19.809 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:19.809 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.809 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:19.817 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:19.818 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:19.820 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.1079ms
2025-04-06 17:59:19.820 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:19.821 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.4498ms
2025-04-06 17:59:20.041 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.041 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.041 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.041 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.044 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.045 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.046 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5829ms
2025-04-06 17:59:20.046 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.046 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.0884ms
2025-04-06 17:59:20.049 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.049 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.049 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.049 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.053 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.055 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.060 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.0691ms
2025-04-06 17:59:20.060 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.064 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.5081ms
2025-04-06 17:59:20.064 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.065 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.065 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.065 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.069 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.071 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.072 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.0971ms
2025-04-06 17:59:20.072 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.072 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.8541ms
2025-04-06 17:59:20.077 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.077 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.077 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.077 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.080 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.082 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.082 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.082 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.082 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.082 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.2698ms
2025-04-06 17:59:20.083 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=180000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.921ms
2025-04-06 17:59:20.086 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.088 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.090 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.1829ms
2025-04-06 17:59:20.090 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.090 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.0032ms
2025-04-06 17:59:20.093 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.093 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.094 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.094 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.103 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.104 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.104 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.104 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.104 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.105 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.2503ms
2025-04-06 17:59:20.105 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.105 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.7611ms
2025-04-06 17:59:20.105 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.108 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.110 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.112 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.663ms
2025-04-06 17:59:20.112 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.112 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.6814ms
2025-04-06 17:59:20.114 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.114 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.114 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.114 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.117 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.119 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.119 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.120 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.120 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.8412ms
2025-04-06 17:59:20.120 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.120 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.120 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.120 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5853ms
2025-04-06 17:59:20.123 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.126 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6155ms
2025-04-06 17:59:20.126 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.7258ms
2025-04-06 17:59:20.128 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.128 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.128 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.128 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.130 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.130 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.130 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.130 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.135 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.139 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.148 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.148 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 19.779ms
2025-04-06 17:59:20.148 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.150 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.151 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 22.6156ms
2025-04-06 17:59:20.152 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 21.7901ms
2025-04-06 17:59:20.152 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.152 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 22.2878ms
2025-04-06 17:59:20.153 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.154 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.154 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.154 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.156 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.157 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.158 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.158 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.158 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.158 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.159 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9802ms
2025-04-06 17:59:20.159 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.159 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.009ms
2025-04-06 17:59:20.163 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.164 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.166 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.1011ms
2025-04-06 17:59:20.166 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.167 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.5664ms
2025-04-06 17:59:20.169 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.169 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.169 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.169 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.172 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.174 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.175 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3434ms
2025-04-06 17:59:20.175 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.176 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.1846ms
2025-04-06 17:59:20.197 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.197 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.197 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.197 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.200 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.203 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.204 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.7727ms
2025-04-06 17:59:20.204 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.204 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.3436ms
2025-04-06 17:59:20.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.208 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.208 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.210 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.212 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.213 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1093ms
2025-04-06 17:59:20.213 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.213 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.213 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.6934ms
2025-04-06 17:59:20.213 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.213 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.214 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.216 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.217 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.218 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4496ms
2025-04-06 17:59:20.218 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.219 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.113ms
2025-04-06 17:59:20.222 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.222 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.222 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.222 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.225 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.227 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.228 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.1742ms
2025-04-06 17:59:20.229 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.2533ms
2025-04-06 17:59:20.249 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.249 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.249 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.249 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.251 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.253 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.254 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0993ms
2025-04-06 17:59:20.254 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.255 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.3693ms
2025-04-06 17:59:20.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.258 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.258 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.260 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.263 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.8242ms
2025-04-06 17:59:20.263 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.264 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.5043ms
2025-04-06 17:59:20.388 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.388 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.388 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.388 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.391 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.393 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.394 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7472ms
2025-04-06 17:59:20.394 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.395 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9492ms
2025-04-06 17:59:20.397 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.397 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.397 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.397 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.401 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.402 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.403 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.2402ms
2025-04-06 17:59:20.404 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.404 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.8951ms
2025-04-06 17:59:20.560 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.561 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.561 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.561 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.563 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.578 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.579 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 18.1107ms
2025-04-06 17:59:20.579 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.579 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.8639ms
2025-04-06 17:59:20.588 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.588 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.588 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.588 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.590 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.591 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.593 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4169ms
2025-04-06 17:59:20.593 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.593 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.0117ms
2025-04-06 17:59:20.630 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.630 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.630 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.630 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.632 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.634 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.635 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3343ms
2025-04-06 17:59:20.635 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.9556ms
2025-04-06 17:59:20.639 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.639 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.639 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.639 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.641 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.642 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.643 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0245ms
2025-04-06 17:59:20.643 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.644 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8166ms
2025-04-06 17:59:20.696 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.696 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.696 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.696 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.698 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.700 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.702 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.55ms
2025-04-06 17:59:20.702 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.702 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.0474ms
2025-04-06 17:59:20.709 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.709 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.709 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.709 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.712 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.713 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.714 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4308ms
2025-04-06 17:59:20.714 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.715 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.5001ms
2025-04-06 17:59:20.813 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.813 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.813 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.813 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.814 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.816 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.817 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9955ms
2025-04-06 17:59:20.817 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.817 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.6104ms
2025-04-06 17:59:20.819 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.820 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.820 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.820 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.821 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.823 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.823 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.6817ms
2025-04-06 17:59:20.824 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.824 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.6203ms
2025-04-06 17:59:20.934 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.934 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.934 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.934 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.936 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.938 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.939 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5848ms
2025-04-06 17:59:20.939 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.939 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2985ms
2025-04-06 17:59:20.941 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.941 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.941 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.941 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.943 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.945 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.945 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7805ms
2025-04-06 17:59:20.945 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.946 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.1135ms
2025-04-06 17:59:20.970 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:20.970 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.970 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.970 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:20.972 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:20.973 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.974 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.2961ms
2025-04-06 17:59:20.974 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:20.975 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3335ms
2025-04-06 17:59:20.977 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:20.977 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:20.977 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.977 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:20.979 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:20.980 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:20.981 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7129ms
2025-04-06 17:59:20.981 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:20.982 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=130000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8196ms
2025-04-06 17:59:21.006 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.006 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.006 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.006 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.008 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.009 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.011 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.0697ms
2025-04-06 17:59:21.011 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.011 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8502ms
2025-04-06 17:59:21.014 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.014 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.014 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.014 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.016 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.016 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.018 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8764ms
2025-04-06 17:59:21.018 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.018 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.662ms
2025-04-06 17:59:21.046 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.046 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.046 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.046 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.048 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.049 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.050 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8958ms
2025-04-06 17:59:21.050 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.050 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2953ms
2025-04-06 17:59:21.053 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.053 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.053 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.053 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.055 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.056 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.057 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9513ms
2025-04-06 17:59:21.057 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.058 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.0358ms
2025-04-06 17:59:21.234 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.234 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.234 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.234 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.237 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.238 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.239 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1849ms
2025-04-06 17:59:21.239 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6698ms
2025-04-06 17:59:21.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.242 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.242 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.242 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.245 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.246 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.246 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.864ms
2025-04-06 17:59:21.246 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.247 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.7998ms
2025-04-06 17:59:21.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.769 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.769 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.769 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.771 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.774 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.774 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4191ms
2025-04-06 17:59:21.774 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.774 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6503ms
2025-04-06 17:59:21.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.779 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.779 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.779 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.781 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.782 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.783 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.783 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.5851ms
2025-04-06 17:59:21.783 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.784 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.2781ms
2025-04-06 17:59:21.784 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.784 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.784 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.786 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.786 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.787 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4284ms
2025-04-06 17:59:21.787 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.788 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.3658ms
2025-04-06 17:59:21.790 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.790 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.790 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.790 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.791 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.793 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.794 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0089ms
2025-04-06 17:59:21.794 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.794 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=110000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.6293ms
2025-04-06 17:59:21.796 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.796 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.796 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.796 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.797 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.798 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.800 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.5698ms
2025-04-06 17:59:21.801 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.801 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6076ms
2025-04-06 17:59:21.804 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.804 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.804 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.804 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.807 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.808 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.809 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1317ms
2025-04-06 17:59:21.809 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.809 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.9213ms
2025-04-06 17:59:21.816 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.816 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.816 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.816 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.818 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.819 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.820 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6996ms
2025-04-06 17:59:21.820 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.820 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2513ms
2025-04-06 17:59:21.823 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.823 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.823 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.823 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.825 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.826 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.827 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4488ms
2025-04-06 17:59:21.827 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.827 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.3046ms
2025-04-06 17:59:21.829 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.829 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.829 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.829 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.831 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.832 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.834 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7705ms
2025-04-06 17:59:21.834 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.835 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6228ms
2025-04-06 17:59:21.838 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.839 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.839 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.839 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.840 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.842 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.842 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8186ms
2025-04-06 17:59:21.843 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.843 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=100000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8073ms
2025-04-06 17:59:21.845 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.846 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.846 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.846 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.847 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.849 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.850 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.094ms
2025-04-06 17:59:21.850 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.850 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.7652ms
2025-04-06 17:59:21.853 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.853 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.853 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.853 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.855 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.856 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.857 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0517ms
2025-04-06 17:59:21.857 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.858 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.0036ms
2025-04-06 17:59:21.862 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.862 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.862 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.862 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.863 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.865 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.866 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3511ms
2025-04-06 17:59:21.867 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.867 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.8859ms
2025-04-06 17:59:21.870 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.870 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.870 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.870 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.872 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.874 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.874 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9831ms
2025-04-06 17:59:21.875 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.876 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.3307ms
2025-04-06 17:59:21.895 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.895 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.895 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.895 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.897 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.898 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.900 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.821ms
2025-04-06 17:59:21.900 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.901 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.3834ms
2025-04-06 17:59:21.904 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.904 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.904 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.904 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.906 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.908 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.909 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.006ms
2025-04-06 17:59:21.909 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.909 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.0427ms
2025-04-06 17:59:21.912 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.912 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.912 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.912 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.914 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.915 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.915 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2.5828ms
2025-04-06 17:59:21.915 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.915 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 2.9115ms
2025-04-06 17:59:21.918 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.918 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.918 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.918 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.920 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.921 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.922 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9858ms
2025-04-06 17:59:21.922 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.922 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=80000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8235ms
2025-04-06 17:59:21.929 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.929 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.929 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.929 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.930 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.931 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.934 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9107ms
2025-04-06 17:59:21.934 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.934 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4889ms
2025-04-06 17:59:21.938 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.938 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.938 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.938 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.940 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.941 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.942 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3074ms
2025-04-06 17:59:21.943 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.943 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.3996ms
2025-04-06 17:59:21.946 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:21.946 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.946 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.946 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:21.948 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:21.949 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.950 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3526ms
2025-04-06 17:59:21.950 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:21.951 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2061ms
2025-04-06 17:59:21.953 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:21.953 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:21.953 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.953 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:21.955 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:21.956 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:21.957 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1334ms
2025-04-06 17:59:21.957 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:21.958 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=60000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4008ms
2025-04-06 17:59:22.068 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.069 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.069 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.069 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.072 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.073 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.074 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4047ms
2025-04-06 17:59:22.074 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.074 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.406ms
2025-04-06 17:59:22.078 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.078 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.078 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.078 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.080 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.082 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.082 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.082 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.082 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.082 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.2545ms
2025-04-06 17:59:22.082 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.082 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.7414ms
2025-04-06 17:59:22.084 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.085 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.086 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9621ms
2025-04-06 17:59:22.086 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.087 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2557ms
2025-04-06 17:59:22.089 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.089 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.089 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.089 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.092 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.093 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.094 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.1375ms
2025-04-06 17:59:22.094 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.094 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8729ms
2025-04-06 17:59:22.096 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.096 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.096 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.096 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.098 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.101 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.102 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.0557ms
2025-04-06 17:59:22.102 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.103 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.8008ms
2025-04-06 17:59:22.106 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.106 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.107 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.107 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.108 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.110 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.111 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6992ms
2025-04-06 17:59:22.112 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.112 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=50000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.4356ms
2025-04-06 17:59:22.113 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.113 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.113 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.113 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.115 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.117 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.118 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6959ms
2025-04-06 17:59:22.118 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.118 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.474ms
2025-04-06 17:59:22.121 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=30000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.121 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.121 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.121 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.123 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.125 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9535ms
2025-04-06 17:59:22.125 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=30000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.2888ms
2025-04-06 17:59:22.129 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.129 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.129 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.129 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.131 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.133 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.135 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3735ms
2025-04-06 17:59:22.135 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.136 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.656ms
2025-04-06 17:59:22.139 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=20000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.139 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.139 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.139 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.141 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.143 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.144 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6296ms
2025-04-06 17:59:22.144 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.144 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=20000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.078ms
2025-04-06 17:59:22.146 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.146 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.146 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.146 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.148 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.150 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.152 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9012ms
2025-04-06 17:59:22.152 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.152 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6679ms
2025-04-06 17:59:22.154 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.154 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.154 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.154 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.157 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.158 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.159 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.336ms
2025-04-06 17:59:22.159 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.160 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=10000&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.6043ms
2025-04-06 17:59:22.162 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.162 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.162 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.162 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.164 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.165 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.168 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.948ms
2025-04-06 17:59:22.169 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.169 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9748ms
2025-04-06 17:59:22.172 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.172 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.172 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.172 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.174 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.176 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.177 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.5289ms
2025-04-06 17:59:22.177 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.177 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.2513ms
2025-04-06 17:59:22.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.180 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.180 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.180 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.182 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.183 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.184 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3554ms
2025-04-06 17:59:22.184 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.185 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2201ms
2025-04-06 17:59:22.187 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.187 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.187 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.187 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.189 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.190 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.191 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8894ms
2025-04-06 17:59:22.191 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.192 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.0997ms
2025-04-06 17:59:22.196 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.196 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.196 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.196 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.198 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.199 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.201 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8028ms
2025-04-06 17:59:22.202 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.202 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.9877ms
2025-04-06 17:59:22.205 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.205 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.205 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.205 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.207 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.209 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.210 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7358ms
2025-04-06 17:59:22.210 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.211 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7102ms
2025-04-06 17:59:22.213 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.213 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.213 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.213 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.215 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.216 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.217 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2308ms
2025-04-06 17:59:22.218 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.218 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.3479ms
2025-04-06 17:59:22.221 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.221 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.221 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.221 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.223 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.224 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.225 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.3754ms
2025-04-06 17:59:22.225 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.226 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8056ms
2025-04-06 17:59:22.229 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.229 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.229 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.229 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.231 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.233 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.236 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.4525ms
2025-04-06 17:59:22.236 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.236 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9379ms
2025-04-06 17:59:22.239 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.239 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.239 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.239 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.242 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.243 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.245 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.391ms
2025-04-06 17:59:22.245 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.245 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1372ms
2025-04-06 17:59:22.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.247 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.247 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.247 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.250 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.252 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.253 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.0562ms
2025-04-06 17:59:22.253 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.254 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6323ms
2025-04-06 17:59:22.257 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.257 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.257 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.257 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.259 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.263 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6049ms
2025-04-06 17:59:22.263 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.263 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1697ms
2025-04-06 17:59:22.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.263 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.263 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.263 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.267 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.269 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.269 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.0517ms
2025-04-06 17:59:22.270 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.270 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.7008ms
2025-04-06 17:59:22.273 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.274 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.274 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.274 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.276 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.278 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.279 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3626ms
2025-04-06 17:59:22.279 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.280 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.1639ms
2025-04-06 17:59:22.280 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.280 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.280 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.280 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.282 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.284 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.285 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8085ms
2025-04-06 17:59:22.285 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.286 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6917ms
2025-04-06 17:59:22.289 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.289 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.289 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.289 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.291 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.293 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.294 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1471ms
2025-04-06 17:59:22.294 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.295 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.4616ms
2025-04-06 17:59:22.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.296 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.296 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.296 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.298 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.300 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.303 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.2418ms
2025-04-06 17:59:22.303 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.303 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.7174ms
2025-04-06 17:59:22.306 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.306 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.306 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.306 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.310 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.311 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3227ms
2025-04-06 17:59:22.312 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.312 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8588ms
2025-04-06 17:59:22.314 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.314 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.314 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.314 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.316 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.317 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.319 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8276ms
2025-04-06 17:59:22.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.319 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.734ms
2025-04-06 17:59:22.322 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.322 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.322 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.322 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.324 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.326 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.327 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.7307ms
2025-04-06 17:59:22.327 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.327 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.7576ms
2025-04-06 17:59:22.446 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.446 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.446 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.446 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.448 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.450 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.451 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.2189ms
2025-04-06 17:59:22.452 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.452 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.0853ms
2025-04-06 17:59:22.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.454 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.454 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.457 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.458 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.460 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0327ms
2025-04-06 17:59:22.460 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8592ms
2025-04-06 17:59:22.463 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.463 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.463 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.463 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.468 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.470 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.470 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.9807ms
2025-04-06 17:59:22.470 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.471 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.6188ms
2025-04-06 17:59:22.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.474 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.474 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.475 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.478 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.479 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.480 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.6087ms
2025-04-06 17:59:22.481 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.481 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.531ms
2025-04-06 17:59:22.531 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.531 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.531 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.531 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.536 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.538 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.538 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.1337ms
2025-04-06 17:59:22.538 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.539 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.7507ms
2025-04-06 17:59:22.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.543 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.543 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.543 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.546 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.548 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.549 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3937ms
2025-04-06 17:59:22.549 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.549 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.3855ms
2025-04-06 17:59:22.551 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:22.551 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.551 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.551 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:22.553 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:22.554 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.554 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.555 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.555 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.556 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.556 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.2333ms
2025-04-06 17:59:22.556 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:22.556 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7657ms
2025-04-06 17:59:22.559 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.561 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.561 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.3122ms
2025-04-06 17:59:22.561 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.562 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.7399ms
2025-04-06 17:59:22.564 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.564 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.564 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.564 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.568 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.570 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.570 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.2947ms
2025-04-06 17:59:22.570 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.571 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.0266ms
2025-04-06 17:59:22.572 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 17:59:22.572 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:22.572 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.572 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:22.575 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 17:59:22.576 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:22.577 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.65ms
2025-04-06 17:59:22.577 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:22.578 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.8936ms
2025-04-06 17:59:25.279 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:25.279 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.279 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.279 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:25.281 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:25.282 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.282 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2.9966ms
2025-04-06 17:59:25.283 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.283 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.6538ms
2025-04-06 17:59:25.288 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=%C6%AF&AvailableOnly=false - null null
2025-04-06 17:59:25.288 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.288 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.288 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:25.314 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:25.314 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.315 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 26.9817ms
2025-04-06 17:59:25.315 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.315 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=%C6%AF&AvailableOnly=false - 200 null application/json; charset=utf-8 27.4205ms
2025-04-06 17:59:25.742 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:25.742 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.742 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.742 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:25.744 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:25.745 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.746 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4208ms
2025-04-06 17:59:25.746 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.746 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.9686ms
2025-04-06 17:59:25.747 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:25.747 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.747 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.747 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:25.749 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:25.749 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.750 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.0255ms
2025-04-06 17:59:25.751 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.751 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.6389ms
2025-04-06 17:59:25.752 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:25.752 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.752 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.752 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:25.753 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:25.754 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.755 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4531ms
2025-04-06 17:59:25.756 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.1086ms
2025-04-06 17:59:25.757 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:25.757 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.757 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.757 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:25.758 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:25.759 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.760 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.4477ms
2025-04-06 17:59:25.760 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:25.760 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - null null
2025-04-06 17:59:25.760 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.815ms
2025-04-06 17:59:25.760 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.760 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.761 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:25.763 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:25.764 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.765 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.8302ms
2025-04-06 17:59:25.765 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - 200 null application/json; charset=utf-8 4.5538ms
2025-04-06 17:59:25.767 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - null null
2025-04-06 17:59:25.768 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.768 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.768 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:25.771 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:25.773 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.774 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.338ms
2025-04-06 17:59:25.774 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.774 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - 200 null application/json; charset=utf-8 6.9587ms
2025-04-06 17:59:25.775 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - null null
2025-04-06 17:59:25.775 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.775 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.775 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:25.777 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:25.778 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.779 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.5498ms
2025-04-06 17:59:25.779 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.779 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - 200 null application/json; charset=utf-8 4.0218ms
2025-04-06 17:59:25.780 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - null null
2025-04-06 17:59:25.780 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:25.780 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.780 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:25.782 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:25.783 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:25.784 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.3961ms
2025-04-06 17:59:25.784 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:25.784 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=W&AvailableOnly=false - 200 null application/json; charset=utf-8 4.1092ms
2025-04-06 17:59:26.253 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:26.253 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:26.253 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:26.253 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:26.255 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:26.256 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:26.257 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6072ms
2025-04-06 17:59:26.257 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:26.257 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.1879ms
2025-04-06 17:59:26.259 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=We&AvailableOnly=false - null null
2025-04-06 17:59:26.259 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:26.259 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:26.259 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:26.261 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:26.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:26.262 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.2258ms
2025-04-06 17:59:26.263 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:26.263 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=We&AvailableOnly=false - 200 null application/json; charset=utf-8 3.8818ms
2025-04-06 17:59:27.189 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 17:59:27.190 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:27.190 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:27.190 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 17:59:27.191 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 17:59:27.192 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:27.193 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.3114ms
2025-04-06 17:59:27.193 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 17:59:27.193 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.7153ms
2025-04-06 17:59:27.196 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=Web&AvailableOnly=false - null null
2025-04-06 17:59:27.196 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:27.196 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:27.196 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:27.197 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__Name_2_contains='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[Name] LIKE @__Name_2_contains ESCAPE N'\'
2025-04-06 17:59:27.198 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:27.199 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.7295ms
2025-04-06 17:59:27.200 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 17:59:27.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&name=Web&AvailableOnly=false - 200 null application/json; charset=utf-8 4.1937ms
2025-04-06 17:59:29.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:59:29.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:59:29.587 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:29.587 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:29.587 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:59:29.587 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:59:29.587 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 17:59:29.587 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 17:59:29.614 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 17:59:29.618 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:29.619 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 31.9276ms
2025-04-06 17:59:29.619 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 17:59:29.619 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 32.5688ms
2025-04-06 17:59:29.627 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 17:59:29.627 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 17:59:29.627 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 40.2412ms
2025-04-06 17:59:29.627 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 17:59:29.627 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 40.8314ms
2025-04-06 17:59:29.638 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 17:59:29.638 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:29.638 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:59:29.638 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:59:29.642 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 17:59:29.643 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 17:59:29.643 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.1411ms
2025-04-06 17:59:29.643 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 17:59:29.643 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 404 null application/json; charset=utf-8 5.7449ms
2025-04-06 17:59:42.810 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/tickets/book/50f955e9-6a4d-4af6-827b-6922dd0dbd45/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null 0
2025-04-06 17:59:42.810 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:42.811 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:59:42.811 +07:00 [INF] Route matched with {action = "BookTicket", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] BookTicket(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:59:42.814 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e0].[Id], [e0].[CategoryId], [e0].[Description], [e0].[EndDate], [e0].[IsCanceled], [e0].[Location], [e0].[Name], [e0].[OwnerId], [e0].[StartDate], [e0].[TicketPrice], [e0].[TicketsLeft], [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM (
    SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
    FROM [Events] AS [e]
    WHERE [e].[Id] = @__eventId_0
) AS [e0]
LEFT JOIN [Tickets] AS [t] ON [e0].[Id] = [t].[EventId]
ORDER BY [e0].[Id]
2025-04-06 17:59:42.816 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 17:59:42.822 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Int32), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Int32), @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Events] SET [TicketsLeft] = @p0
OUTPUT 1
WHERE [Id] = @p1;
INSERT INTO [Tickets] ([Id], [EventId], [Status], [UserId])
VALUES (@p2, @p3, @p4, @p5);
2025-04-06 17:59:42.823 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:59:42.823 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.BookTicket (ems_backend) in 12.449ms
2025-04-06 17:59:42.823 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.BookTicket (ems_backend)'
2025-04-06 17:59:42.823 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/tickets/book/50f955e9-6a4d-4af6-827b-6922dd0dbd45/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 13.2111ms
2025-04-06 17:59:42.841 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - null null
2025-04-06 17:59:42.841 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:42.841 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:59:42.841 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:59:42.847 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:59:42.848 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:59:42.848 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 6.9382ms
2025-04-06 17:59:42.848 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:59:42.848 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - 200 null application/json; charset=utf-8 7.4814ms
2025-04-06 17:59:51.996 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 17:59:51.996 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:51.996 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:59:51.996 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:59:52.003 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 17:59:52.004 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 17:59:52.004 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 7.7471ms
2025-04-06 17:59:52.004 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 17:59:52.004 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 8.2596ms
2025-04-06 17:59:57.055 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - null null
2025-04-06 17:59:57.055 +07:00 [INF] CORS policy execution successful.
2025-04-06 17:59:57.055 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:59:57.055 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 17:59:57.057 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 17:59:57.059 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 17:59:57.059 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 4.3427ms
2025-04-06 17:59:57.059 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 17:59:57.060 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - 200 null application/json; charset=utf-8 5.1626ms
2025-04-06 18:00:00.011 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:00:00.011 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:00.011 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:00:00.011 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:00:00.036 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:00:00.039 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:00:00.040 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 28.3981ms
2025-04-06 18:00:00.040 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:00:00.040 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 29.7885ms
2025-04-06 18:00:00.052 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:00:00.052 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:00.052 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:00:00.052 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:00:00.056 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:00:00.057 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:00:00.058 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.414ms
2025-04-06 18:00:00.058 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:00:00.058 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.626ms
2025-04-06 18:00:00.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:00:00.908 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:00.908 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:00:00.908 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 18:00:00.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:00:00.908 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:00.908 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:00:00.908 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:00:00.916 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 18:00:00.916 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:00:00.916 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:00:00.916 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:00:00.917 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 8.573ms
2025-04-06 18:00:00.917 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:00:00.917 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 9.1424ms
2025-04-06 18:00:00.917 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:00:00.917 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 9.0267ms
2025-04-06 18:00:00.917 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 9.7231ms
2025-04-06 18:00:00.934 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:00:00.937 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:00.938 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:00:00.938 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:00:00.945 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 18:00:00.947 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 18:00:00.948 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 9.8185ms
2025-04-06 18:00:00.948 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:00:00.948 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 14.1856ms
2025-04-06 18:00:29.028 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundarymYOORaKLAiUHqX4r 183073
2025-04-06 18:00:29.029 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:29.029 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 18:00:29.029 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 18:00:29.055 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-06 18:00:29.056 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 18:00:37.079 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-06 18:00:37.079 +07:00 [INF] New discussion added: "25fe14a2-347f-45ff-865b-937c944871d7" for EventId "f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2" by UserId "50f955e9-6a4d-4af6-827b-6922dd0dbd45"
2025-04-06 18:00:37.079 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-06 18:00:37.080 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 8050.9268ms
2025-04-06 18:00:37.080 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-06 18:00:37.081 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 8052.3318ms
2025-04-06 18:00:37.084 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:00:37.084 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:00:37.084 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:00:37.084 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 18:00:37.087 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 18:00:37.089 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:00:37.089 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 4.6595ms
2025-04-06 18:00:37.089 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:00:37.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 5.1108ms
2025-04-06 18:01:06.255 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:01:06.255 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:01:06.255 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:01:06.255 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:01:06.261 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:01:06.266 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:01:06.273 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 17.941ms
2025-04-06 18:01:06.273 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:01:06.273 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.5719ms
2025-04-06 18:01:06.280 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:01:06.280 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:01:06.280 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:01:06.280 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:01:06.284 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:01:06.285 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:01:06.288 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.0717ms
2025-04-06 18:01:06.288 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:01:06.289 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.8514ms
2025-04-06 18:01:07.821 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:01:07.821 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:01:07.821 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:01:07.821 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:01:07.821 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:01:07.821 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:01:07.821 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:01:07.821 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:01:07.825 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:01:07.826 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:01:07.832 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.534ms
2025-04-06 18:01:07.832 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:01:07.832 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:01:07.837 +07:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-04-06 18:01:07.838 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 16.3183ms
2025-04-06 18:01:07.838 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:01:07.838 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 17.0677ms
2025-04-06 18:01:07.838 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 404 null application/json; charset=utf-8 17.3234ms
2025-04-06 18:02:06.190 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/events - null null
2025-04-06 18:02:06.190 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:06.190 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/events - 204 null null 0.227ms
2025-04-06 18:02:06.191 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/events - application/json 295
2025-04-06 18:02:06.191 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:06.191 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.CreateEvent (ems_backend)'
2025-04-06 18:02:06.191 +07:00 [INF] Route matched with {action = "CreateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateEvent(ems_backend.Services.EventRequest) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:02:06.203 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = Guid), @p8='?' (DbType = DateTime2), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Events] ([Id], [CategoryId], [Description], [EndDate], [IsCanceled], [Location], [Name], [OwnerId], [StartDate], [TicketPrice], [TicketsLeft])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10);
2025-04-06 18:02:06.207 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'ems_backend.Models.Event'.
2025-04-06 18:02:06.210 +07:00 [INF] Executed action ems_backend.Controllers.EventController.CreateEvent (ems_backend) in 18.5053ms
2025-04-06 18:02:06.210 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.CreateEvent (ems_backend)'
2025-04-06 18:02:06.210 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/events - 201 null application/json; charset=utf-8 19.0583ms
2025-04-06 18:02:06.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:02:06.215 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:06.215 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:02:06.215 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:02:06.216 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:02:06.217 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:02:06.218 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 3.2425ms
2025-04-06 18:02:06.218 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:02:06.218 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 3.6656ms
2025-04-06 18:02:11.120 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:02:11.120 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:02:11.120 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:11.120 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:11.120 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:02:11.120 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:02:11.120 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:02:11.120 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:02:11.123 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:02:11.125 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:02:11.125 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 18:02:11.130 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:02:11.130 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.7672ms
2025-04-06 18:02:11.130 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:02:11.135 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 14.3901ms
2025-04-06 18:02:11.135 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:02:11.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 15.6396ms
2025-04-06 18:02:11.139 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 16.2298ms
2025-04-06 18:02:11.151 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:02:11.151 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:11.151 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:02:11.151 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:02:11.154 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:02:11.156 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:02:11.156 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.2295ms
2025-04-06 18:02:11.156 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:02:11.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 5.8887ms
2025-04-06 18:02:29.950 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:02:29.951 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:29.951 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 204 null null 0.211ms
2025-04-06 18:02:29.952 +07:00 [INF] Request starting HTTP/2 PUT https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - application/json 488
2025-04-06 18:02:29.952 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:29.952 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.UpdateEvent (ems_backend)'
2025-04-06 18:02:29.955 +07:00 [INF] Route matched with {action = "UpdateEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateEvent(System.Guid, ems_backend.Services.EventRequest) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:02:29.995 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[Id], [s].[CategoryId], [s].[Description], [s].[EndDate], [s].[IsCanceled], [s].[Location], [s].[Name], [s].[OwnerId], [s].[StartDate], [s].[TicketPrice], [s].[TicketsLeft], [s].[Id0], [s].[Dob], [s].[Email], [s].[FirstName], [s].[LastName], [s].[Password], [s].[Phone], [s].[Id1], [s].[Name0], [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM (
    SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id] AS [Id0], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e0].[Id] AS [Id1], [e0].[Name] AS [Name0]
    FROM [Events] AS [e]
    INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
    INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
    WHERE [e].[Id] = @__id_0
) AS [s]
LEFT JOIN [Tickets] AS [t] ON [s].[Id] = [t].[EventId]
ORDER BY [s].[Id], [s].[Id0], [s].[Id1]
2025-04-06 18:02:30.015 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Events] SET [Description] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-06 18:02:30.016 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:02:30.016 +07:00 [INF] Executed action ems_backend.Controllers.EventController.UpdateEvent (ems_backend) in 61.1051ms
2025-04-06 18:02:30.016 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.UpdateEvent (ems_backend)'
2025-04-06 18:02:30.016 +07:00 [INF] Request finished HTTP/2 PUT https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 64.3525ms
2025-04-06 18:02:30.020 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:02:30.020 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:30.020 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:02:30.020 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:02:30.022 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:02:30.023 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:02:30.024 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6ms
2025-04-06 18:02:30.024 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:02:30.024 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.4863ms
2025-04-06 18:02:30.027 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:02:30.027 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:02:30.027 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:02:30.028 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:02:30.030 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:02:30.031 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:02:30.032 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 4.7676ms
2025-04-06 18:02:30.033 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:02:30.033 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 6.1101ms
2025-04-06 18:03:07.541 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/events/cancel/5861126b-cd85-4863-8689-807047de5b24 - null 0
2025-04-06 18:03:07.541 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:07.541 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.CancelEvent (ems_backend)'
2025-04-06 18:03:07.545 +07:00 [INF] Route matched with {action = "CancelEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:07.556 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e0].[Id], [e0].[CategoryId], [e0].[Description], [e0].[EndDate], [e0].[IsCanceled], [e0].[Location], [e0].[Name], [e0].[OwnerId], [e0].[StartDate], [e0].[TicketPrice], [e0].[TicketsLeft], [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM (
    SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
    FROM [Events] AS [e]
    WHERE [e].[Id] = @__eventId_0
) AS [e0]
LEFT JOIN [Tickets] AS [t] ON [e0].[Id] = [t].[EventId]
ORDER BY [e0].[Id]
2025-04-06 18:03:07.576 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Events] SET [IsCanceled] = @p0, [TicketsLeft] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2025-04-06 18:03:07.577 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-04-06 18:03:07.577 +07:00 [INF] Executed action ems_backend.Controllers.EventController.CancelEvent (ems_backend) in 32.1563ms
2025-04-06 18:03:07.577 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.CancelEvent (ems_backend)'
2025-04-06 18:03:07.578 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/events/cancel/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 36.5317ms
2025-04-06 18:03:08.952 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:03:08.953 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:08.953 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:08.953 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:03:08.958 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:03:08.959 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:08.961 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.4344ms
2025-04-06 18:03:08.962 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:08.962 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.4811ms
2025-04-06 18:03:08.977 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:03:08.977 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:08.978 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:08.978 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:08.984 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:03:08.985 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:03:08.991 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.1451ms
2025-04-06 18:03:08.991 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:08.991 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 14.0709ms
2025-04-06 18:03:15.578 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:03:15.579 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:15.579 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:15.579 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:03:15.582 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:03:15.584 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:15.584 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4095ms
2025-04-06 18:03:15.584 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:15.584 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.0451ms
2025-04-06 18:03:15.595 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:03:15.595 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:15.595 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:03:15.595 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:15.603 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:03:15.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:15.605 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.2544ms
2025-04-06 18:03:15.605 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:03:15.605 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.371ms
2025-04-06 18:03:19.584 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:03:19.584 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:03:19.584 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:19.584 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:03:19.584 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:19.584 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 18:03:19.584 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:19.584 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:19.586 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 18:03:19.587 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 18:03:19.589 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 4.4698ms
2025-04-06 18:03:19.589 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:03:19.590 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:03:19.591 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:03:19.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/5861126b-cd85-4863-8689-807047de5b24 - 404 null application/json; charset=utf-8 7.0951ms
2025-04-06 18:03:19.594 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 9.5458ms
2025-04-06 18:03:19.595 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:19.595 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/5861126b-cd85-4863-8689-807047de5b24 - 200 null application/json; charset=utf-8 11.408ms
2025-04-06 18:03:19.599 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/5861126b-cd85-4863-8689-807047de5b24 - null null
2025-04-06 18:03:19.600 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:19.600 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:03:19.601 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:03:19.604 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 18:03:19.605 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-06 18:03:19.605 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.3766ms
2025-04-06 18:03:19.605 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:03:19.605 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/5861126b-cd85-4863-8689-807047de5b24 - 404 null application/json; charset=utf-8 5.9779ms
2025-04-06 18:03:30.074 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:03:30.074 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:30.074 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:30.074 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:03:30.076 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:03:30.078 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:30.078 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.8243ms
2025-04-06 18:03:30.078 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:30.078 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2387ms
2025-04-06 18:03:30.084 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:03:30.084 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:30.084 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:03:30.084 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:30.087 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:03:30.088 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:30.088 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.9696ms
2025-04-06 18:03:30.088 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:03:30.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.8102ms
2025-04-06 18:03:35.092 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:03:35.092 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:03:35.093 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:35.093 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:35.093 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:35.093 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:35.093 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:03:35.093 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 18:03:35.097 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 18:03:35.097 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:03:35.098 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:03:35.099 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5.9101ms
2025-04-06 18:03:35.099 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:35.099 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 6.5172ms
2025-04-06 18:03:35.099 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:35.099 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.8701ms
2025-04-06 18:03:35.099 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 18:03:35.100 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 7.5816ms
2025-04-06 18:03:35.105 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:03:35.105 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:35.105 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:03:35.105 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:03:35.107 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 18:03:35.110 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 18:03:35.110 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.8948ms
2025-04-06 18:03:35.110 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 18:03:35.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 5.4419ms
2025-04-06 18:03:54.582 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 18:03:54.582 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:54.582 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2585ms
2025-04-06 18:03:54.584 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 55
2025-04-06 18:03:54.584 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:54.584 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 18:03:54.584 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 18:03:54.587 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 18:03:54.663 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 18:03:54.664 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 79.6952ms
2025-04-06 18:03:54.664 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 18:03:54.664 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 80.1811ms
2025-04-06 18:03:56.322 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:03:56.322 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:56.322 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 18:03:56.322 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:56.322 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:56.322 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:03:56.322 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:56.322 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:03:56.325 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:03:56.325 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:03:56.327 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:56.329 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:56.329 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 6.4011ms
2025-04-06 18:03:56.329 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:03:56.329 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.6869ms
2025-04-06 18:03:56.329 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 6.9844ms
2025-04-06 18:03:56.329 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:56.329 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.3178ms
2025-04-06 18:03:57.684 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:03:57.684 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:57.684 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:57.684 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:03:57.685 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:03:57.685 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:57.685 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:03:57.685 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:03:57.688 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:03:57.689 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:57.717 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 32.4293ms
2025-04-06 18:03:57.717 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:03:57.717 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 18:03:57.732 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 47.2295ms
2025-04-06 18:03:57.733 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:03:57.735 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 50.234ms
2025-04-06 18:03:57.735 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:03:57.736 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 51.3139ms
2025-04-06 18:03:57.739 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:03:57.739 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:03:57.740 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:57.740 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:03:57.744 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:03:57.746 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:03:57.747 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 7.6527ms
2025-04-06 18:03:57.748 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:03:57.748 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 8.4764ms
2025-04-06 18:04:00.698 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 18:04:00.698 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:04:00.698 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:00.698 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:00.698 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:00.698 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:04:00.698 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:04:00.698 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:04:00.702 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:04:00.704 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:04:00.704 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:00.705 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:00.706 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.7374ms
2025-04-06 18:04:00.706 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:00.706 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 7.9814ms
2025-04-06 18:04:00.706 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:04:00.706 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 8.525ms
2025-04-06 18:04:00.706 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.5182ms
2025-04-06 18:04:08.864 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:04:08.864 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:04:08.864 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:08.864 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:08.864 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:08.864 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:08.864 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:04:08.864 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:08.867 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:04:08.867 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 18:04:08.869 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:08.870 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7136ms
2025-04-06 18:04:08.870 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:08.870 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.3177ms
2025-04-06 18:04:08.870 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:08.870 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 6.3013ms
2025-04-06 18:04:08.870 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:08.871 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 6.9264ms
2025-04-06 18:04:08.879 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:04:08.879 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:08.880 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:04:08.880 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:04:08.882 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:04:08.903 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:04:08.904 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 23.9099ms
2025-04-06 18:04:08.904 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:04:08.905 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 25.8033ms
2025-04-06 18:04:19.279 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/tickets/redeem/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - null 0
2025-04-06 18:04:19.279 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:19.279 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.RedeemTicket (ems_backend)'
2025-04-06 18:04:19.282 +07:00 [INF] Route matched with {action = "RedeemTicket", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RedeemTicket(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:19.292 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId]
FROM [Tickets] AS [t]
WHERE [t].[Id] = @__p_0
2025-04-06 18:04:19.302 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tickets] SET [Status] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-06 18:04:19.302 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-04-06 18:04:19.303 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.RedeemTicket (ems_backend) in 20.7774ms
2025-04-06 18:04:19.303 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.RedeemTicket (ems_backend)'
2025-04-06 18:04:19.303 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/tickets/redeem/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - 200 null application/json; charset=utf-8 24.2643ms
2025-04-06 18:04:19.306 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:04:19.306 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:19.306 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:19.306 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:19.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 18:04:19.309 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:19.310 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 3.895ms
2025-04-06 18:04:19.310 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:19.310 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 4.4005ms
2025-04-06 18:04:31.369 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 18:04:31.369 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:31.369 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:04:31.369 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:31.371 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 18:04:31.372 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:31.373 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.5384ms
2025-04-06 18:04:31.373 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:04:31.373 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 4.2812ms
2025-04-06 18:04:32.449 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - null null
2025-04-06 18:04:32.449 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:04:32.449 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:32.449 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:32.449 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:04:32.449 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:32.450 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:04:32.449 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:04:32.469 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:04:32.470 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:32.471 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:04:32.471 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:32.471 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 21.5965ms
2025-04-06 18:04:32.471 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:32.471 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 22.1513ms
2025-04-06 18:04:32.472 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 22.066ms
2025-04-06 18:04:32.472 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:04:32.472 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/c2516177-2f28-454b-b1a9-709b2eb8beae - 200 null application/json; charset=utf-8 22.5859ms
2025-04-06 18:04:34.736 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:04:34.736 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:04:34.736 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:34.736 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:34.736 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:34.736 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:34.736 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:04:34.736 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:34.738 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 18:04:34.738 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:04:34.741 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:34.742 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:34.742 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.835ms
2025-04-06 18:04:34.742 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:04:34.742 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 6.2648ms
2025-04-06 18:04:34.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6051ms
2025-04-06 18:04:34.743 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 18:04:34.743 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 7.6004ms
2025-04-06 18:04:34.750 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 18:04:34.751 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:34.751 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:04:34.751 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:04:34.752 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 18:04:34.772 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 18:04:34.773 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 22.5786ms
2025-04-06 18:04:34.773 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 18:04:34.774 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 23.0603ms
2025-04-06 18:04:54.514 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 18:04:54.514 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:54.514 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.2523ms
2025-04-06 18:04:54.516 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 58
2025-04-06 18:04:54.516 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:54.516 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 18:04:54.516 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 18:04:54.518 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 18:04:54.608 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 18:04:54.609 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 92.6736ms
2025-04-06 18:04:54.609 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 18:04:54.609 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 93.1705ms
2025-04-06 18:04:56.050 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:04:56.050 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:04:56.050 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:04:56.050 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:04:56.054 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 18:04:56.055 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:04:56.057 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 7.0299ms
2025-04-06 18:04:56.057 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:04:56.057 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 7.6386ms
2025-04-06 18:05:00.643 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - null null
2025-04-06 18:05:00.644 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:00.644 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 18:05:00.644 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:05:00.649 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 18:05:00.656 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 18:05:00.660 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 16.4641ms
2025-04-06 18:05:00.660 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 18:05:00.660 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/7297ab8a-bf8e-4e72-94c5-85b83fa4a0f6 - 200 null application/json; charset=utf-8 17.0528ms
2025-04-06 18:05:28.772 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:05:28.772 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:28.773 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:05:28.773 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 18:05:28.791 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 18:05:28.791 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 18:05:28.791 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 18.5936ms
2025-04-06 18:05:28.791 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:05:28.792 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 19.6103ms
2025-04-06 18:05:45.297 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:05:45.297 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:45.297 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 204 null null 0.3103ms
2025-04-06 18:05:45.300 +07:00 [INF] Request starting HTTP/2 PUT https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - application/json 204
2025-04-06 18:05:45.301 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:45.301 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.UpdateUserProfile (ems_backend)'
2025-04-06 18:05:45.306 +07:00 [INF] Route matched with {action = "UpdateUserProfile", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateUserProfile(System.Guid, ems_backend.Services.UserRequest) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 18:05:45.315 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 18:05:45.350 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [LastName] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-06 18:05:45.360 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Tickets] AS [t]
WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1
2025-04-06 18:05:45.370 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Events] AS [e]
WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)
2025-04-06 18:05:45.370 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 18:05:45.371 +07:00 [INF] Executed action ems_backend.Controllers.UserController.UpdateUserProfile (ems_backend) in 64.8795ms
2025-04-06 18:05:45.371 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.UpdateUserProfile (ems_backend)'
2025-04-06 18:05:45.371 +07:00 [INF] Request finished HTTP/2 PUT https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 70.435ms
2025-04-06 18:05:47.603 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:05:47.603 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:47.603 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:05:47.603 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:05:47.605 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 18:05:47.607 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:05:47.608 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.4639ms
2025-04-06 18:05:47.608 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:05:47.608 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 5.007ms
2025-04-06 18:05:49.735 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:05:49.736 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:05:49.736 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:05:49.736 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 18:05:49.739 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 18:05:49.741 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 18:05:49.747 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 10.8071ms
2025-04-06 18:05:49.747 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:05:49.747 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 11.7523ms
2025-04-06 18:06:08.706 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/change-password - null null
2025-04-06 18:06:08.706 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:08.706 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/change-password - 204 null null 0.2524ms
2025-04-06 18:06:08.707 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/change-password - application/json 104
2025-04-06 18:06:08.707 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:08.707 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.ChangePassword (ems_backend)'
2025-04-06 18:06:08.711 +07:00 [INF] Route matched with {action = "ChangePassword", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangePassword(ems_backend.Services.ChangePasswordRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 18:06:08.718 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 18:06:08.800 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-04-06 18:06:08.801 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.ChangePassword (ems_backend) in 89.9642ms
2025-04-06 18:06:08.801 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.ChangePassword (ems_backend)'
2025-04-06 18:06:08.802 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/change-password - 400 null application/json; charset=utf-8 94.329ms
2025-04-06 18:06:17.310 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/change-password - null null
2025-04-06 18:06:17.310 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:17.310 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/change-password - 204 null null 0.4676ms
2025-04-06 18:06:17.312 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/change-password - application/json 105
2025-04-06 18:06:17.312 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:17.312 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.ChangePassword (ems_backend)'
2025-04-06 18:06:17.312 +07:00 [INF] Route matched with {action = "ChangePassword", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ChangePassword(ems_backend.Services.ChangePasswordRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 18:06:17.315 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-06 18:06:17.551 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Guid), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Users] SET [Password] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-06 18:06:17.551 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-04-06 18:06:17.552 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.ChangePassword (ems_backend) in 239.6981ms
2025-04-06 18:06:17.552 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.ChangePassword (ems_backend)'
2025-04-06 18:06:17.552 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/change-password - 200 null application/json; charset=utf-8 240.1987ms
2025-04-06 18:06:23.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:06:23.365 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:23.365 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:06:23.365 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:06:23.369 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:06:23.370 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:06:23.371 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4593ms
2025-04-06 18:06:23.371 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:06:23.371 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.981ms
2025-04-06 18:06:23.379 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:06:23.379 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:23.379 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:06:23.379 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:06:23.381 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:06:23.383 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:06:23.384 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6093ms
2025-04-06 18:06:23.384 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:06:23.384 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.2173ms
2025-04-06 18:06:48.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:06:48.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:06:48.083 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:48.083 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:48.084 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:06:48.084 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:06:48.084 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:06:48.084 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:06:48.086 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:06:48.089 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 18:06:48.090 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:06:48.090 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:06:48.096 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.474ms
2025-04-06 18:06:48.096 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:06:48.097 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 12.8551ms
2025-04-06 18:06:48.097 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 18:06:48.104 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 20.921ms
2025-04-06 18:06:48.104 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 21.2527ms
2025-04-06 18:06:52.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:06:52.454 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:52.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:06:52.454 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 18:06:52.456 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 18:06:52.458 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:06:52.459 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.7905ms
2025-04-06 18:06:52.459 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 18:06:52.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 5.8445ms
2025-04-06 18:06:54.757 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - null null
2025-04-06 18:06:54.758 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:06:54.758 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:06:54.758 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 18:06:54.767 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 18:06:54.768 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 18:06:54.770 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 11.7732ms
2025-04-06 18:06:54.770 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 18:06:54.770 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/50f955e9-6a4d-4af6-827b-6922dd0dbd45 - 200 null application/json; charset=utf-8 12.4262ms
2025-04-06 18:07:05.309 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:05.309 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:05.310 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:05.310 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:05.314 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:05.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:05.315 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0115ms
2025-04-06 18:07:05.315 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:05.315 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.4025ms
2025-04-06 18:07:05.329 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 18:07:05.329 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:05.329 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:05.329 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:05.334 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:05.336 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:05.340 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.8888ms
2025-04-06 18:07:05.340 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:05.341 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.6304ms
2025-04-06 18:07:07.949 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:07.949 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.949 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.949 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:07.951 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:07.952 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:07.953 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6097ms
2025-04-06 18:07:07.953 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.953 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.0037ms
2025-04-06 18:07:07.956 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=970000&AvailableOnly=false - null null
2025-04-06 18:07:07.957 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.957 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:07.957 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:07.960 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:07.960 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:07.961 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.4338ms
2025-04-06 18:07:07.961 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:07.961 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=970000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.9462ms
2025-04-06 18:07:07.965 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:07.966 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.966 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.966 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:07.971 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:07.973 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:07.974 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.1754ms
2025-04-06 18:07:07.974 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.974 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.8999ms
2025-04-06 18:07:07.976 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:07.977 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.977 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.977 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:07.980 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:07.981 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:07.982 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2966ms
2025-04-06 18:07:07.982 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.982 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.9474ms
2025-04-06 18:07:07.986 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:07.986 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.986 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.986 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:07.988 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:07.989 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:07.991 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9268ms
2025-04-06 18:07:07.991 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.991 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.633ms
2025-04-06 18:07:07.994 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:07.994 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:07.994 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:07.994 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.001 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.007 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.008 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.4684ms
2025-04-06 18:07:08.008 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.008 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 14.2608ms
2025-04-06 18:07:08.008 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.009 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.009 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.009 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.012 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.014 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.014 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4332ms
2025-04-06 18:07:08.014 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.014 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1491ms
2025-04-06 18:07:08.015 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.016 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.016 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.016 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.017 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.019 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.020 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4325ms
2025-04-06 18:07:08.020 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.020 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.9119ms
2025-04-06 18:07:08.023 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.023 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.023 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.023 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.025 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.026 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.028 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9665ms
2025-04-06 18:07:08.028 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.029 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.028 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4642ms
2025-04-06 18:07:08.029 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.029 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.029 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.031 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.032 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.034 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.1487ms
2025-04-06 18:07:08.034 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.035 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.4686ms
2025-04-06 18:07:08.039 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.039 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.039 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.039 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.041 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.043 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.044 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.776ms
2025-04-06 18:07:08.044 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.044 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.3901ms
2025-04-06 18:07:08.048 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.048 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.048 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.048 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.049 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.051 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.052 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3832ms
2025-04-06 18:07:08.053 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.053 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.9778ms
2025-04-06 18:07:08.055 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.055 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.055 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.055 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.056 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.058 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.059 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.957ms
2025-04-06 18:07:08.060 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.060 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7942ms
2025-04-06 18:07:08.062 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=860000&AvailableOnly=false - null null
2025-04-06 18:07:08.062 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.062 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.062 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.065 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.067 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.068 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.922ms
2025-04-06 18:07:08.068 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.069 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=860000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.7162ms
2025-04-06 18:07:08.071 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=860000&AvailableOnly=false - null null
2025-04-06 18:07:08.071 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.071 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.071 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.075 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.077 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.077 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.077 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.077 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.077 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.3077ms
2025-04-06 18:07:08.077 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.078 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.078 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=860000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.8916ms
2025-04-06 18:07:08.080 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.081 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.082 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.8127ms
2025-04-06 18:07:08.082 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.531ms
2025-04-06 18:07:08.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.083 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.083 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.083 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.085 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.087 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.088 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7824ms
2025-04-06 18:07:08.088 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.5459ms
2025-04-06 18:07:08.089 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.089 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.089 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.089 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.091 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.092 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.094 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.7962ms
2025-04-06 18:07:08.094 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.094 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.6645ms
2025-04-06 18:07:08.098 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.098 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.098 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.098 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.103 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.104 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.106 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.9165ms
2025-04-06 18:07:08.106 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.106 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.4012ms
2025-04-06 18:07:08.108 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.108 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.108 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.108 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.111 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.112 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.113 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3471ms
2025-04-06 18:07:08.114 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.115 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.875ms
2025-04-06 18:07:08.117 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.118 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.118 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.118 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.120 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.121 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.123 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9779ms
2025-04-06 18:07:08.123 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.123 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.8422ms
2025-04-06 18:07:08.124 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.124 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.124 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.125 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.127 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.128 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.129 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.4855ms
2025-04-06 18:07:08.129 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.129 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1765ms
2025-04-06 18:07:08.134 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.134 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.135 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.135 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.139 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.140 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.141 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3151ms
2025-04-06 18:07:08.142 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.142 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.0271ms
2025-04-06 18:07:08.143 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.143 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.143 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.143 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.145 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.147 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.149 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.2394ms
2025-04-06 18:07:08.149 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.149 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7844ms
2025-04-06 18:07:08.151 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.152 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.152 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.152 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.154 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.155 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.157 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.9342ms
2025-04-06 18:07:08.157 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.157 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.7073ms
2025-04-06 18:07:08.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.158 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.158 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.158 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.160 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.162 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.163 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6616ms
2025-04-06 18:07:08.163 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4756ms
2025-04-06 18:07:08.167 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.167 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.167 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.168 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.171 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.172 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.174 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.2882ms
2025-04-06 18:07:08.174 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.174 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9087ms
2025-04-06 18:07:08.176 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.176 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.176 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.176 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.178 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.180 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.181 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0594ms
2025-04-06 18:07:08.181 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.181 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.5305ms
2025-04-06 18:07:08.184 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.184 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.184 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.185 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.187 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.189 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.190 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.190 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.1778ms
2025-04-06 18:07:08.190 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.190 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.190 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.190 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.190 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.702ms
2025-04-06 18:07:08.192 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.196 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.196 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.197 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.197 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.197 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.197 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.8261ms
2025-04-06 18:07:08.197 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.197 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.4484ms
2025-04-06 18:07:08.202 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.204 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.205 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.8966ms
2025-04-06 18:07:08.205 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.205 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.1109ms
2025-04-06 18:07:08.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.208 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.208 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.211 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.213 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.215 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.7671ms
2025-04-06 18:07:08.215 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.6102ms
2025-04-06 18:07:08.216 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.216 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.217 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.217 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.219 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.221 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.222 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.5406ms
2025-04-06 18:07:08.223 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.223 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9157ms
2025-04-06 18:07:08.225 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.225 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.225 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.228 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.230 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.232 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.189ms
2025-04-06 18:07:08.232 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - null null
2025-04-06 18:07:08.232 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.232 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.232 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.232 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.232 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.9971ms
2025-04-06 18:07:08.241 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.243 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.244 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.244 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.244 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.244 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.245 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.9584ms
2025-04-06 18:07:08.246 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.247 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.248 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=740000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.4615ms
2025-04-06 18:07:08.248 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.250 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.8166ms
2025-04-06 18:07:08.250 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.250 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.8583ms
2025-04-06 18:07:08.254 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.254 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.254 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.254 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.257 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.258 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.261 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.4811ms
2025-04-06 18:07:08.261 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.261 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.261 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.261 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.261 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.4024ms
2025-04-06 18:07:08.262 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.264 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.265 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.269 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.0883ms
2025-04-06 18:07:08.269 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.270 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3423ms
2025-04-06 18:07:08.275 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.275 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.275 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.275 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.277 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.280 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.281 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9064ms
2025-04-06 18:07:08.281 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.281 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6959ms
2025-04-06 18:07:08.286 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=690000&AvailableOnly=false - null null
2025-04-06 18:07:08.286 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.286 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.286 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.289 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.293 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.293 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.293 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.293 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.293 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.2343ms
2025-04-06 18:07:08.294 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.294 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.294 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=690000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.0102ms
2025-04-06 18:07:08.296 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.299 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.301 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.3832ms
2025-04-06 18:07:08.301 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.302 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.7489ms
2025-04-06 18:07:08.304 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.304 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.304 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.304 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.309 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.311 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.2998ms
2025-04-06 18:07:08.311 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.311 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.9778ms
2025-04-06 18:07:08.313 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.313 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.313 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.313 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.315 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.317 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.319 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.955ms
2025-04-06 18:07:08.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.320 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1068ms
2025-04-06 18:07:08.322 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.322 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.322 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.322 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.326 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.329 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.336 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.336 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.5795ms
2025-04-06 18:07:08.336 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.336 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.336 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.336 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 14.1344ms
2025-04-06 18:07:08.336 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.342 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.344 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.345 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.345 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.345 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.7141ms
2025-04-06 18:07:08.345 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.345 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.345 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.345 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.543ms
2025-04-06 18:07:08.348 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.350 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.352 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1894ms
2025-04-06 18:07:08.352 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.353 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.0596ms
2025-04-06 18:07:08.354 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.355 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.355 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.355 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.358 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.361 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.362 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.1355ms
2025-04-06 18:07:08.362 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.363 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.178ms
2025-04-06 18:07:08.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.364 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.364 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.364 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.367 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.375 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.375 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 11.4195ms
2025-04-06 18:07:08.375 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.375 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.376 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.376 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.1221ms
2025-04-06 18:07:08.381 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.382 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.384 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.607ms
2025-04-06 18:07:08.384 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.384 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.385 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.4814ms
2025-04-06 18:07:08.385 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.386 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.386 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.388 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.390 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.392 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.8489ms
2025-04-06 18:07:08.392 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.392 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.7771ms
2025-04-06 18:07:08.393 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.394 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.394 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.394 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.396 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.398 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.401 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.8507ms
2025-04-06 18:07:08.401 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.402 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3062ms
2025-04-06 18:07:08.405 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.405 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.405 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.405 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.411 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.412 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3153ms
2025-04-06 18:07:08.412 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.412 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.3636ms
2025-04-06 18:07:08.417 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.417 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.417 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.417 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.421 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.423 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.6571ms
2025-04-06 18:07:08.423 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.424 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.0678ms
2025-04-06 18:07:08.425 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.425 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.425 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.425 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.428 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.430 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.433 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.7725ms
2025-04-06 18:07:08.433 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.434 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.8203ms
2025-04-06 18:07:08.436 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.437 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.437 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.437 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.439 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.441 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.443 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1112ms
2025-04-06 18:07:08.443 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.444 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.5802ms
2025-04-06 18:07:08.446 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.446 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.446 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.446 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.448 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.450 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.452 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7705ms
2025-04-06 18:07:08.452 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.453 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6542ms
2025-04-06 18:07:08.453 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.453 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.454 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.456 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.457 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.459 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.7572ms
2025-04-06 18:07:08.460 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.460 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5186ms
2025-04-06 18:07:08.461 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=520000&AvailableOnly=false - null null
2025-04-06 18:07:08.461 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.461 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.461 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.465 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.466 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.469 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.3235ms
2025-04-06 18:07:08.470 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=520000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.0006ms
2025-04-06 18:07:08.471 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.471 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.471 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.471 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.473 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.475 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.477 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1115ms
2025-04-06 18:07:08.478 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.478 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1169ms
2025-04-06 18:07:08.481 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.481 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.481 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.481 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.484 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.486 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.488 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3894ms
2025-04-06 18:07:08.488 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.489 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.4341ms
2025-04-06 18:07:08.491 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.491 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.491 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.491 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.494 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.495 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.497 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.9737ms
2025-04-06 18:07:08.497 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.498 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1639ms
2025-04-06 18:07:08.506 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=480000&AvailableOnly=false - null null
2025-04-06 18:07:08.506 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.506 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.506 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.511 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.513 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.514 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.515 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.515 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.2069ms
2025-04-06 18:07:08.515 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.515 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.515 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.515 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=480000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.4254ms
2025-04-06 18:07:08.518 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.520 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.521 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.099ms
2025-04-06 18:07:08.521 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.522 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.522 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.522 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.522 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.3853ms
2025-04-06 18:07:08.522 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.525 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.528 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.529 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.3753ms
2025-04-06 18:07:08.529 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.530 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.2815ms
2025-04-06 18:07:08.539 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.539 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.539 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.539 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.543 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.545 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.545 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.546 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.546 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.547 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.917ms
2025-04-06 18:07:08.547 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.547 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.547 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.6613ms
2025-04-06 18:07:08.551 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.552 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.553 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.553 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.554 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.555 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.556 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.4614ms
2025-04-06 18:07:08.556 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.556 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.8172ms
2025-04-06 18:07:08.560 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.560 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.561 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.562 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.562 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.563 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.237ms
2025-04-06 18:07:08.563 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.564 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.6957ms
2025-04-06 18:07:08.570 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.570 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.570 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.569 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.572 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.572 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.573 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.4909ms
2025-04-06 18:07:08.573 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.574 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.0293ms
2025-04-06 18:07:08.576 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.577 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.577 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.577 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.577 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.578 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.580 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.8128ms
2025-04-06 18:07:08.580 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.581 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.0121ms
2025-04-06 18:07:08.583 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.585 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.585 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.586 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.586 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.587 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.587 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.6437ms
2025-04-06 18:07:08.587 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.587 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.0235ms
2025-04-06 18:07:08.590 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.632 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.634 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.635 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 48.3482ms
2025-04-06 18:07:08.635 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.635 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.636 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.636 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 50.8628ms
2025-04-06 18:07:08.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.636 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.636 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.636 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.636 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.636 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.636 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.636 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.644 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.645 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.646 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.646 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.658 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.658 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.676 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 40.2092ms
2025-04-06 18:07:08.678 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.678 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.678 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.678 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.678 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.715 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.715 +07:00 [INF] Executed DbCommand (76ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.716 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.716 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.716 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.716 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.716 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.716 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.716 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.716 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.731 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 94.5384ms
2025-04-06 18:07:08.731 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 95.6489ms
2025-04-06 18:07:08.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.734 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.737 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.740 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 121.6045ms
2025-04-06 18:07:08.757 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.759 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.760 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.762 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 126.0507ms
2025-04-06 18:07:08.762 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.763 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 131.7446ms
2025-04-06 18:07:08.763 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.764 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.764 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.764 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.764 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.764 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.765 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 119.0898ms
2025-04-06 18:07:08.766 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.766 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.766 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.767 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.767 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.767 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.768 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 131.0987ms
2025-04-06 18:07:08.768 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.768 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 131.7998ms
2025-04-06 18:07:08.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.770 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.770 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.770 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.770 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 125.969ms
2025-04-06 18:07:08.771 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.771 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.772 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.772 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.772 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.773 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.773 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.775 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.776 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.779 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 100.6642ms
2025-04-06 18:07:08.780 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.779 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - null null
2025-04-06 18:07:08.781 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 102.6549ms
2025-04-06 18:07:08.781 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.781 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.783 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.783 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.782 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.787 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.788 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.788 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.789 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.789 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.813 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 48.8169ms
2025-04-06 18:07:08.813 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 97.118ms
2025-04-06 18:07:08.816 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.816 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.813 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 39.3987ms
2025-04-06 18:07:08.816 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.817 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 101.2636ms
2025-04-06 18:07:08.817 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 52.9546ms
2025-04-06 18:07:08.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.817 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.817 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.817 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.817 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.817 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.817 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.817 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.817 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.817 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.817 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.859 +07:00 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.859 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.869 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 97.4123ms
2025-04-06 18:07:08.870 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.872 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=520000&AvailableOnly=false - null null
2025-04-06 18:07:08.873 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.873 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.873 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.875 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 103.6478ms
2025-04-06 18:07:08.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.879 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.879 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.879 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.881 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.905 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 137.7894ms
2025-04-06 18:07:08.905 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 136.8406ms
2025-04-06 18:07:08.905 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.906 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.906 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 139.5234ms
2025-04-06 18:07:08.906 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.906 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.906 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.906 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.906 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.906 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.927 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.930 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.930 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.930 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.930 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.928 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.930 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.930 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.930 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.930 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.950 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 209.6171ms
2025-04-06 18:07:08.950 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.950 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.951 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:08.952 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.952 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.954 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:08.954 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 165.8886ms
2025-04-06 18:07:08.954 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.955 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 180.6388ms
2025-04-06 18:07:08.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:08.955 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.955 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.955 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.983 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:08.983 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 251.7206ms
2025-04-06 18:07:08.984 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:08.984 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.985 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:08.988 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 170.1492ms
2025-04-06 18:07:08.988 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:08.988 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 272.1057ms
2025-04-06 18:07:08.989 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 172.0741ms
2025-04-06 18:07:08.990 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=470000&AvailableOnly=false - 200 null application/json; charset=utf-8 273.7001ms
2025-04-06 18:07:08.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:08.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:08.992 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.992 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:08.992 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.992 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:08.992 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:08.992 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.009 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.009 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.010 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.010 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.010 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.010 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.010 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.010 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.070 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.071 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.071 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.071 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.072 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.073 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.073 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.073 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.075 +07:00 [INF] Executed DbCommand (120ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.077 +07:00 [INF] Executed DbCommand (121ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.078 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.078 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.079 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.079 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.079 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.080 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.081 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 126.6692ms
2025-04-06 18:07:09.081 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 263.6426ms
2025-04-06 18:07:09.081 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.082 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 131.6737ms
2025-04-06 18:07:09.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 265.8487ms
2025-04-06 18:07:09.083 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.083 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.083 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.083 +07:00 [INF] Executed DbCommand (102ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.083 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.083 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.083 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.083 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.091 +07:00 [INF] Executed DbCommand (160ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.091 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 217.7158ms
2025-04-06 18:07:09.091 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.092 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.092 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=520000&AvailableOnly=false - 200 null application/json; charset=utf-8 219.7127ms
2025-04-06 18:07:09.094 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.094 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.094 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.095 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.095 +07:00 [INF] Executed DbCommand (85ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.095 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 164.64ms
2025-04-06 18:07:09.095 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.095 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 168.3333ms
2025-04-06 18:07:09.095 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.095 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.095 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.095 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 102.6474ms
2025-04-06 18:07:09.095 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.095 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.096 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.096 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 104.1818ms
2025-04-06 18:07:09.097 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.098 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.098 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.098 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.099 +07:00 [INF] Executed DbCommand (90ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.100 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.101 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.101 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.102 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.102 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.104 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.106 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.106 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 113.514ms
2025-04-06 18:07:09.107 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.108 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.108 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.111 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 119.7649ms
2025-04-06 18:07:09.116 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.118 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.118 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.118 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.118 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.118 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.119 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.119 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.149 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:09.149 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.149 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.149 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:09.235 +07:00 [INF] Executed DbCommand (164ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.237 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.241 +07:00 [INF] Executed DbCommand (160ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.243 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.243 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.243 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.243 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.244 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 170.6008ms
2025-04-06 18:07:09.245 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.245 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 173.1559ms
2025-04-06 18:07:09.246 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 366.5514ms
2025-04-06 18:07:09.247 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.247 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.249 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.249 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 372.0789ms
2025-04-06 18:07:09.249 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.249 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.250 +07:00 [INF] Executed DbCommand (168ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.251 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.253 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 436.2117ms
2025-04-06 18:07:09.254 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.254 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 437.7068ms
2025-04-06 18:07:09.254 +07:00 [INF] Executed DbCommand (171ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.255 +07:00 [INF] Executed DbCommand (172ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.256 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.256 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.258 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 351.902ms
2025-04-06 18:07:09.258 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.259 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 353.1897ms
2025-04-06 18:07:09.260 +07:00 [INF] Executed DbCommand (161ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.261 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 181.0017ms
2025-04-06 18:07:09.261 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.262 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 182.6783ms
2025-04-06 18:07:09.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.263 +07:00 [INF] Executed DbCommand (163ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.264 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.265 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 492.9354ms
2025-04-06 18:07:09.266 +07:00 [INF] Executed DbCommand (166ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.266 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.268 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.268 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 499.0277ms
2025-04-06 18:07:09.271 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.271 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.271 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.271 +07:00 [INF] Executed DbCommand (163ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.271 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.281 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 374.8ms
2025-04-06 18:07:09.281 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 186.0577ms
2025-04-06 18:07:09.281 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 184.7478ms
2025-04-06 18:07:09.282 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.281 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.282 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.283 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 377.0029ms
2025-04-06 18:07:09.283 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 191.0654ms
2025-04-06 18:07:09.283 +07:00 [INF] Executed DbCommand (178ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.283 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 188.0244ms
2025-04-06 18:07:09.285 +07:00 [INF] Executed DbCommand (171ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.285 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.286 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.287 +07:00 [INF] Executed DbCommand (171ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.287 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 188.1373ms
2025-04-06 18:07:09.287 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.288 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.288 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.288 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 191.6062ms
2025-04-06 18:07:09.288 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.289 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.289 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.289 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 358.7571ms
2025-04-06 18:07:09.290 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.290 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 365.6486ms
2025-04-06 18:07:09.292 +07:00 [INF] Executed DbCommand (146ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.292 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 336.2743ms
2025-04-06 18:07:09.292 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.293 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 337.5898ms
2025-04-06 18:07:09.293 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.294 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.294 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.294 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.294 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.295 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.295 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.295 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.296 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.299 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 288.653ms
2025-04-06 18:07:09.299 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.301 +07:00 [INF] Executed DbCommand (64ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.301 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 291.9534ms
2025-04-06 18:07:09.302 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.303 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.303 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.303 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.303 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.303 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.303 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.304 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.305 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.306 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.307 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.308 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 236.2486ms
2025-04-06 18:07:09.308 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 297.4535ms
2025-04-06 18:07:09.308 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.308 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.308 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 238.5335ms
2025-04-06 18:07:09.309 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 314.7253ms
2025-04-06 18:07:09.312 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 67.9442ms
2025-04-06 18:07:09.312 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.312 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.313 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.313 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.313 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.314 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.313 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.314 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.315 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 65.3232ms
2025-04-06 18:07:09.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.315 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.318 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 234.7605ms
2025-04-06 18:07:09.318 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 46.9167ms
2025-04-06 18:07:09.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.318 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 235.1415ms
2025-04-06 18:07:09.318 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 70.1639ms
2025-04-06 18:07:09.320 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.320 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 236.6981ms
2025-04-06 18:07:09.321 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 52.7973ms
2025-04-06 18:07:09.322 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.323 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.324 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.324 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.324 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.324 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 241.0306ms
2025-04-06 18:07:09.324 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.324 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 82.903ms
2025-04-06 18:07:09.324 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.328 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.324 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.328 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.328 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.325 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 222.6043ms
2025-04-06 18:07:09.329 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.329 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.329 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.330 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 230.0844ms
2025-04-06 18:07:09.330 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.330 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 40.1931ms
2025-04-06 18:07:09.332 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.332 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 213.4925ms
2025-04-06 18:07:09.332 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.332 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.332 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 45.0262ms
2025-04-06 18:07:09.332 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:09.335 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.335 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 226.7463ms
2025-04-06 18:07:09.335 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.334 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 215.1525ms
2025-04-06 18:07:09.335 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 40.7101ms
2025-04-06 18:07:09.336 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 231.886ms
2025-04-06 18:07:09.349 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.340 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.336 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.335 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.349 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 55.5726ms
2025-04-06 18:07:09.350 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.351 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.351 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 201.9344ms
2025-04-06 18:07:09.351 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 232.1297ms
2025-04-06 18:07:09.351 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:09.351 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.352 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 205.3781ms
2025-04-06 18:07:09.353 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 37.9875ms
2025-04-06 18:07:09.353 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 236.9354ms
2025-04-06 18:07:09.356 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.358 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 46.3698ms
2025-04-06 18:07:09.362 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.364 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.365 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.366 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 37.6084ms
2025-04-06 18:07:09.366 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.367 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 70.414ms
2025-04-06 18:07:09.367 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 44.4971ms
2025-04-06 18:07:09.367 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.370 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.372 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 76.9139ms
2025-04-06 18:07:09.372 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 68.388ms
2025-04-06 18:07:09.372 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.372 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 69.3311ms
2025-04-06 18:07:09.379 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.380 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.380 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.380 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.381 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.381 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.381 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.381 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.386 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.387 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.390 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.391 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.391 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.391 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.391 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.392 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.393 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.3619ms
2025-04-06 18:07:09.396 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.398 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 18.7391ms
2025-04-06 18:07:09.399 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.1852ms
2025-04-06 18:07:09.399 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.404 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.405 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.406 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.406 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 24.6362ms
2025-04-06 18:07:09.406 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.409 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.410 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.415 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.417 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.417 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.417 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 25.3784ms
2025-04-06 18:07:09.417 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.418 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.6884ms
2025-04-06 18:07:09.418 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.417 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.418 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 28.3714ms
2025-04-06 18:07:09.418 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.418 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.4577ms
2025-04-06 18:07:09.418 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.424 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.428 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.428 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.429 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.9542ms
2025-04-06 18:07:09.429 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.429 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.429 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.429 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.430 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.7506ms
2025-04-06 18:07:09.436 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.438 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.438 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.439 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.439 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.439 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.440 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.9467ms
2025-04-06 18:07:09.441 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.446 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.447 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 17.8302ms
2025-04-06 18:07:09.447 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.449 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.5661ms
2025-04-06 18:07:09.449 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.452 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.2976ms
2025-04-06 18:07:09.468 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.468 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.469 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.470 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.482 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.483 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.485 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.7975ms
2025-04-06 18:07:09.486 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.486 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 18.0791ms
2025-04-06 18:07:09.556 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:09.556 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:09.556 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.557 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:09.570 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:09.571 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:09.572 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 15.3403ms
2025-04-06 18:07:09.572 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:09.573 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 17.0759ms
2025-04-06 18:07:10.027 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.028 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.028 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.028 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.032 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.035 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.037 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.0688ms
2025-04-06 18:07:10.037 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.037 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.0887ms
2025-04-06 18:07:10.038 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.038 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.038 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.038 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.047 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.049 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.049 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.9358ms
2025-04-06 18:07:10.049 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.050 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.5703ms
2025-04-06 18:07:10.051 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.051 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.051 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.051 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.056 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.057 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.058 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.569ms
2025-04-06 18:07:10.058 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.059 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.7681ms
2025-04-06 18:07:10.062 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.062 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.062 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.062 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.071 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.080 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.081 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 18.4341ms
2025-04-06 18:07:10.081 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.081 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 19.7613ms
2025-04-06 18:07:10.081 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.081 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.082 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.086 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.089 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.090 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.090 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.4968ms
2025-04-06 18:07:10.090 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.090 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.090 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.091 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.091 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.9815ms
2025-04-06 18:07:10.154 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.155 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.155 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.155 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.155 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.156 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.156 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.156 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.156 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.155 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.156 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.156 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.156 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.156 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.157 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 66.0087ms
2025-04-06 18:07:10.157 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.157 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 66.7537ms
2025-04-06 18:07:10.160 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.162 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.165 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.2705ms
2025-04-06 18:07:10.165 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.168 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.9154ms
2025-04-06 18:07:10.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.171 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.171 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.173 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 17.182ms
2025-04-06 18:07:10.173 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.175 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 18.2946ms
2025-04-06 18:07:10.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.179 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.180 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.180 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.181 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.181 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.181 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.181 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.182 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.183 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 26.9272ms
2025-04-06 18:07:10.183 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.183 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 34.1583ms
2025-04-06 18:07:10.186 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.186 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.189 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.190 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.190 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.190 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.191 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.191 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.1478ms
2025-04-06 18:07:10.193 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.193 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.193 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.193 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.5261ms
2025-04-06 18:07:10.193 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.194 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 23.1091ms
2025-04-06 18:07:10.194 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.194 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 17.3654ms
2025-04-06 18:07:10.205 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.207 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.208 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.209 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.209 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.691ms
2025-04-06 18:07:10.209 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.209 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.209 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.0453ms
2025-04-06 18:07:10.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.214 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.214 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.215 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.216 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.216 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.219 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.219 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.220 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 27.2174ms
2025-04-06 18:07:10.221 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.222 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.7795ms
2025-04-06 18:07:10.222 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.223 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 36.932ms
2025-04-06 18:07:10.224 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.224 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.223 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 16.2594ms
2025-04-06 18:07:10.224 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.224 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.229 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.234 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.236 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.237 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 20.9885ms
2025-04-06 18:07:10.237 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.238 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 23.9538ms
2025-04-06 18:07:10.238 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.239 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.7903ms
2025-04-06 18:07:10.239 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.742ms
2025-04-06 18:07:10.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.246 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.246 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.246 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.249 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.252 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.254 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.2827ms
2025-04-06 18:07:10.254 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.255 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.7647ms
2025-04-06 18:07:10.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.258 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.258 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.263 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.265 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.266 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.7891ms
2025-04-06 18:07:10.266 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.267 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=170000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.4919ms
2025-04-06 18:07:10.681 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.681 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.681 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.681 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.683 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.685 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.686 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.5148ms
2025-04-06 18:07:10.687 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.414ms
2025-04-06 18:07:10.687 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.688 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.688 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.688 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.689 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.692 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.693 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3242ms
2025-04-06 18:07:10.693 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.694 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.3657ms
2025-04-06 18:07:10.695 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.695 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.695 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.695 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.697 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.699 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.701 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.702 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.702 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.702 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.702 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.8049ms
2025-04-06 18:07:10.703 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.703 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=160000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.8238ms
2025-04-06 18:07:10.706 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.706 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.706 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.706 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.707 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.710 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.711 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.7987ms
2025-04-06 18:07:10.711 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.712 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.712 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.712 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.712 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.713 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.5641ms
2025-04-06 18:07:10.714 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.715 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.717 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.6876ms
2025-04-06 18:07:10.717 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.717 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.718 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.718 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.718 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.719 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.9755ms
2025-04-06 18:07:10.719 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.720 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.721 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.721 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.4348ms
2025-04-06 18:07:10.721 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.721 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.721 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.721 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.721 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.9163ms
2025-04-06 18:07:10.723 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.724 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.727 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.728 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.737 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 17.9432ms
2025-04-06 18:07:10.737 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 15.6658ms
2025-04-06 18:07:10.738 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.738 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.738 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.738 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=150000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 20.968ms
2025-04-06 18:07:10.740 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.740 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 19.4892ms
2025-04-06 18:07:10.740 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.740 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.740 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.740 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.740 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.740 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.745 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.746 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.746 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.746 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.747 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:10.747 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.747 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.749 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.751 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.4601ms
2025-04-06 18:07:10.751 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 10.8361ms
2025-04-06 18:07:10.751 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.751 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.751 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.752 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 13.9178ms
2025-04-06 18:07:10.752 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.5047ms
2025-04-06 18:07:10.752 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.752 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.752 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.756 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.756 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.757 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.757 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.1555ms
2025-04-06 18:07:10.757 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.758 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.758 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.758 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.758 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.2382ms
2025-04-06 18:07:10.763 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.763 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.769 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.769 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.769 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.769 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.770 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 12.3961ms
2025-04-06 18:07:10.770 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.770 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.770 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.770 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.2135ms
2025-04-06 18:07:10.771 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 17.8097ms
2025-04-06 18:07:10.771 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.771 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 19.976ms
2025-04-06 18:07:10.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.778 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:10.778 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.778 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.779 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.779 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.779 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.779 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.779 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:10.779 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.5818ms
2025-04-06 18:07:10.779 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.779 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.3068ms
2025-04-06 18:07:10.784 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.786 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:10.787 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.789 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:10.789 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.1588ms
2025-04-06 18:07:10.789 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.790 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.1847ms
2025-04-06 18:07:10.790 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.8116ms
2025-04-06 18:07:10.790 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:10.791 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=140000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.419ms
2025-04-06 18:07:10.994 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:10.994 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:10.994 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:10.994 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:10.997 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.002 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.003 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.8597ms
2025-04-06 18:07:11.004 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.004 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.6699ms
2025-04-06 18:07:11.006 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.006 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.006 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.006 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.008 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.010 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.011 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.011 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.3769ms
2025-04-06 18:07:11.012 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.012 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.012 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.012 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1499ms
2025-04-06 18:07:11.012 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.014 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.017 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.017 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.017 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4977ms
2025-04-06 18:07:11.017 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.017 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.017 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.018 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.018 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.217ms
2025-04-06 18:07:11.021 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.022 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.023 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.023 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.7707ms
2025-04-06 18:07:11.023 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.023 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.023 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.024 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=120000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.2489ms
2025-04-06 18:07:11.024 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.026 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.028 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.029 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.029 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.029 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.029 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.029 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.529ms
2025-04-06 18:07:11.029 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.030 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6103ms
2025-04-06 18:07:11.033 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.034 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.035 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.036 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.037 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.037 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.039 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.2937ms
2025-04-06 18:07:11.039 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.039 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.4244ms
2025-04-06 18:07:11.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.040 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.040 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.040 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.041 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.044 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.045 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.7987ms
2025-04-06 18:07:11.045 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.045 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 11.8586ms
2025-04-06 18:07:11.047 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.047 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.048 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.048 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.048 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.048 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.051 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.6215ms
2025-04-06 18:07:11.051 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.051 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.296ms
2025-04-06 18:07:11.053 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.056 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.056 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.056 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.056 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.056 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.2623ms
2025-04-06 18:07:11.056 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.056 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.056 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.7097ms
2025-04-06 18:07:11.059 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.062 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.062 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.1487ms
2025-04-06 18:07:11.062 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.063 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.8936ms
2025-04-06 18:07:11.072 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.073 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.073 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.073 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.076 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.079 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.080 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.081 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.081 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.082 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.8483ms
2025-04-06 18:07:11.082 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.082 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.082 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.7126ms
2025-04-06 18:07:11.085 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.086 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.087 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.088 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.088 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.088 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.089 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.533ms
2025-04-06 18:07:11.090 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.090 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.4333ms
2025-04-06 18:07:11.092 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.095 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.097 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.6959ms
2025-04-06 18:07:11.097 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.097 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.2661ms
2025-04-06 18:07:11.107 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.107 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.107 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.107 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.110 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.113 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.114 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.4318ms
2025-04-06 18:07:11.114 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.114 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 7.1303ms
2025-04-06 18:07:11.536 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:11.536 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.537 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.537 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:11.539 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:11.541 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.542 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.0288ms
2025-04-06 18:07:11.542 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:11.543 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.6871ms
2025-04-06 18:07:11.547 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:11.547 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:11.547 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.547 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:11.549 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:11.550 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:11.551 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.416ms
2025-04-06 18:07:11.552 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:11.552 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.705ms
2025-04-06 18:07:34.845 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:34.845 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:34.845 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:34.845 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:34.848 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:34.849 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:34.852 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.0755ms
2025-04-06 18:07:34.852 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:34.852 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.5305ms
2025-04-06 18:07:34.855 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=true - null null
2025-04-06 18:07:34.855 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:34.855 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:34.855 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:34.861 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-06 18:07:34.862 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:34.862 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.2089ms
2025-04-06 18:07:34.862 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:34.862 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=true - 200 null application/json; charset=utf-8 7.7573ms
2025-04-06 18:07:35.013 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 18:07:35.013 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:35.013 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:35.013 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 18:07:35.016 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 18:07:35.017 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:35.021 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.5107ms
2025-04-06 18:07:35.021 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 18:07:35.022 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.9591ms
2025-04-06 18:07:35.025 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - null null
2025-04-06 18:07:35.026 +07:00 [INF] CORS policy execution successful.
2025-04-06 18:07:35.026 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:35.026 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 18:07:35.030 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 18:07:35.030 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 18:07:35.031 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.6411ms
2025-04-06 18:07:35.031 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 18:07:35.031 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=90000&maxPrice=570000&AvailableOnly=false - 200 null application/json; charset=utf-8 5.6021ms
2025-04-06 19:08:12.596 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 19:08:12.597 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:12.597 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 1.395ms
2025-04-06 19:08:12.599 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 19:08:12.600 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:12.600 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 19:08:12.600 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 19:08:13.466 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 19:08:13.533 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 19:08:13.534 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 933.8525ms
2025-04-06 19:08:13.534 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 19:08:13.534 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 934.9188ms
2025-04-06 19:08:15.656 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 19:08:15.656 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:15.656 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 19:08:15.656 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 19:08:15.664 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 19:08:15.665 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:15.665 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 9.5424ms
2025-04-06 19:08:15.666 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 19:08:15.666 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 10.0463ms
2025-04-06 19:08:16.202 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 19:08:16.202 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 19:08:16.202 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:16.202 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:16.202 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 19:08:16.202 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 19:08:16.203 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 19:08:16.203 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 19:08:16.207 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 19:08:16.208 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:16.212 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.6604ms
2025-04-06 19:08:16.212 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 19:08:16.217 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.2102ms
2025-04-06 19:08:16.230 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 19:08:16.230 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:16.230 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 27.1837ms
2025-04-06 19:08:16.230 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 19:08:16.230 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 28.1201ms
2025-04-06 19:08:17.092 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 19:08:17.092 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:17.092 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 19:08:17.092 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 19:08:17.095 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 19:08:17.096 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:17.097 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2584ms
2025-04-06 19:08:17.097 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 19:08:17.097 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.77ms
2025-04-06 19:08:17.108 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 19:08:17.108 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:17.108 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 19:08:17.108 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 19:08:17.116 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 19:08:17.117 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:17.117 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.4308ms
2025-04-06 19:08:17.117 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 19:08:17.117 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.0458ms
2025-04-06 19:08:18.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 19:08:18.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 19:08:18.719 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:18.719 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:18.719 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 19:08:18.719 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 19:08:18.719 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 19:08:18.719 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 19:08:18.737 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 19:08:18.739 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 19:08:18.740 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 21.0428ms
2025-04-06 19:08:18.740 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 19:08:18.740 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 21.5603ms
2025-04-06 19:08:18.751 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 19:08:18.751 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 19:08:18.751 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 32.7105ms
2025-04-06 19:08:18.752 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 19:08:18.752 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 33.1596ms
2025-04-06 19:08:18.766 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 19:08:18.767 +07:00 [INF] CORS policy execution successful.
2025-04-06 19:08:18.767 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 19:08:18.767 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 19:08:18.773 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 19:08:18.774 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 19:08:18.775 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 8.2408ms
2025-04-06 19:08:18.775 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 19:08:18.775 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 8.8064ms
2025-04-06 20:21:56.979 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 20:21:56.979 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:21:56.982 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 3.755ms
2025-04-06 20:21:56.984 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 20:21:56.985 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:21:56.985 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 20:21:56.985 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 20:21:57.691 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 20:21:57.765 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 20:21:57.766 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 780.9051ms
2025-04-06 20:21:57.766 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 20:21:57.766 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 781.4089ms
2025-04-06 20:21:59.874 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:21:59.874 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:21:59.874 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:21:59.874 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:21:59.878 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:21:59.879 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:21:59.883 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.6816ms
2025-04-06 20:21:59.883 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:21:59.883 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.3023ms
2025-04-06 20:21:59.887 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 20:21:59.887 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:21:59.887 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 20:21:59.887 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:21:59.896 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 20:21:59.896 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:21:59.897 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.0904ms
2025-04-06 20:21:59.897 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 20:21:59.897 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.5257ms
2025-04-06 20:22:18.270 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:22:18.270 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:22:18.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:22:18.270 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:22:18.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 20:22:18.270 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:22:18.270 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 20:22:18.270 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:22:18.277 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 20:22:18.277 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:22:18.282 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 11.6113ms
2025-04-06 20:22:18.283 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 20:22:18.284 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 13.4066ms
2025-04-06 20:22:18.289 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 20:22:18.289 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 20:22:18.290 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 19.1953ms
2025-04-06 20:22:18.290 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:22:18.290 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 19.68ms
2025-04-06 20:22:18.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:22:18.296 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:22:18.296 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 20:22:18.296 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:22:18.302 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 20:22:18.302 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 20:22:18.302 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.1043ms
2025-04-06 20:22:18.302 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 20:22:18.302 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 6.5268ms
2025-04-06 20:23:08.518 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:23:08.518 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:23:08.518 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:23:08.518 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:23:08.519 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:23:08.519 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:23:08.519 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:23:08.520 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:23:08.527 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:23:08.528 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:23:08.533 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 13.3037ms
2025-04-06 20:23:08.533 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:23:08.544 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 25.3086ms
2025-04-06 20:23:08.552 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 20:23:08.553 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:23:08.553 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 34.4148ms
2025-04-06 20:23:08.553 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:23:08.553 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 35.0306ms
2025-04-06 20:23:22.184 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:23:22.184 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:23:22.184 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 20:23:22.185 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:23:22.185 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:23:22.185 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 20:23:22.185 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:23:22.185 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:23:22.189 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:23:22.190 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:23:22.193 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.3572ms
2025-04-06 20:23:22.193 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:23:22.193 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.9186ms
2025-04-06 20:23:22.197 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 20:23:22.198 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:23:22.198 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 20:23:22.198 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:23:22.198 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:23:22.199 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:23:22.199 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 14.3196ms
2025-04-06 20:23:22.199 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 20:23:22.199 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.7969ms
2025-04-06 20:23:22.205 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 20:23:22.207 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 20:23:22.207 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 8.5238ms
2025-04-06 20:23:22.207 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:23:22.207 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 9.1743ms
2025-04-06 20:24:08.318 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:24:08.319 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:24:08.319 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:24:08.319 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:24:08.337 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 20:24:08.339 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:24:08.347 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 28.2437ms
2025-04-06 20:24:08.347 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:24:08.347 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 28.7571ms
2025-04-06 20:24:13.658 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:24:13.658 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:24:13.658 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:24:13.659 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:24:13.659 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:24:13.659 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:24:13.659 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:24:13.660 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:24:13.669 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:24:13.671 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:24:13.677 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 18.249ms
2025-04-06 20:24:13.678 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:24:13.678 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 19.6885ms
2025-04-06 20:24:13.687 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 20:24:13.690 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:24:13.691 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 31.4728ms
2025-04-06 20:24:13.692 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:24:13.692 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 33.6119ms
2025-04-06 20:24:52.442 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:24:52.442 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:24:52.442 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:24:52.442 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:24:52.446 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 20:24:52.451 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:24:52.453 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 11.4125ms
2025-04-06 20:24:52.453 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:24:52.454 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 11.8939ms
2025-04-06 20:25:04.394 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - null null
2025-04-06 20:25:04.394 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:25:04.394 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 20:25:04.394 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:25:04.399 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 20:25:04.400 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 20:25:04.400 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 6.369ms
2025-04-06 20:25:04.400 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 20:25:04.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - 200 null application/json; charset=utf-8 6.9132ms
2025-04-06 20:25:29.225 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:25:29.225 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:25:29.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:25:29.225 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 20:25:29.233 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 20:25:29.236 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 20:25:29.237 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 11.5132ms
2025-04-06 20:25:29.237 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:25:29.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 12.2681ms
2025-04-06 20:30:51.892 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:30:51.893 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:30:51.893 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:30:51.896 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:30:51.987 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:30:51.987 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:30:51.988 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 91.6465ms
2025-04-06 20:30:51.988 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:30:51.988 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 95.7647ms
2025-04-06 20:30:51.992 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-06 20:30:51.992 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:30:51.992 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 20:30:51.992 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:30:52.002 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-06 20:30:52.002 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:30:52.002 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.653ms
2025-04-06 20:30:52.002 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-06 20:30:52.003 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 11.143ms
2025-04-06 20:32:31.071 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:32:31.071 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:32:31.072 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:32:31.072 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:32:31.072 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:32:31.073 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:32:31.073 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 20:32:31.073 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-06 20:32:31.084 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 20:32:31.085 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 20:32:31.089 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 17.3243ms
2025-04-06 20:32:31.089 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:32:31.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 18.5063ms
2025-04-06 20:32:31.095 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-06 20:32:31.099 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - null null
2025-04-06 20:32:31.100 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:32:31.100 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:32:31.101 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 20:32:31.101 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:32:31.101 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 27.7475ms
2025-04-06 20:32:31.101 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-06 20:32:31.103 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 30.4722ms
2025-04-06 20:32:31.108 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-06 20:32:31.108 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 20:32:31.108 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.4676ms
2025-04-06 20:32:31.108 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-06 20:32:31.109 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/f6c3d4b4-dc54-42b8-83ca-04bf2668a4b2 - 200 null application/json; charset=utf-8 9.8945ms
2025-04-06 20:33:24.662 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:33:24.663 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:33:24.663 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:33:24.663 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:33:24.695 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:33:24.696 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:33:24.696 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:33:24.696 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:33:24.699 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 20:33:24.699 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:33:24.701 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 38.2727ms
2025-04-06 20:33:24.701 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:33:24.702 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 40.2454ms
2025-04-06 20:33:24.703 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:33:24.705 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:33:24.708 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.4152ms
2025-04-06 20:33:24.709 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:33:24.709 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 14.1019ms
2025-04-06 20:34:19.720 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:34:19.720 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 20:34:19.720 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:34:19.720 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:34:19.720 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:34:19.720 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 20:34:19.720 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:34:19.720 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:34:19.725 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:34:19.738 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:34:19.742 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-06 20:34:19.743 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 22.9195ms
2025-04-06 20:34:19.743 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:34:19.746 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 26.6119ms
2025-04-06 20:34:19.747 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:34:19.747 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 26.7743ms
2025-04-06 20:34:19.747 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-06 20:34:19.747 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 27.2496ms
2025-04-06 20:34:19.750 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-06 20:34:19.750 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:34:19.750 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:34:19.750 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:34:19.752 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-06 20:34:19.753 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-06 20:34:19.754 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 3.717ms
2025-04-06 20:34:19.754 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-06 20:34:19.754 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.2314ms
2025-04-06 20:35:21.220 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:35:21.221 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:35:21.221 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:35:21.221 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-06 20:35:21.228 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-06 20:35:21.229 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:35:21.229 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:35:21.229 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-06 20:35:21.238 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-06 20:35:21.239 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:35:21.245 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 22.8845ms
2025-04-06 20:35:21.245 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-06 20:35:21.245 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 25.118ms
2025-04-06 20:35:21.249 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-06 20:35:21.254 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:35:21.255 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 26.2757ms
2025-04-06 20:35:21.255 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-06 20:35:21.255 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 27.7817ms
2025-04-06 20:35:42.873 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:35:42.873 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:35:42.873 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:35:42.873 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:35:42.877 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 20:35:42.878 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:35:42.882 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 9.6153ms
2025-04-06 20:35:42.883 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:35:42.883 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 10.1131ms
2025-04-06 20:36:10.493 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:36:10.493 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:36:10.493 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:36:10.493 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 20:36:10.500 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 20:36:10.501 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 20:36:10.501 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 7.9072ms
2025-04-06 20:36:10.501 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:36:10.501 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 8.6596ms
2025-04-06 20:36:12.869 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:36:12.870 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:36:12.870 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:36:12.870 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:36:12.872 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-06 20:36:12.873 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-06 20:36:12.876 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 6.8451ms
2025-04-06 20:36:12.877 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-06 20:36:12.879 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 9.8931ms
2025-04-06 20:36:14.115 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - null null
2025-04-06 20:36:14.115 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:36:14.115 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 20:36:14.115 +07:00 [INF] Route matched with {action = "GetTicketById", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketById(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-06 20:36:14.122 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ticketId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[Id] = @__ticketId_0
2025-04-06 20:36:14.123 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.TicketService+TicketDTO'.
2025-04-06 20:36:14.123 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketById (ems_backend) in 7.6045ms
2025-04-06 20:36:14.123 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketById (ems_backend)'
2025-04-06 20:36:14.123 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/45c34270-2f3b-4aa8-8ba2-52cbbe4d2921 - 200 null application/json; charset=utf-8 8.5675ms
2025-04-06 20:36:29.996 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-06 20:36:29.997 +07:00 [INF] CORS policy execution successful.
2025-04-06 20:36:29.997 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:36:29.997 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-06 20:36:30.002 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-06 20:36:30.003 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-06 20:36:30.007 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 9.21ms
2025-04-06 20:36:30.007 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-06 20:36:30.007 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 11.304ms
2025-04-06 20:55:45.467 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/index.html - null null
2025-04-06 20:55:45.620 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-06 20:55:45.640 +07:00 [INF] Hosting environment: Development
2025-04-06 20:55:45.640 +07:00 [INF] Content root path: D:\Code\Event-Management-System\ems_backend
2025-04-06 20:55:46.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_vs/browserLink - null null
2025-04-06 20:55:46.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - null null
2025-04-06 20:55:46.365 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/index.html - 200 null text/html;charset=utf-8 918.1149ms
2025-04-06 20:55:46.372 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - 200 13774 application/javascript; charset=utf-8 4.2423ms
2025-04-06 20:55:46.409 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_vs/browserLink - 200 null text/javascript; charset=UTF-8 46.6151ms
2025-04-06 20:55:46.474 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - null null
2025-04-06 20:55:46.500 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.2539ms
2025-04-06 21:46:29.863 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 21:46:29.896 +07:00 [INF] CORS policy execution successful.
2025-04-06 21:46:29.898 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 67.941ms
2025-04-06 21:46:29.901 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 21:46:29.904 +07:00 [INF] CORS policy execution successful.
2025-04-06 21:46:29.911 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 21:46:29.946 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 21:46:32.371 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 21:46:32.552 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 21:46:32.581 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 2632.3746ms
2025-04-06 21:46:32.581 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 21:46:32.588 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 2687.3199ms
2025-04-06 22:05:34.578 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 22:05:34.579 +07:00 [INF] CORS policy execution successful.
2025-04-06 22:05:34.580 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 2.6746ms
2025-04-06 22:05:34.583 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 22:05:34.583 +07:00 [INF] CORS policy execution successful.
2025-04-06 22:05:34.584 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 22:05:34.585 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 22:05:35.228 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 22:05:35.337 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 22:05:35.338 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 752.7902ms
2025-04-06 22:05:35.338 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 22:05:35.339 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 756.1594ms
2025-04-06 22:28:03.051 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-06 22:28:03.053 +07:00 [INF] CORS policy execution successful.
2025-04-06 22:28:03.053 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 2.3718ms
2025-04-06 22:28:03.056 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-06 22:28:03.056 +07:00 [INF] CORS policy execution successful.
2025-04-06 22:28:03.056 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 22:28:03.057 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-06 22:28:03.719 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-06 22:28:03.804 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-06 22:28:03.805 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 748.0165ms
2025-04-06 22:28:03.805 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-06 22:28:03.805 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 749.7789ms
