2025-04-05 02:18:09.281 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:18:09.281 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:18:09.511 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:18:09.511 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:18:09.511 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:18:09.511 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:18:09.514 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:18:09.515 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:18:09.723 +07:00 [INF] Executed DbCommand (67ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:18:09.723 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-05 02:18:09.726 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:18:09.732 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 216.4302ms
2025-04-05 02:18:09.732 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:18:09.732 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 462.0295ms
2025-04-05 02:18:09.733 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:18:09.734 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 218.7677ms
2025-04-05 02:18:09.734 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:18:09.735 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 464.3922ms
2025-04-05 02:18:09.740 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:18:09.740 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:18:09.740 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:18:09.740 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:18:09.751 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:18:09.752 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:18:09.753 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 12.7801ms
2025-04-05 02:18:09.753 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:18:09.753 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 13.8385ms
2025-04-05 02:24:57.706 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:24:57.706 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:24:57.706 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:24:57.706 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:24:57.772 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:24:57.773 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:24:57.776 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 69.1477ms
2025-04-05 02:24:57.776 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:24:57.778 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 70.4165ms
2025-04-05 02:24:57.781 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 02:24:57.781 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:24:57.781 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:24:57.781 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:24:57.814 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 02:24:57.814 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:24:57.814 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 32.6179ms
2025-04-05 02:24:57.814 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:24:57.815 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 34.0586ms
2025-04-05 02:24:58.829 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:24:58.829 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:24:58.829 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:24:58.829 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:24:58.830 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:24:58.830 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:24:58.831 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:24:58.831 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:24:58.838 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-05 02:24:58.844 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:24:58.844 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 14.8584ms
2025-04-05 02:24:58.844 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:24:58.844 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 15.3174ms
2025-04-05 02:24:58.855 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:24:58.855 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:24:58.856 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 24.6911ms
2025-04-05 02:24:58.856 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:24:58.856 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 26.4523ms
2025-04-05 02:24:58.864 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:24:58.864 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:24:58.864 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:24:58.864 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:24:58.870 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:24:58.871 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:24:58.871 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.0609ms
2025-04-05 02:24:58.872 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:24:58.872 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.1472ms
2025-04-05 02:27:24.741 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:27:24.742 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:27:24.742 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:27:24.743 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:27:24.806 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:27:24.807 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:27:24.878 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 135.5198ms
2025-04-05 02:27:24.878 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:27:24.879 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 137.6452ms
2025-04-05 02:27:25.039 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 02:27:25.039 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:27:25.039 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:27:25.039 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:27:25.074 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 02:27:25.075 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:27:25.075 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 35.9122ms
2025-04-05 02:27:25.075 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:27:25.076 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 36.8961ms
2025-04-05 02:27:26.162 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:27:26.163 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:27:26.163 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:27:26.163 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:27:26.163 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:27:26.163 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:27:26.163 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:27:26.163 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:27:26.187 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-05 02:27:26.189 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:27:26.189 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:27:26.189 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:27:26.190 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 27.3505ms
2025-04-05 02:27:26.190 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 27.4631ms
2025-04-05 02:27:26.191 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:27:26.191 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:27:26.191 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 28.0583ms
2025-04-05 02:27:26.191 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 28.5263ms
2025-04-05 02:27:26.198 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:27:26.198 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:27:26.198 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:27:26.198 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:27:26.214 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:27:26.215 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:27:26.216 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 17.2393ms
2025-04-05 02:27:26.217 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:27:26.218 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 19.8265ms
2025-04-05 02:28:28.615 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:28:28.618 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:28:28.618 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:28:28.619 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:28:28.653 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:28:28.653 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:28:28.653 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:28:28.653 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:28:28.658 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:28:28.659 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:28:28.667 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 48.5586ms
2025-04-05 02:28:28.667 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:28:28.668 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 52.9611ms
2025-04-05 02:28:28.668 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-05 02:28:28.676 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:28:28.677 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 23.4402ms
2025-04-05 02:28:28.677 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:28:28.677 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 24.6568ms
2025-04-05 02:28:28.722 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:28:28.722 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:28:28.722 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:28:28.723 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:28:28.730 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:28:28.730 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:28:28.730 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 7.6748ms
2025-04-05 02:28:28.731 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:28:28.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 9.5126ms
2025-04-05 02:28:50.969 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryWeeODqmfcZvrfk4A 343938
2025-04-05 02:28:50.971 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:28:50.971 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 02:28:50.971 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:28:51.138 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-05 02:28:51.140 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-05 02:29:02.046 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-05 02:29:02.047 +07:00 [INF] New discussion added: "c70e86e5-ba75-425c-add8-74e74bc69495" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-05 02:29:02.048 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-05 02:29:02.055 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 11083.8056ms
2025-04-05 02:29:02.055 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 02:29:02.057 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 11087.4223ms
2025-04-05 02:29:02.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:29:02.059 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:29:02.059 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:29:02.059 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:29:02.062 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
2025-04-05 02:29:02.062 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:29:02.063 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.8655ms
2025-04-05 02:29:02.063 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:29:02.063 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.3805ms
2025-04-05 02:30:11.851 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/index.html - null null
2025-04-05 02:30:12.158 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-04-05 02:30:12.191 +07:00 [INF] Hosting environment: Development
2025-04-05 02:30:12.192 +07:00 [INF] Content root path: D:\Code\Event-Management-System\ems_backend
2025-04-05 02:30:13.230 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - null null
2025-04-05 02:30:13.226 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/index.html - 200 null text/html;charset=utf-8 1388.7969ms
2025-04-05 02:30:13.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_framework/aspnetcore-browser-refresh.js - 200 13774 application/javascript; charset=utf-8 8.3607ms
2025-04-05 02:30:13.304 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/_vs/browserLink - null null
2025-04-05 02:30:13.429 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/_vs/browserLink - 200 null text/javascript; charset=UTF-8 124.8196ms
2025-04-05 02:30:13.658 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:30:13.679 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:30:13.691 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:30:13.696 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:30:13.737 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:30:13.737 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:30:13.842 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:30:13.866 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:30:14.878 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - null null
2025-04-05 02:30:14.929 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 51.9943ms
2025-04-05 02:30:18.824 +07:00 [INF] Executed DbCommand (488ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:30:18.824 +07:00 [INF] Executed DbCommand (488ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:30:18.995 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:30:19.098 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 5226.188ms
2025-04-05 02:30:19.099 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:30:19.112 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 499 null application/json; charset=utf-8 5432.9053ms
2025-04-05 02:30:19.153 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:30:19.167 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5323.2883ms
2025-04-05 02:30:19.167 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:30:19.168 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 499 null application/json; charset=utf-8 5510.011ms
2025-04-05 02:30:19.797 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:30:19.800 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:30:19.801 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:30:19.801 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:30:19.802 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:30:19.813 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:30:19.814 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:30:19.814 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:30:19.987 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:30:19.987 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:30:19.991 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:30:19.993 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:30:19.993 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 178.6499ms
2025-04-05 02:30:19.993 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:30:19.994 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 191.3844ms
2025-04-05 02:30:19.994 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:30:19.994 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 193.8355ms
2025-04-05 02:30:19.995 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 197.3686ms
2025-04-05 02:30:20.003 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:30:20.004 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:30:20.004 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:30:20.014 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:30:20.095 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:30:20.097 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:30:20.098 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 83.5532ms
2025-04-05 02:30:20.099 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:30:20.099 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 96.7693ms
2025-04-05 02:36:17.409 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:36:17.409 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:36:17.413 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:36:17.413 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:36:17.414 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:36:17.414 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:36:17.414 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:36:17.414 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:36:17.430 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:36:17.430 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:36:17.455 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:36:17.457 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:36:17.458 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 43.213ms
2025-04-05 02:36:17.458 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:36:17.458 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 43.3693ms
2025-04-05 02:36:17.458 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:36:17.458 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 49.0583ms
2025-04-05 02:36:17.458 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 49.4621ms
2025-04-05 02:36:17.462 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:36:17.463 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:36:17.463 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:36:17.463 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:36:17.468 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:36:17.468 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:36:17.469 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.6521ms
2025-04-05 02:36:17.469 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:36:17.469 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.0839ms
2025-04-05 02:37:27.670 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:27.670 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:27.671 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:37:27.672 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:27.672 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:37:27.672 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:27.675 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:37:27.677 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:37:27.695 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:37:27.702 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:37:27.704 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:37:27.704 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:37:27.705 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 32.8801ms
2025-04-05 02:37:27.705 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 27.6157ms
2025-04-05 02:37:27.705 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:37:27.705 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:37:27.705 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 34.3741ms
2025-04-05 02:37:27.705 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 35.619ms
2025-04-05 02:37:27.745 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:27.745 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:27.745 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:37:27.745 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:37:27.750 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:37:27.751 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:37:27.752 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.4843ms
2025-04-05 02:37:27.752 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:37:27.752 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.4834ms
2025-04-05 02:37:32.743 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:37:32.743 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:32.743 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:37:32.746 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:37:32.757 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:37:32.758 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:37:32.761 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 15.0415ms
2025-04-05 02:37:32.761 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:37:32.762 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 19.4557ms
2025-04-05 02:37:32.768 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 02:37:32.769 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:32.769 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:37:32.773 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:37:32.804 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 02:37:32.805 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:37:32.806 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 32.0725ms
2025-04-05 02:37:32.806 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:37:32.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 37.9005ms
2025-04-05 02:37:33.726 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:33.727 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:33.727 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:37:33.727 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:33.727 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:37:33.727 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:33.728 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:37:33.728 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:37:33.732 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:37:33.735 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:37:33.738 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:37:33.741 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.182ms
2025-04-05 02:37:33.741 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:37:33.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.495ms
2025-04-05 02:37:33.741 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:37:33.741 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 13.749ms
2025-04-05 02:37:33.741 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:37:33.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.7223ms
2025-04-05 02:37:33.745 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:37:33.745 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:37:33.745 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:37:33.745 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:37:33.749 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:37:33.750 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:37:33.750 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.1435ms
2025-04-05 02:37:33.751 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:37:33.751 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.4653ms
2025-04-05 02:38:40.759 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/c70e86e5-ba75-425c-add8-74e74bc69495 - null null
2025-04-05 02:38:40.763 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:40.768 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/c70e86e5-ba75-425c-add8-74e74bc69495 - 204 null null 9.6079ms
2025-04-05 02:38:40.772 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/c70e86e5-ba75-425c-add8-74e74bc69495 - null null
2025-04-05 02:38:40.773 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:40.773 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:40.779 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:40.805 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 02:38:40.941 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 02:38:40.958 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 02:38:40.958 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 179.0655ms
2025-04-05 02:38:40.958 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:40.958 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/c70e86e5-ba75-425c-add8-74e74bc69495 - 204 null null 185.864ms
2025-04-05 02:38:40.962 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:38:40.963 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:40.963 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:40.963 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:40.968 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:38:40.969 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:38:40.970 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 6.5904ms
2025-04-05 02:38:40.970 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:40.970 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 7.522ms
2025-04-05 02:38:43.195 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/9a359bca-9754-4ebe-8a71-7b03a23ef3fb - null null
2025-04-05 02:38:43.195 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:43.195 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/9a359bca-9754-4ebe-8a71-7b03a23ef3fb - 204 null null 0.668ms
2025-04-05 02:38:43.197 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/9a359bca-9754-4ebe-8a71-7b03a23ef3fb - null null
2025-04-05 02:38:43.198 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:43.198 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:43.198 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:43.201 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 02:38:43.210 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 02:38:43.211 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 02:38:43.211 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 12.5965ms
2025-04-05 02:38:43.211 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:43.211 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/9a359bca-9754-4ebe-8a71-7b03a23ef3fb - 204 null null 13.9812ms
2025-04-05 02:38:43.220 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:38:43.220 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:43.221 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:43.221 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:43.224 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:38:43.225 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:38:43.226 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.1648ms
2025-04-05 02:38:43.226 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:43.227 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.9833ms
2025-04-05 02:38:46.308 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/d9e279b1-5cca-4bac-ad2b-3b000705e3c3 - null null
2025-04-05 02:38:46.308 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:46.309 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/d9e279b1-5cca-4bac-ad2b-3b000705e3c3 - 204 null null 0.9299ms
2025-04-05 02:38:46.311 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/d9e279b1-5cca-4bac-ad2b-3b000705e3c3 - null null
2025-04-05 02:38:46.311 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:46.311 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:46.311 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:46.315 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 02:38:46.318 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 02:38:46.319 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 02:38:46.319 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 7.7576ms
2025-04-05 02:38:46.319 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 02:38:46.320 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/d9e279b1-5cca-4bac-ad2b-3b000705e3c3 - 204 null null 8.9392ms
2025-04-05 02:38:46.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:38:46.325 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:38:46.325 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:46.325 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:38:46.328 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:38:46.330 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:38:46.330 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.4442ms
2025-04-05 02:38:46.330 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:38:46.331 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.2946ms
2025-04-05 02:49:30.564 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:49:30.565 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:30.565 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:30.565 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:49:30.587 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:49:30.587 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:30.588 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 22.8446ms
2025-04-05 02:49:30.588 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:30.588 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 24.0075ms
2025-04-05 02:49:30.593 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 02:49:30.593 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:30.593 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:49:30.593 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:49:30.606 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 02:49:30.606 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:30.607 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 13.6631ms
2025-04-05 02:49:30.607 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:49:30.607 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.4101ms
2025-04-05 02:49:47.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:49:47.059 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 02:49:47.059 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:47.059 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:47.059 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:49:47.059 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:47.059 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 02:49:47.065 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:49:47.069 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:47.074 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:49:47.074 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 14.7947ms
2025-04-05 02:49:47.074 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:47.074 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 15.8617ms
2025-04-05 02:49:47.096 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 02:49:47.096 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:47.097 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 23.0769ms
2025-04-05 02:49:47.097 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 02:49:47.097 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 38.648ms
2025-04-05 02:49:49.649 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 02:49:49.649 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:49.649 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:49.649 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 02:49:49.651 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 02:49:49.653 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:49.653 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.33ms
2025-04-05 02:49:49.653 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 02:49:49.654 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.1715ms
2025-04-05 02:49:49.663 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 02:49:49.663 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:49.664 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:49:49.664 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:49:49.667 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 02:49:49.668 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:49.669 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 5.0714ms
2025-04-05 02:49:49.669 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 02:49:49.669 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.3843ms
2025-04-05 02:49:52.444 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:49:52.444 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:49:52.445 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:52.445 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:49:52.445 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:52.445 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 02:49:52.445 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:49:52.445 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 02:49:52.456 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 02:49:52.459 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 02:49:52.461 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 16.4005ms
2025-04-05 02:49:52.462 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 02:49:52.462 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 17.5208ms
2025-04-05 02:49:52.467 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 02:49:52.467 +07:00 [INF] CORS policy execution successful.
2025-04-05 02:49:52.467 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:49:52.467 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 02:49:52.468 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 02:49:52.468 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 02:49:52.469 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 24.0517ms
2025-04-05 02:49:52.469 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 02:49:52.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 25.7428ms
2025-04-05 02:49:52.473 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 02:49:52.474 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 02:49:52.474 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.658ms
2025-04-05 02:49:52.474 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 02:49:52.474 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.6547ms
2025-04-05 03:06:10.259 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:06:10.300 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:06:10.300 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:06:10.300 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:06:10.322 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:06:10.323 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:06:10.323 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 23.1582ms
2025-04-05 03:06:10.323 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:06:10.324 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 65.0263ms
2025-04-05 03:06:10.327 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:06:10.327 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:06:10.327 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:06:10.327 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:06:10.335 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:06:10.336 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:06:10.336 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.0164ms
2025-04-05 03:06:10.336 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:06:10.336 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 9.5983ms
2025-04-05 03:13:59.144 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:13:59.145 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:13:59.145 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:13:59.145 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:13:59.168 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:13:59.169 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:13:59.169 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 23.8592ms
2025-04-05 03:13:59.169 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:13:59.170 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 25.1757ms
2025-04-05 03:13:59.174 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:13:59.174 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:13:59.174 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:13:59.174 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:13:59.181 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:13:59.181 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:13:59.182 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 7.5778ms
2025-04-05 03:13:59.182 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:13:59.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.1846ms
2025-04-05 03:14:02.572 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:02.572 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:02.572 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:02.572 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:02.575 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:02.578 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:02.581 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.6116ms
2025-04-05 03:14:02.581 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:02.581 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.2108ms
2025-04-05 03:14:02.611 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&categoryId=57668683-40b4-456e-9620-2af0dd26c515&AvailableOnly=false - null null
2025-04-05 03:14:02.611 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:02.611 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:02.612 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:02.626 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__categoryId_Value_2='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[CategoryId] = @__categoryId_Value_2
2025-04-05 03:14:02.626 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:02.627 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 15.2519ms
2025-04-05 03:14:02.627 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:02.627 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&categoryId=57668683-40b4-456e-9620-2af0dd26c515&AvailableOnly=false - 200 null application/json; charset=utf-8 16.0554ms
2025-04-05 03:14:05.225 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:05.225 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:05.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:05.226 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:05.230 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:05.231 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:05.231 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.8554ms
2025-04-05 03:14:05.231 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:05.232 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.5843ms
2025-04-05 03:14:05.238 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:14:05.238 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:05.238 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:05.238 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:05.240 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:14:05.241 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:05.241 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 3.4521ms
2025-04-05 03:14:05.241 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:05.241 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 3.8892ms
2025-04-05 03:14:07.535 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:07.536 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:14:07.536 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:07.536 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:07.536 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:07.536 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:07.536 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:14:07.536 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:07.539 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:07.540 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:07.541 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6533ms
2025-04-05 03:14:07.541 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:07.542 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.1984ms
2025-04-05 03:14:07.548 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 03:14:07.548 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:07.549 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 12.2668ms
2025-04-05 03:14:07.549 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:14:07.549 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 13.4039ms
2025-04-05 03:14:16.424 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:14:16.424 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:16.424 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:14:16.428 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:14:16.449 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 03:14:16.449 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:16.456 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 27.509ms
2025-04-05 03:14:16.456 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:14:16.456 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 32.2464ms
2025-04-05 03:14:19.447 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:19.447 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:14:19.448 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:19.448 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:19.448 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:19.448 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:19.448 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:14:19.448 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:19.453 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:19.456 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:19.465 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 16.234ms
2025-04-05 03:14:19.465 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:19.466 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.2601ms
2025-04-05 03:14:19.492 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 03:14:19.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:19.493 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 45.2479ms
2025-04-05 03:14:19.494 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:14:19.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 46.3049ms
2025-04-05 03:14:20.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:20.218 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:20.218 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:20.219 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:20.221 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:20.222 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:20.223 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.2861ms
2025-04-05 03:14:20.223 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:20.223 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.4217ms
2025-04-05 03:14:20.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:14:20.237 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:20.237 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:20.237 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:20.249 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:14:20.252 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:20.252 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.6391ms
2025-04-05 03:14:20.252 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:20.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 15.8718ms
2025-04-05 03:14:21.862 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:21.862 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:21.863 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:21.863 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:21.865 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:21.866 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:21.866 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7995ms
2025-04-05 03:14:21.867 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:21.867 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5722ms
2025-04-05 03:14:21.871 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - null null
2025-04-05 03:14:21.871 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:21.871 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:21.871 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:21.907 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-05 03:14:21.907 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:21.908 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 36.4111ms
2025-04-05 03:14:21.908 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:21.908 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 37.212ms
2025-04-05 03:14:22.611 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:14:22.611 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:22.611 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:22.612 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:14:22.615 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:14:22.616 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:22.616 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.6214ms
2025-04-05 03:14:22.616 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:14:22.617 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 5.2916ms
2025-04-05 03:14:22.620 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:14:22.620 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:22.620 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:22.620 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:22.629 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:14:22.629 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:22.629 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 9.2641ms
2025-04-05 03:14:22.630 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:14:22.630 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 10.05ms
2025-04-05 03:14:23.940 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:14:23.940 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:14:23.940 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:23.940 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:23.940 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:14:23.940 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:14:23.940 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:14:23.940 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:14:23.952 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:14:23.953 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:14:23.953 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 12.5884ms
2025-04-05 03:14:23.953 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:14:23.954 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 13.6951ms
2025-04-05 03:14:23.966 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 03:14:23.967 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 03:14:23.968 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 27.3875ms
2025-04-05 03:14:23.968 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:14:23.968 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 28.4866ms
2025-04-05 03:14:23.979 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:14:23.979 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:14:23.979 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:14:23.980 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:14:23.985 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 03:14:23.985 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:14:23.986 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 5.9338ms
2025-04-05 03:14:23.986 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:14:23.986 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.304ms
2025-04-05 03:17:37.581 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:17:37.586 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:37.586 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:17:37.586 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:17:37.588 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:17:37.588 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:37.590 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:37.591 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:17:37.598 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:17:37.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:37.606 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 14.3644ms
2025-04-05 03:17:37.606 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:37.608 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 18.4089ms
2025-04-05 03:17:37.609 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 03:17:37.612 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:37.616 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 29.8015ms
2025-04-05 03:17:37.616 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:17:37.616 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 35.0911ms
2025-04-05 03:17:41.442 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:17:41.443 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:41.443 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:17:41.443 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:17:41.448 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 03:17:41.449 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:41.449 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 6.5988ms
2025-04-05 03:17:41.449 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:17:41.451 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 8.3623ms
2025-04-05 03:17:42.550 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:17:42.550 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:42.550 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:42.550 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:17:42.555 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:17:42.555 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:42.556 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 5.4816ms
2025-04-05 03:17:42.556 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:42.556 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 6.3065ms
2025-04-05 03:17:42.562 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:17:42.562 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:42.562 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:17:42.562 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:17:42.578 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:17:42.578 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:42.579 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 16.5779ms
2025-04-05 03:17:42.579 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:17:42.579 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 17.3087ms
2025-04-05 03:17:42.909 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:17:42.909 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:17:42.909 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:42.909 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:42.909 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:42.909 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:17:42.909 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:17:42.909 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:17:42.912 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:17:42.914 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:42.916 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 6.5427ms
2025-04-05 03:17:42.916 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:42.916 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 7.1565ms
2025-04-05 03:17:42.918 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 03:17:42.919 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:42.919 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 9.9234ms
2025-04-05 03:17:42.919 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 03:17:42.920 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 10.523ms
2025-04-05 03:17:43.751 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:17:43.751 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:43.752 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:17:43.752 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:17:43.754 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 03:17:43.755 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:43.756 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.4802ms
2025-04-05 03:17:43.756 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 03:17:43.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.0815ms
2025-04-05 03:17:46.366 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 03:17:46.366 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:46.366 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 03:17:46.369 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-05 03:17:46.382 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-05 03:17:46.383 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-05 03:17:46.385 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 16.2107ms
2025-04-05 03:17:46.386 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 03:17:46.386 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 19.7603ms
2025-04-05 03:17:49.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:17:49.214 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:49.214 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:49.214 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:17:49.217 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:17:49.218 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:49.219 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 4.3967ms
2025-04-05 03:17:49.219 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:17:49.219 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.9169ms
2025-04-05 03:17:49.225 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:17:49.225 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:49.225 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:17:49.226 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:17:49.235 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:17:49.236 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:49.237 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.8692ms
2025-04-05 03:17:49.238 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:17:49.238 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 12.5167ms
2025-04-05 03:17:50.756 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:17:50.756 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:17:50.756 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:50.756 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:50.756 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:17:50.756 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:50.756 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:17:50.756 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:17:50.761 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:17:50.762 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:50.763 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 6.2608ms
2025-04-05 03:17:50.763 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:50.763 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 6.881ms
2025-04-05 03:17:50.764 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 03:17:50.764 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 03:17:50.765 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 8.7281ms
2025-04-05 03:17:50.765 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:17:50.766 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 9.3309ms
2025-04-05 03:17:50.783 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:17:50.783 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:50.783 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:17:50.783 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:17:50.788 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 03:17:50.788 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:17:50.788 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.7879ms
2025-04-05 03:17:50.788 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:17:50.789 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.5739ms
2025-04-05 03:17:53.677 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/9f8aa62a-81ea-4933-a640-05f5357d127e - null null
2025-04-05 03:17:53.677 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:53.677 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/9f8aa62a-81ea-4933-a640-05f5357d127e - 204 null null 0.2459ms
2025-04-05 03:17:53.679 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/9f8aa62a-81ea-4933-a640-05f5357d127e - null null
2025-04-05 03:17:53.679 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:53.679 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:17:53.679 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:17:53.681 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 03:17:53.684 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 03:17:53.684 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 03:17:53.684 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 5.5944ms
2025-04-05 03:17:53.685 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:17:53.685 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/9f8aa62a-81ea-4933-a640-05f5357d127e - 204 null null 6.0988ms
2025-04-05 03:17:53.688 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:17:53.688 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:53.688 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:53.688 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:17:53.690 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:17:53.691 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:17:53.691 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.3104ms
2025-04-05 03:17:53.691 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:53.692 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 3.8555ms
2025-04-05 03:17:55.290 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/5db4c139-c8c4-46aa-8ebc-b7c99a0fa3ce - null null
2025-04-05 03:17:55.291 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:55.291 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/5db4c139-c8c4-46aa-8ebc-b7c99a0fa3ce - 204 null null 0.2731ms
2025-04-05 03:17:55.292 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/5db4c139-c8c4-46aa-8ebc-b7c99a0fa3ce - null null
2025-04-05 03:17:55.293 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:55.293 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:17:55.293 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:17:55.294 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 03:17:55.302 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 03:17:55.302 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 03:17:55.302 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 9.4576ms
2025-04-05 03:17:55.302 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:17:55.302 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/5db4c139-c8c4-46aa-8ebc-b7c99a0fa3ce - 204 null null 9.8529ms
2025-04-05 03:17:55.305 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:17:55.305 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:17:55.305 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:55.305 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:17:55.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:17:55.308 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:17:55.309 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.6435ms
2025-04-05 03:17:55.309 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:17:55.309 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 4.6338ms
2025-04-05 03:18:04.311 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryBi4GvkyRXBa8RyBF 500
2025-04-05 03:18:04.311 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:18:04.312 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 03:18:04.316 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:18:04.351 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-05 03:18:04.377 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-05 03:18:04.418 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-05 03:18:04.420 +07:00 [INF] New discussion added: "102830c9-7ce2-4db5-963c-39d92960a031" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-05 03:18:04.421 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-05 03:18:04.436 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 118.995ms
2025-04-05 03:18:04.436 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 03:18:04.436 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 125.1066ms
2025-04-05 03:18:04.440 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:18:04.440 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:18:04.440 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:18:04.440 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:18:04.442 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:18:04.443 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:18:04.444 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 3.8807ms
2025-04-05 03:18:04.444 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:18:04.444 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.2977ms
2025-04-05 03:23:11.167 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:11.167 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:11.167 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:23:11.167 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:23:11.194 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:11.195 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:11.195 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:23:11.198 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:23:11.215 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:23:11.220 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:23:11.221 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 53.5236ms
2025-04-05 03:23:11.221 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:23:11.221 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 56.004ms
2025-04-05 03:23:11.225 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 03:23:11.226 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 03:23:11.227 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 28.0635ms
2025-04-05 03:23:11.227 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:23:11.227 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 33.3557ms
2025-04-05 03:23:11.274 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:11.274 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:11.274 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:23:11.274 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:23:11.278 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 03:23:11.279 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:23:11.279 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.8956ms
2025-04-05 03:23:11.279 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:23:11.280 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.3992ms
2025-04-05 03:23:40.445 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:40.445 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:40.445 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:23:40.445 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:23:40.472 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:40.475 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:40.475 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 03:23:40.476 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:23:40.476 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:23:40.477 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 03:23:40.490 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 44.1854ms
2025-04-05 03:23:40.491 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:23:40.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 49.2769ms
2025-04-05 03:23:40.494 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:23:40.524 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:23:40.525 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 48.1004ms
2025-04-05 03:23:40.525 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:23:40.525 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 53.1888ms
2025-04-05 03:23:40.576 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:23:40.576 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:23:40.577 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:23:40.577 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:23:40.582 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 03:23:40.586 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:23:40.586 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 9.6052ms
2025-04-05 03:23:40.587 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:23:40.588 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 11.4065ms
2025-04-05 03:25:56.498 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/102830c9-7ce2-4db5-963c-39d92960a031 - null null
2025-04-05 03:25:56.498 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:25:56.498 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/102830c9-7ce2-4db5-963c-39d92960a031 - 204 null null 0.449ms
2025-04-05 03:25:56.500 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/102830c9-7ce2-4db5-963c-39d92960a031 - null null
2025-04-05 03:25:56.500 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:25:56.500 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:25:56.500 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:25:56.510 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 03:25:56.552 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 03:25:56.557 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 03:25:56.557 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 56.934ms
2025-04-05 03:25:56.559 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:25:56.560 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/102830c9-7ce2-4db5-963c-39d92960a031 - 204 null null 60.0467ms
2025-04-05 03:25:56.564 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:25:56.564 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:25:56.564 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:25:56.564 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:25:56.569 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:25:56.569 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:25:56.570 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.3799ms
2025-04-05 03:25:56.570 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:25:56.570 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 6.0364ms
2025-04-05 03:26:05.853 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryq4AqveqCBNcmARBg 496
2025-04-05 03:26:05.853 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:26:05.853 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 03:26:05.853 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:26:05.858 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-05 03:26:05.869 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-05 03:26:05.873 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-05 03:26:05.874 +07:00 [INF] New discussion added: "f492bebd-9c82-4db8-b257-6ce798ac364e" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-05 03:26:05.874 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-05 03:26:05.875 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 21.791ms
2025-04-05 03:26:05.875 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 03:26:05.875 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 22.2053ms
2025-04-05 03:26:05.880 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:26:05.881 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:26:05.881 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:26:05.881 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:26:05.886 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:26:05.886 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:26:05.886 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 5.5357ms
2025-04-05 03:26:05.886 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:26:05.886 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 5.9951ms
2025-04-05 03:27:02.258 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:27:02.258 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:02.258 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:27:02.258 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:27:02.265 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:27:02.265 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:02.265 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:27:02.269 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:27:02.276 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 03:27:02.277 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 03:27:02.280 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:27:02.280 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 21.7831ms
2025-04-05 03:27:02.280 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 03:27:02.281 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 22.8809ms
2025-04-05 03:27:02.283 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:27:02.285 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 15.5262ms
2025-04-05 03:27:02.285 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:27:02.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 19.7745ms
2025-04-05 03:27:02.286 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:27:02.286 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:02.286 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:27:02.286 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 03:27:02.290 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 03:27:02.291 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:27:02.291 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 4.7806ms
2025-04-05 03:27:02.291 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 03:27:02.291 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 5.4316ms
2025-04-05 03:27:52.104 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/discussions/f492bebd-9c82-4db8-b257-6ce798ac364e - null null
2025-04-05 03:27:52.104 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:52.104 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/discussions/f492bebd-9c82-4db8-b257-6ce798ac364e - 204 null null 0.3449ms
2025-04-05 03:27:52.107 +07:00 [INF] Request starting HTTP/2 DELETE https://localhost:44338/api/discussions/f492bebd-9c82-4db8-b257-6ce798ac364e - null null
2025-04-05 03:27:52.107 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:52.107 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:27:52.107 +07:00 [INF] Route matched with {action = "DeleteDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteDiscussion(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:27:52.115 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__discussionId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId]
FROM [Discussions] AS [d]
WHERE [d].[Id] = @__discussionId_0
2025-04-05 03:27:52.126 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Discussions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-05 03:27:52.127 +07:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-04-05 03:27:52.127 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend) in 19.5346ms
2025-04-05 03:27:52.127 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.DeleteDiscussion (ems_backend)'
2025-04-05 03:27:52.127 +07:00 [INF] Request finished HTTP/2 DELETE https://localhost:44338/api/discussions/f492bebd-9c82-4db8-b257-6ce798ac364e - 204 null null 20.2011ms
2025-04-05 03:27:52.132 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 03:27:52.132 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:27:52.132 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:27:52.132 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 03:27:52.139 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 03:27:52.140 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 03:27:52.140 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.5967ms
2025-04-05 03:27:52.140 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 03:27:52.141 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 8.428ms
2025-04-05 03:28:05.461 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 03:28:05.461 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:28:05.461 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:28:05.461 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 03:28:05.465 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 03:28:05.467 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:28:05.471 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.9789ms
2025-04-05 03:28:05.471 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 03:28:05.471 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.6537ms
2025-04-05 03:28:05.481 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 03:28:05.481 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:28:05.482 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:28:05.482 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 03:28:05.494 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 03:28:05.495 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 03:28:05.496 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 14.081ms
2025-04-05 03:28:05.496 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 03:28:05.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 14.8489ms
2025-04-05 03:52:18.335 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 03:52:18.336 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:52:18.337 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 2.3751ms
2025-04-05 03:52:18.372 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 03:52:18.374 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:52:18.374 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:52:18.377 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 03:52:18.432 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 03:52:18.514 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 03:52:18.518 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 141.4153ms
2025-04-05 03:52:18.519 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:52:18.519 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 146.5433ms
2025-04-05 03:52:50.391 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 03:52:50.392 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:52:50.392 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.6467ms
2025-04-05 03:52:50.394 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 03:52:50.394 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:52:50.394 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:52:50.394 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 03:52:50.402 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 03:52:50.472 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 03:52:50.472 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 78.062ms
2025-04-05 03:52:50.472 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:52:50.472 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 78.4906ms
2025-04-05 03:54:25.092 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 03:54:25.092 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:54:25.092 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.574ms
2025-04-05 03:54:25.094 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 03:54:25.094 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:54:25.094 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:54:25.094 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 03:54:25.098 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 03:54:25.172 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 03:54:25.172 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 78.1976ms
2025-04-05 03:54:25.172 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:54:25.173 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 78.7692ms
2025-04-05 03:54:46.612 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 03:54:46.613 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:54:46.616 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 4.3645ms
2025-04-05 03:54:46.620 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 03:54:46.620 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:54:46.620 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:54:46.620 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 03:54:46.624 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 03:54:46.691 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 03:54:46.692 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 71.4268ms
2025-04-05 03:54:46.692 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:54:46.692 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 72.0718ms
2025-04-05 03:55:27.608 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 03:55:27.608 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:55:27.609 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.7251ms
2025-04-05 03:55:27.610 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 03:55:27.611 +07:00 [INF] CORS policy execution successful.
2025-04-05 03:55:27.611 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:55:27.611 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 03:55:27.615 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 03:55:27.690 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 03:55:27.691 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 79.9688ms
2025-04-05 03:55:27.691 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 03:55:27.691 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 80.466ms
2025-04-05 04:01:35.407 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 04:01:35.408 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:35.408 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.4251ms
2025-04-05 04:01:35.409 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 04:01:35.410 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:35.410 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:01:35.410 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 04:01:35.423 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 04:01:35.491 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 04:01:35.492 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 81.7251ms
2025-04-05 04:01:35.492 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:01:35.492 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 82.3623ms
2025-04-05 04:01:38.032 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 04:01:38.032 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:38.032 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:01:38.032 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 04:01:38.036 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 04:01:38.106 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 04:01:38.106 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 74.148ms
2025-04-05 04:01:38.106 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:01:38.106 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 74.5604ms
2025-04-05 04:01:49.043 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 04:01:49.043 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:49.043 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:01:49.043 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 04:01:49.046 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 04:01:49.047 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:01:49.047 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.9417ms
2025-04-05 04:01:49.047 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:01:49.047 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.5063ms
2025-04-05 04:01:49.066 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 04:01:49.067 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:49.068 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 04:01:49.068 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 04:01:49.079 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 04:01:49.079 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:01:49.080 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 11.8889ms
2025-04-05 04:01:49.080 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 04:01:49.080 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 13.4039ms
2025-04-05 04:01:50.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 04:01:50.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 04:01:50.454 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:50.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 04:01:50.454 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:50.454 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:01:50.454 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 04:01:50.454 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 04:01:50.458 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 04:01:50.459 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:01:50.463 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.4755ms
2025-04-05 04:01:50.463 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:01:50.463 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.9839ms
2025-04-05 04:01:50.476 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 04:01:50.477 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:01:50.477 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 22.6851ms
2025-04-05 04:01:50.477 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 04:01:50.477 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 23.0871ms
2025-04-05 04:01:51.036 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 04:01:51.036 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:51.036 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 04:01:51.036 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 04:01:51.041 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 04:01:51.041 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:01:51.041 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 4.8501ms
2025-04-05 04:01:51.041 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 04:01:51.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.2939ms
2025-04-05 04:01:55.126 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 04:01:55.126 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:01:55.126 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 04:01:55.126 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-05 04:01:55.133 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-05 04:01:55.134 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-05 04:01:55.134 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 8.5236ms
2025-04-05 04:01:55.135 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 04:01:55.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 9.0572ms
2025-04-05 04:03:44.242 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 04:03:44.243 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:03:44.245 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 3.1881ms
2025-04-05 04:03:44.247 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 04:03:44.247 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:03:44.247 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:03:44.247 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 04:03:44.252 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 04:03:44.322 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 04:03:44.323 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 75.717ms
2025-04-05 04:03:44.323 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:03:44.323 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 76.2044ms
2025-04-05 04:05:25.941 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 04:05:25.942 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:05:25.942 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:05:25.942 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 04:05:25.942 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 04:05:25.942 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:05:25.942 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 04:05:25.942 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 04:05:25.953 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 04:05:25.955 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:05:25.960 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 18.1906ms
2025-04-05 04:05:25.960 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:05:25.962 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 20.815ms
2025-04-05 04:05:25.970 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 04:05:25.970 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:05:25.971 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 27.8799ms
2025-04-05 04:05:25.971 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 04:05:25.971 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 29.1691ms
2025-04-05 04:05:26.429 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 04:05:26.429 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:05:26.429 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:05:26.429 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 04:05:26.430 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 04:05:26.431 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:05:26.432 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 2.9887ms
2025-04-05 04:05:26.432 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 04:05:26.432 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 3.6063ms
2025-04-05 04:05:26.438 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 04:05:26.439 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:05:26.439 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 04:05:26.439 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 04:05:26.455 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 04:05:26.455 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 04:05:26.457 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.2134ms
2025-04-05 04:05:26.457 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 04:05:26.457 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 18.8419ms
2025-04-05 04:06:09.442 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 04:06:09.442 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:06:09.443 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 0.6185ms
2025-04-05 04:06:09.444 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 04:06:09.445 +07:00 [INF] CORS policy execution successful.
2025-04-05 04:06:09.445 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:06:09.445 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 04:06:09.450 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 04:06:09.521 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 04:06:09.522 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 76.7937ms
2025-04-05 04:06:09.522 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 04:06:09.522 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 77.254ms
2025-04-05 14:47:31.776 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:44338/api/auth/login - null null
2025-04-05 14:47:31.783 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:31.795 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:44338/api/auth/login - 204 null null 22.8935ms
2025-04-05 14:47:31.797 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/auth/login - application/json 54
2025-04-05 14:47:31.799 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:31.799 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 14:47:31.800 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(ems_backend.Services.LoginRequest) on controller ems_backend.Controllers.AuthController (ems_backend).
2025-04-05 14:47:31.974 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Email] = @__email_0
2025-04-05 14:47:32.051 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Models.User'.
2025-04-05 14:47:32.052 +07:00 [INF] Executed action ems_backend.Controllers.AuthController.Login (ems_backend) in 252.0841ms
2025-04-05 14:47:32.053 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.AuthController.Login (ems_backend)'
2025-04-05 14:47:32.053 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/auth/login - 200 null application/json; charset=utf-8 255.3121ms
2025-04-05 14:47:34.134 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:47:34.134 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:34.134 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:47:34.134 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:47:34.140 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:47:34.145 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:47:34.147 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.6128ms
2025-04-05 14:47:34.147 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:47:34.147 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 13.5373ms
2025-04-05 14:47:34.161 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 14:47:34.162 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:34.162 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:47:34.162 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:47:34.200 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 14:47:34.200 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:47:34.201 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 38.3799ms
2025-04-05 14:47:34.201 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:47:34.201 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 39.9502ms
2025-04-05 14:47:35.817 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:47:35.818 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:35.818 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:47:35.818 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:47:35.818 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:47:35.818 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:35.818 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:47:35.818 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 14:47:35.841 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 14:47:35.841 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 14:47:35.842 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 24.0162ms
2025-04-05 14:47:35.842 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:47:35.842 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 25.5566ms
2025-04-05 14:47:35.850 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:47:35.850 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:35.850 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 14:47:35.851 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 14:47:35.864 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 14:47:35.865 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 14:47:35.865 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 14:47:35.866 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 14:47:35.866 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 47.5403ms
2025-04-05 14:47:35.866 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 15.2324ms
2025-04-05 14:47:35.866 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:47:35.866 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 14:47:35.866 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 48.1477ms
2025-04-05 14:47:35.866 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 16.1273ms
2025-04-05 14:47:55.965 +07:00 [INF] Request starting HTTP/2 POST https://localhost:44338/api/discussions - multipart/form-data; boundary=----WebKitFormBoundaryBGNjDsS3CMgLG6AP 399796
2025-04-05 14:47:55.965 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:47:55.965 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 14:47:55.965 +07:00 [INF] Route matched with {action = "CreateDiscussion", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateDiscussion(NewDiscussionDto) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 14:47:56.090 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Events] AS [e]
WHERE [e].[Id] = @__p_0
2025-04-05 14:47:56.095 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Users] AS [u]
WHERE [u].[Id] = @__p_0
2025-04-05 14:48:06.800 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = Guid), @p4='?' (Size = 4000), @p5='?' (Size = 4000), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Discussions] ([Id], [CreatedAt], [Description], [EventId], [Photos], [Title], [UpdatedAt], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-04-05 14:48:06.800 +07:00 [INF] New discussion added: "4d661039-338d-43dc-9a10-bf9ba355ae9b" for EventId "7e218c8d-26cc-4847-b66a-bd4279661042" by UserId "a8511a3a-49d5-459a-bce9-1040026f17b1"
2025-04-05 14:48:06.800 +07:00 [INF] Executing CreatedAtActionResult, writing value of type 'DiscussionService+DiscussionViewDto'.
2025-04-05 14:48:06.803 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend) in 10837.6424ms
2025-04-05 14:48:06.803 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.CreateDiscussion (ems_backend)'
2025-04-05 14:48:06.805 +07:00 [INF] Request finished HTTP/2 POST https://localhost:44338/api/discussions - 201 null application/json; charset=utf-8 10839.6465ms
2025-04-05 14:48:06.807 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:48:06.807 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:48:06.807 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:48:06.807 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 14:48:06.811 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 14:48:06.811 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:48:06.811 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 4.3564ms
2025-04-05 14:48:06.811 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:48:06.811 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.7333ms
2025-04-05 14:48:21.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:48:21.690 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:48:21.690 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:48:21.690 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:48:21.692 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:48:21.693 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:48:21.694 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.6181ms
2025-04-05 14:48:21.694 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:48:21.694 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.2968ms
2025-04-05 14:48:21.707 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 14:48:21.708 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:48:21.708 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:48:21.708 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:48:21.726 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 14:48:21.726 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:48:21.727 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 18.4983ms
2025-04-05 14:48:21.727 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:48:21.727 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 19.4841ms
2025-04-05 14:48:52.748 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:48:52.748 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:48:52.748 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:48:52.748 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:48:52.754 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:48:52.757 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:48:52.758 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 9.5781ms
2025-04-05 14:48:52.758 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:48:52.758 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 10.1283ms
2025-04-05 14:48:52.770 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 14:48:52.770 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:48:52.770 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:48:52.770 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:48:52.778 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 14:48:52.779 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:48:52.779 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 8.4837ms
2025-04-05 14:48:52.779 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:48:52.779 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 8.8766ms
2025-04-05 14:52:09.831 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:52:09.832 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:09.832 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:09.832 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:52:09.869 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:52:09.873 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:09.874 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 41.7109ms
2025-04-05 14:52:09.874 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:09.874 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 43.3516ms
2025-04-05 14:52:09.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - null null
2025-04-05 14:52:09.877 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:09.877 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:09.877 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:52:09.887 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1 AND [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETDATE() AND [e].[TicketsLeft] > 0
2025-04-05 14:52:09.887 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:09.887 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 10.065ms
2025-04-05 14:52:09.887 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:09.887 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=true - 200 null application/json; charset=utf-8 10.5358ms
2025-04-05 14:52:10.342 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:52:10.342 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:10.342 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:10.342 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:52:10.345 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:52:10.346 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:10.346 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 3.7545ms
2025-04-05 14:52:10.346 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:10.346 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 4.1515ms
2025-04-05 14:52:10.353 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 14:52:10.354 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:10.354 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:10.354 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:52:10.360 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 14:52:10.360 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:10.360 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 6.4095ms
2025-04-05 14:52:10.360 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:10.360 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 6.7854ms
2025-04-05 14:52:16.598 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:52:16.599 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:16.599 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:16.599 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 14:52:16.599 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:52:16.600 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:16.600 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 14:52:16.600 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:52:16.602 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:52:16.603 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:16.606 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 7.4664ms
2025-04-05 14:52:16.606 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:16.607 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 8.1334ms
2025-04-05 14:52:16.612 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 14:52:16.613 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:16.613 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 12.9155ms
2025-04-05 14:52:16.613 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 14:52:16.614 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 15.0331ms
2025-04-05 14:52:17.713 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 14:52:17.713 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:17.713 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 14:52:17.713 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 14:52:17.718 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 14:52:17.718 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:17.718 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 5.0351ms
2025-04-05 14:52:17.719 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 14:52:17.719 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 5.8399ms
2025-04-05 14:52:23.624 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 14:52:23.624 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:23.624 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 14:52:23.624 +07:00 [INF] Route matched with {action = "GetUserById", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetUserById(System.Guid) on controller ems_backend.Controllers.UserController (ems_backend).
2025-04-05 14:52:23.641 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[FirstName] AS [Firstname], [u].[LastName] AS [Lastname], [u].[Email], [u].[Phone], [u].[Dob], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [t].[UserId] = @__userId_0 AND [t].[Status] = 1) AS [ParticipatedEvents], (
    SELECT COUNT(*)
    FROM [Events] AS [e]
    WHERE [e].[OwnerId] = @__userId_0 AND [e].[IsCanceled] = CAST(0 AS bit)) AS [HostedEvents]
FROM [Users] AS [u]
WHERE [u].[Id] = @__userId_0
2025-04-05 14:52:23.642 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.UserDTO'.
2025-04-05 14:52:23.642 +07:00 [INF] Executed action ems_backend.Controllers.UserController.GetUserById (ems_backend) in 17.8069ms
2025-04-05 14:52:23.642 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.UserController.GetUserById (ems_backend)'
2025-04-05 14:52:23.642 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/users/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 18.5625ms
2025-04-05 14:52:42.310 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:52:42.310 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:42.310 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:42.310 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:52:42.314 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:52:42.315 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:42.318 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.3611ms
2025-04-05 14:52:42.318 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:52:42.322 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 12.456ms
2025-04-05 14:52:42.327 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - null null
2025-04-05 14:52:42.327 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:42.327 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:42.327 +07:00 [INF] Route matched with {action = "GetEventsFilter", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsFilter(System.Nullable`1[System.Decimal], System.Nullable`1[System.Decimal], System.Nullable`1[System.DateTime], System.Nullable`1[System.DateTime], System.Nullable`1[System.Boolean], System.Nullable`1[System.Guid], System.String) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:52:42.329 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__minPrice_Value_0='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @__maxPrice_Value_1='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[TicketPrice] >= @__minPrice_Value_0 AND [e].[TicketPrice] <= @__maxPrice_Value_1
2025-04-05 14:52:42.330 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:42.331 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsFilter (ems_backend) in 4.0462ms
2025-04-05 14:52:42.331 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsFilter (ems_backend)'
2025-04-05 14:52:42.331 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/filter?minPrice=0&maxPrice=1000000&AvailableOnly=false - 200 null application/json; charset=utf-8 4.6303ms
2025-04-05 14:52:50.473 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:52:50.473 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:52:50.473 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:50.473 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:50.473 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:52:50.473 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:52:50.473 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:52:50.473 +07:00 [INF] Route matched with {action = "GetDiscussionsByEventId", controller = "Discussion"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetDiscussionsByEventId(System.Guid) on controller ems_backend.Controllers.DiscussionController (ems_backend).
2025-04-05 14:52:50.477 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[CreatedAt], [d].[Description], [d].[EventId], [d].[Photos], [d].[Title], [d].[UpdatedAt], [d].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Discussions] AS [d]
INNER JOIN [Users] AS [u] ON [d].[UserId] = [u].[Id]
WHERE [d].[EventId] = @__eventId_0
ORDER BY [d].[CreatedAt] DESC
2025-04-05 14:52:50.480 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DiscussionService+DiscussionViewDto, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:52:50.481 +07:00 [INF] Executed action ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend) in 7.9031ms
2025-04-05 14:52:50.481 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.DiscussionController.GetDiscussionsByEventId (ems_backend)'
2025-04-05 14:52:50.481 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/discussions/by-events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 8.3097ms
2025-04-05 14:52:50.486 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 14:52:50.486 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 14:52:50.487 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 13.7951ms
2025-04-05 14:52:50.487 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:52:50.487 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 14.4433ms
2025-04-05 14:52:50.495 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:52:50.496 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:52:50.496 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 14:52:50.496 +07:00 [INF] Route matched with {action = "GetTicketByUserAndEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketByUserAndEvent(System.Guid, System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 14:52:50.502 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__eventId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[EventId], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[EndDate], [e].[IsCanceled], [e].[Location], [e].[Name], [e].[OwnerId], [e].[StartDate], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0 AND [t].[EventId] = @__eventId_1
2025-04-05 14:52:50.502 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-04-05 14:52:50.503 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend) in 6.181ms
2025-04-05 14:52:50.503 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketByUserAndEvent (ems_backend)'
2025-04-05 14:52:50.503 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 404 null application/json; charset=utf-8 7.3945ms
2025-04-05 14:53:01.517 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:53:01.517 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:01.517 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:53:01.517 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:53:01.518 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:53:01.518 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:01.518 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-05 14:53:01.522 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:53:01.523 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:53:01.526 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 8.6864ms
2025-04-05 14:53:01.526 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:53:01.527 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 9.3051ms
2025-04-05 14:53:01.537 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - null null
2025-04-05 14:53:01.537 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:01.537 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:53:01.537 +07:00 [INF] Route matched with {action = "GetEvent", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEvent(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:53:01.539 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[Id] = @__id_0
2025-04-05 14:53:01.540 +07:00 [INF] Executing OkObjectResult, writing value of type 'ems_backend.Services.EventDTO'.
2025-04-05 14:53:01.541 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEvent (ems_backend) in 3.8753ms
2025-04-05 14:53:01.541 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEvent (ems_backend)'
2025-04-05 14:53:01.541 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 4.6773ms
2025-04-05 14:53:01.544 +07:00 [INF] Route matched with {action = "GetTicketsByEvent", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByEvent(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 14:53:01.591 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__eventId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[EventId] = @__eventId_0
2025-04-05 14:53:01.592 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:53:01.592 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend) in 48.5374ms
2025-04-05 14:53:01.592 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByEvent (ems_backend)'
2025-04-05 14:53:01.592 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/event/7e218c8d-26cc-4847-b66a-bd4279661042 - 200 null application/json; charset=utf-8 75.0068ms
2025-04-05 14:53:16.093 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/categories - null null
2025-04-05 14:53:16.093 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:16.093 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 14:53:16.093 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:53:16.093 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:16.093 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 14:53:16.093 +07:00 [INF] Route matched with {action = "GetAllCategories", controller = "EventCategory"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller ems_backend.Controllers.EventCategoryController (ems_backend).
2025-04-05 14:53:16.093 +07:00 [INF] Route matched with {action = "GetEventsByOwnerId", controller = "Event"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetEventsByOwnerId(System.Guid) on controller ems_backend.Controllers.EventController (ems_backend).
2025-04-05 14:53:16.104 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name]
FROM [EventCategories] AS [e]
2025-04-05 14:53:16.105 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventCategoryDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:53:16.106 +07:00 [INF] Executed action ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend) in 12.4117ms
2025-04-05 14:53:16.106 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventCategoryController.GetAllCategories (ems_backend)'
2025-04-05 14:53:16.106 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/categories - 200 null application/json; charset=utf-8 13.0357ms
2025-04-05 14:53:16.110 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ownerId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[Id], [e].[Name], [e].[Description], [e].[StartDate], [e].[EndDate], [e].[TicketPrice], [e].[TicketsLeft], [e].[OwnerId], [u].[FirstName] AS [OwnerFirstName], [u].[LastName] AS [OwnerLastName], [e].[Location], [e].[CategoryId], [e0].[Name] AS [CategoryName], (
    SELECT COUNT(*)
    FROM [Tickets] AS [t]
    WHERE [e].[Id] = [t].[EventId]) AS [TicketCount], [e].[IsCanceled], CASE
    WHEN [e].[IsCanceled] = CAST(0 AS bit) AND [e].[EndDate] > GETUTCDATE() AND [e].[TicketsLeft] > 0 THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END AS [RegisterAvaliable]
FROM [Events] AS [e]
INNER JOIN [Users] AS [u] ON [e].[OwnerId] = [u].[Id]
INNER JOIN [EventCategories] AS [e0] ON [e].[CategoryId] = [e0].[Id]
WHERE [e].[OwnerId] = @__ownerId_0
2025-04-05 14:53:16.110 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.EventDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:53:16.110 +07:00 [INF] Executed action ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend) in 17.0873ms
2025-04-05 14:53:16.110 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.EventController.GetEventsByOwnerId (ems_backend)'
2025-04-05 14:53:16.111 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/events/owner/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 17.6295ms
2025-04-05 14:53:17.944 +07:00 [INF] Request starting HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - null null
2025-04-05 14:53:17.944 +07:00 [INF] CORS policy execution successful.
2025-04-05 14:53:17.944 +07:00 [INF] Executing endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 14:53:17.944 +07:00 [INF] Route matched with {action = "GetTicketsByUser", controller = "Ticket"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTicketsByUser(System.Guid) on controller ems_backend.Controllers.TicketController (ems_backend).
2025-04-05 14:53:17.948 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[EventId], [e].[Name], [e].[StartDate], [e].[EndDate], [t].[Status], [t].[UserId], [e].[Id], [e].[CategoryId], [e].[Description], [e].[IsCanceled], [e].[Location], [e].[OwnerId], [e].[TicketPrice], [e].[TicketsLeft], [u].[Id], [u].[Dob], [u].[Email], [u].[FirstName], [u].[LastName], [u].[Password], [u].[Phone]
FROM [Tickets] AS [t]
INNER JOIN [Events] AS [e] ON [t].[EventId] = [e].[Id]
INNER JOIN [Users] AS [u] ON [t].[UserId] = [u].[Id]
WHERE [t].[UserId] = @__userId_0
2025-04-05 14:53:17.948 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ems_backend.Services.TicketService+TicketDTO, ems_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-05 14:53:17.948 +07:00 [INF] Executed action ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend) in 3.7739ms
2025-04-05 14:53:17.948 +07:00 [INF] Executed endpoint 'ems_backend.Controllers.TicketController.GetTicketsByUser (ems_backend)'
2025-04-05 14:53:17.948 +07:00 [INF] Request finished HTTP/2 GET https://localhost:44338/api/tickets/user/a8511a3a-49d5-459a-bce9-1040026f17b1 - 200 null application/json; charset=utf-8 4.1827ms
